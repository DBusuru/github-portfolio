{
  "version": 3,
  "sources": ["../../rrweb-snapshot/dist/rrweb-snapshot.js", "../src/style.ts", "../src/document.ts", "../src/diff.ts", "../src/index.ts"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar NodeType = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"Document\"] = 0] = \"Document\";\n  NodeType2[NodeType2[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType2[NodeType2[\"Element\"] = 2] = \"Element\";\n  NodeType2[NodeType2[\"Text\"] = 3] = \"Text\";\n  NodeType2[NodeType2[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType2[NodeType2[\"Comment\"] = 5] = \"Comment\";\n  return NodeType2;\n})(NodeType || {});\nconst testableAccessors = {\n  Node: [\"childNodes\", \"parentNode\", \"parentElement\", \"textContent\"],\n  ShadowRoot: [\"host\", \"styleSheets\"],\n  Element: [\"shadowRoot\", \"querySelector\", \"querySelectorAll\"],\n  MutationObserver: []\n};\nconst testableMethods = {\n  Node: [\"contains\", \"getRootNode\"],\n  ShadowRoot: [\"getSelection\"],\n  Element: [],\n  MutationObserver: [\"constructor\"]\n};\nconst untaintedBasePrototype = {};\nfunction getUntaintedPrototype(key) {\n  if (untaintedBasePrototype[key])\n    return untaintedBasePrototype[key];\n  const defaultObj = globalThis[key];\n  const defaultPrototype = defaultObj.prototype;\n  const accessorNames = key in testableAccessors ? testableAccessors[key] : void 0;\n  const isUntaintedAccessors = Boolean(\n    accessorNames && // @ts-expect-error 2345\n    accessorNames.every(\n      (accessor) => {\n        var _a, _b;\n        return Boolean(\n          (_b = (_a = Object.getOwnPropertyDescriptor(defaultPrototype, accessor)) == null ? void 0 : _a.get) == null ? void 0 : _b.toString().includes(\"[native code]\")\n        );\n      }\n    )\n  );\n  const methodNames = key in testableMethods ? testableMethods[key] : void 0;\n  const isUntaintedMethods = Boolean(\n    methodNames && methodNames.every(\n      // @ts-expect-error 2345\n      (method) => {\n        var _a;\n        return typeof defaultPrototype[method] === \"function\" && ((_a = defaultPrototype[method]) == null ? void 0 : _a.toString().includes(\"[native code]\"));\n      }\n    )\n  );\n  if (isUntaintedAccessors && isUntaintedMethods) {\n    untaintedBasePrototype[key] = defaultObj.prototype;\n    return defaultObj.prototype;\n  }\n  try {\n    const iframeEl = document.createElement(\"iframe\");\n    document.body.appendChild(iframeEl);\n    const win = iframeEl.contentWindow;\n    if (!win) return defaultObj.prototype;\n    const untaintedObject = win[key].prototype;\n    document.body.removeChild(iframeEl);\n    if (!untaintedObject) return defaultPrototype;\n    return untaintedBasePrototype[key] = untaintedObject;\n  } catch {\n    return defaultPrototype;\n  }\n}\nconst untaintedAccessorCache = {};\nfunction getUntaintedAccessor(key, instance, accessor) {\n  var _a;\n  const cacheKey = `${key}.${String(accessor)}`;\n  if (untaintedAccessorCache[cacheKey])\n    return untaintedAccessorCache[cacheKey].call(\n      instance\n    );\n  const untaintedPrototype = getUntaintedPrototype(key);\n  const untaintedAccessor = (_a = Object.getOwnPropertyDescriptor(\n    untaintedPrototype,\n    accessor\n  )) == null ? void 0 : _a.get;\n  if (!untaintedAccessor) return instance[accessor];\n  untaintedAccessorCache[cacheKey] = untaintedAccessor;\n  return untaintedAccessor.call(instance);\n}\nconst untaintedMethodCache = {};\nfunction getUntaintedMethod(key, instance, method) {\n  const cacheKey = `${key}.${String(method)}`;\n  if (untaintedMethodCache[cacheKey])\n    return untaintedMethodCache[cacheKey].bind(\n      instance\n    );\n  const untaintedPrototype = getUntaintedPrototype(key);\n  const untaintedMethod = untaintedPrototype[method];\n  if (typeof untaintedMethod !== \"function\") return instance[method];\n  untaintedMethodCache[cacheKey] = untaintedMethod;\n  return untaintedMethod.bind(instance);\n}\nfunction childNodes(n) {\n  return getUntaintedAccessor(\"Node\", n, \"childNodes\");\n}\nfunction parentNode(n) {\n  return getUntaintedAccessor(\"Node\", n, \"parentNode\");\n}\nfunction parentElement(n) {\n  return getUntaintedAccessor(\"Node\", n, \"parentElement\");\n}\nfunction textContent(n) {\n  return getUntaintedAccessor(\"Node\", n, \"textContent\");\n}\nfunction contains(n, other) {\n  return getUntaintedMethod(\"Node\", n, \"contains\")(other);\n}\nfunction getRootNode(n) {\n  return getUntaintedMethod(\"Node\", n, \"getRootNode\")();\n}\nfunction host(n) {\n  if (!n || !(\"host\" in n)) return null;\n  return getUntaintedAccessor(\"ShadowRoot\", n, \"host\");\n}\nfunction styleSheets(n) {\n  return n.styleSheets;\n}\nfunction shadowRoot(n) {\n  if (!n || !(\"shadowRoot\" in n)) return null;\n  return getUntaintedAccessor(\"Element\", n, \"shadowRoot\");\n}\nfunction querySelector(n, selectors) {\n  return getUntaintedAccessor(\"Element\", n, \"querySelector\")(selectors);\n}\nfunction querySelectorAll(n, selectors) {\n  return getUntaintedAccessor(\"Element\", n, \"querySelectorAll\")(selectors);\n}\nfunction mutationObserverCtor() {\n  return getUntaintedPrototype(\"MutationObserver\").constructor;\n}\nconst index = {\n  childNodes,\n  parentNode,\n  parentElement,\n  textContent,\n  contains,\n  getRootNode,\n  host,\n  styleSheets,\n  shadowRoot,\n  querySelector,\n  querySelectorAll,\n  mutationObserver: mutationObserverCtor\n};\nfunction isElement(n) {\n  return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n  const hostEl = (\n    // anchor and textarea elements also have a `host` property\n    // but only shadow roots have a `mode` property\n    n && \"host\" in n && \"mode\" in n && index.host(n) || null\n  );\n  return Boolean(\n    hostEl && \"shadowRoot\" in hostEl && index.shadowRoot(hostEl) === n\n  );\n}\nfunction isNativeShadowDom(shadowRoot2) {\n  return Object.prototype.toString.call(shadowRoot2) === \"[object ShadowRoot]\";\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n  if (cssText.includes(\" background-clip: text;\") && !cssText.includes(\" -webkit-background-clip: text;\")) {\n    cssText = cssText.replace(\n      /\\sbackground-clip:\\s*text;/g,\n      \" -webkit-background-clip: text; background-clip: text;\"\n    );\n  }\n  return cssText;\n}\nfunction escapeImportStatement(rule2) {\n  const { cssText } = rule2;\n  if (cssText.split('\"').length < 3) return cssText;\n  const statement = [\"@import\", `url(${JSON.stringify(rule2.href)})`];\n  if (rule2.layerName === \"\") {\n    statement.push(`layer`);\n  } else if (rule2.layerName) {\n    statement.push(`layer(${rule2.layerName})`);\n  }\n  if (rule2.supportsText) {\n    statement.push(`supports(${rule2.supportsText})`);\n  }\n  if (rule2.media.length) {\n    statement.push(rule2.media.mediaText);\n  }\n  return statement.join(\" \") + \";\";\n}\nfunction stringifyStylesheet(s) {\n  try {\n    const rules = s.rules || s.cssRules;\n    if (!rules) {\n      return null;\n    }\n    const stringifiedRules = Array.from(\n      rules,\n      (rule2) => stringifyRule(rule2, s.href)\n    ).join(\"\");\n    return fixBrowserCompatibilityIssuesInCSS(stringifiedRules);\n  } catch (error) {\n    return null;\n  }\n}\nfunction stringifyRule(rule2, sheetHref) {\n  if (isCSSImportRule(rule2)) {\n    let importStringified;\n    try {\n      importStringified = // for same-origin stylesheets,\n      // we can access the imported stylesheet rules directly\n      stringifyStylesheet(rule2.styleSheet) || // work around browser issues with the raw string `@import url(...)` statement\n      escapeImportStatement(rule2);\n    } catch (error) {\n      importStringified = rule2.cssText;\n    }\n    if (rule2.styleSheet.href) {\n      return absolutifyURLs(importStringified, rule2.styleSheet.href);\n    }\n    return importStringified;\n  } else {\n    let ruleStringified = rule2.cssText;\n    if (isCSSStyleRule(rule2) && rule2.selectorText.includes(\":\")) {\n      ruleStringified = fixSafariColons(ruleStringified);\n    }\n    if (sheetHref) {\n      return absolutifyURLs(ruleStringified, sheetHref);\n    }\n    return ruleStringified;\n  }\n}\nfunction fixSafariColons(cssStringified) {\n  const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n  return cssStringified.replace(regex, \"$1\\\\$2\");\n}\nfunction isCSSImportRule(rule2) {\n  return \"styleSheet\" in rule2;\n}\nfunction isCSSStyleRule(rule2) {\n  return \"selectorText\" in rule2;\n}\nclass Mirror {\n  constructor() {\n    __publicField(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n) {\n    var _a;\n    if (!n) return -1;\n    const id = (_a = this.getMeta(n)) == null ? void 0 : _a.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n) {\n    return this.nodeMetaMap.get(n) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n) {\n    const id = this.getId(n);\n    this.idNodeMap.delete(id);\n    if (n.childNodes) {\n      n.childNodes.forEach(\n        (childNode) => this.removeNodeFromMap(childNode)\n      );\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node2) {\n    return this.nodeMetaMap.has(node2);\n  }\n  add(n, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n);\n    this.nodeMetaMap.set(n, meta);\n  }\n  replace(id, n) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n, meta);\n    }\n    this.idNodeMap.set(id, n);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n}\nfunction createMirror() {\n  return new Mirror();\n}\nfunction maskInputValue({\n  element,\n  maskInputOptions,\n  tagName,\n  type,\n  value,\n  maskInputFn\n}) {\n  let text = value || \"\";\n  const actualType = type && toLowerCase(type);\n  if (maskInputOptions[tagName.toLowerCase()] || actualType && maskInputOptions[actualType]) {\n    if (maskInputFn) {\n      text = maskInputFn(text, element);\n    } else {\n      text = \"*\".repeat(text.length);\n    }\n  }\n  return text;\n}\nfunction toLowerCase(str) {\n  return str.toLowerCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = \"__rrweb_original__\";\nfunction is2DCanvasBlank(canvas) {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) return true;\n  const chunkSize = 50;\n  for (let x2 = 0; x2 < canvas.width; x2 += chunkSize) {\n    for (let y = 0; y < canvas.height; y += chunkSize) {\n      const getImageData = ctx.getImageData;\n      const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData ? getImageData[ORIGINAL_ATTRIBUTE_NAME] : getImageData;\n      const pixelBuffer = new Uint32Array(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n        originalGetImageData.call(\n          ctx,\n          x2,\n          y,\n          Math.min(chunkSize, canvas.width - x2),\n          Math.min(chunkSize, canvas.height - y)\n        ).data.buffer\n      );\n      if (pixelBuffer.some((pixel) => pixel !== 0)) return false;\n    }\n  }\n  return true;\n}\nfunction isNodeMetaEqual(a, b) {\n  if (!a || !b || a.type !== b.type) return false;\n  if (a.type === NodeType.Document)\n    return a.compatMode === b.compatMode;\n  else if (a.type === NodeType.DocumentType)\n    return a.name === b.name && a.publicId === b.publicId && a.systemId === b.systemId;\n  else if (a.type === NodeType.Comment || a.type === NodeType.Text || a.type === NodeType.CDATA)\n    return a.textContent === b.textContent;\n  else if (a.type === NodeType.Element)\n    return a.tagName === b.tagName && JSON.stringify(a.attributes) === JSON.stringify(b.attributes) && a.isSVG === b.isSVG && a.needBlock === b.needBlock;\n  return false;\n}\nfunction getInputType(element) {\n  const type = element.type;\n  return element.hasAttribute(\"data-rr-is-password\") ? \"password\" : type ? (\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    toLowerCase(type)\n  ) : null;\n}\nfunction extractFileExtension(path, baseURL) {\n  let url;\n  try {\n    url = new URL(path, baseURL ?? window.location.href);\n  } catch (err) {\n    return null;\n  }\n  const regex = /\\.([0-9a-z]+)(?:$)/i;\n  const match = url.pathname.match(regex);\n  return (match == null ? void 0 : match[1]) ?? null;\n}\nfunction extractOrigin(url) {\n  let origin = \"\";\n  if (url.indexOf(\"//\") > -1) {\n    origin = url.split(\"/\").slice(0, 3).join(\"/\");\n  } else {\n    origin = url.split(\"/\")[0];\n  }\n  origin = origin.split(\"?\")[0];\n  return origin;\n}\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absolutifyURLs(cssText, href) {\n  return (cssText || \"\").replace(\n    URL_IN_CSS_REF,\n    (origin, quote1, path1, quote2, path2, path3) => {\n      const filePath = path1 || path2 || path3;\n      const maybeQuote = quote1 || quote2 || \"\";\n      if (!filePath) {\n        return origin;\n      }\n      if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n        return `url(${maybeQuote}${filePath}${maybeQuote})`;\n      }\n      if (DATA_URI.test(filePath)) {\n        return `url(${maybeQuote}${filePath}${maybeQuote})`;\n      }\n      if (filePath[0] === \"/\") {\n        return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n      }\n      const stack = href.split(\"/\");\n      const parts = filePath.split(\"/\");\n      stack.pop();\n      for (const part of parts) {\n        if (part === \".\") {\n          continue;\n        } else if (part === \"..\") {\n          stack.pop();\n        } else {\n          stack.push(part);\n        }\n      }\n      return `url(${maybeQuote}${stack.join(\"/\")}${maybeQuote})`;\n    }\n  );\n}\nlet _id = 1;\nconst tagNameRegex = new RegExp(\"[^a-z0-9-_:]\");\nconst IGNORED_NODE = -2;\nfunction genId() {\n  return _id++;\n}\nfunction getValidTagName(element) {\n  if (element instanceof HTMLFormElement) {\n    return \"form\";\n  }\n  const processedTagName = toLowerCase(element.tagName);\n  if (tagNameRegex.test(processedTagName)) {\n    return \"div\";\n  }\n  return processedTagName;\n}\nlet canvasService;\nlet canvasCtx;\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n  if (attributeValue.trim() === \"\") {\n    return attributeValue;\n  }\n  let pos = 0;\n  function collectCharacters(regEx) {\n    let chars;\n    const match = regEx.exec(attributeValue.substring(pos));\n    if (match) {\n      chars = match[0];\n      pos += chars.length;\n      return chars;\n    }\n    return \"\";\n  }\n  const output = [];\n  while (true) {\n    collectCharacters(SRCSET_COMMAS_OR_SPACES);\n    if (pos >= attributeValue.length) {\n      break;\n    }\n    let url = collectCharacters(SRCSET_NOT_SPACES);\n    if (url.slice(-1) === \",\") {\n      url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n      output.push(url);\n    } else {\n      let descriptorsStr = \"\";\n      url = absoluteToDoc(doc, url);\n      let inParens = false;\n      while (true) {\n        const c = attributeValue.charAt(pos);\n        if (c === \"\") {\n          output.push((url + descriptorsStr).trim());\n          break;\n        } else if (!inParens) {\n          if (c === \",\") {\n            pos += 1;\n            output.push((url + descriptorsStr).trim());\n            break;\n          } else if (c === \"(\") {\n            inParens = true;\n          }\n        } else {\n          if (c === \")\") {\n            inParens = false;\n          }\n        }\n        descriptorsStr += c;\n        pos += 1;\n      }\n    }\n  }\n  return output.join(\", \");\n}\nconst cachedDocument = /* @__PURE__ */ new WeakMap();\nfunction absoluteToDoc(doc, attributeValue) {\n  if (!attributeValue || attributeValue.trim() === \"\") {\n    return attributeValue;\n  }\n  return getHref(doc, attributeValue);\n}\nfunction isSVGElement(el) {\n  return Boolean(el.tagName === \"svg\" || el.ownerSVGElement);\n}\nfunction getHref(doc, customHref) {\n  let a = cachedDocument.get(doc);\n  if (!a) {\n    a = doc.createElement(\"a\");\n    cachedDocument.set(doc, a);\n  }\n  if (!customHref) {\n    customHref = \"\";\n  } else if (customHref.startsWith(\"blob:\") || customHref.startsWith(\"data:\")) {\n    return customHref;\n  }\n  a.setAttribute(\"href\", customHref);\n  return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value) {\n  if (!value) {\n    return value;\n  }\n  if (name === \"src\" || name === \"href\" && !(tagName === \"use\" && value[0] === \"#\")) {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"xlink:href\" && value[0] !== \"#\") {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"background\" && (tagName === \"table\" || tagName === \"td\" || tagName === \"th\")) {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"srcset\") {\n    return getAbsoluteSrcsetString(doc, value);\n  } else if (name === \"style\") {\n    return absolutifyURLs(value, getHref(doc));\n  } else if (tagName === \"object\" && name === \"data\") {\n    return absoluteToDoc(doc, value);\n  }\n  return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n  return (tagName === \"video\" || tagName === \"audio\") && name === \"autoplay\";\n}\nfunction _isBlockedElement(element, blockClass, blockSelector) {\n  try {\n    if (typeof blockClass === \"string\") {\n      if (element.classList.contains(blockClass)) {\n        return true;\n      }\n    } else {\n      for (let eIndex = element.classList.length; eIndex--; ) {\n        const className = element.classList[eIndex];\n        if (blockClass.test(className)) {\n          return true;\n        }\n      }\n    }\n    if (blockSelector) {\n      return element.matches(blockSelector);\n    }\n  } catch (e) {\n  }\n  return false;\n}\nfunction classMatchesRegex(node2, regex, checkAncestors) {\n  if (!node2) return false;\n  if (node2.nodeType !== node2.ELEMENT_NODE) {\n    if (!checkAncestors) return false;\n    return classMatchesRegex(index.parentNode(node2), regex, checkAncestors);\n  }\n  for (let eIndex = node2.classList.length; eIndex--; ) {\n    const className = node2.classList[eIndex];\n    if (regex.test(className)) {\n      return true;\n    }\n  }\n  if (!checkAncestors) return false;\n  return classMatchesRegex(index.parentNode(node2), regex, checkAncestors);\n}\nfunction needMaskingText(node2, maskTextClass, maskTextSelector, checkAncestors) {\n  let el;\n  if (isElement(node2)) {\n    el = node2;\n    if (!index.childNodes(el).length) {\n      return false;\n    }\n  } else if (index.parentElement(node2) === null) {\n    return false;\n  } else {\n    el = index.parentElement(node2);\n  }\n  try {\n    if (typeof maskTextClass === \"string\") {\n      if (checkAncestors) {\n        if (el.closest(`.${maskTextClass}`)) return true;\n      } else {\n        if (el.classList.contains(maskTextClass)) return true;\n      }\n    } else {\n      if (classMatchesRegex(el, maskTextClass, checkAncestors)) return true;\n    }\n    if (maskTextSelector) {\n      if (checkAncestors) {\n        if (el.closest(maskTextSelector)) return true;\n      } else {\n        if (el.matches(maskTextSelector)) return true;\n      }\n    }\n  } catch (e) {\n  }\n  return false;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n  const win = iframeEl.contentWindow;\n  if (!win) {\n    return;\n  }\n  let fired = false;\n  let readyState;\n  try {\n    readyState = win.document.readyState;\n  } catch (error) {\n    return;\n  }\n  if (readyState !== \"complete\") {\n    const timer = setTimeout(() => {\n      if (!fired) {\n        listener();\n        fired = true;\n      }\n    }, iframeLoadTimeout);\n    iframeEl.addEventListener(\"load\", () => {\n      clearTimeout(timer);\n      fired = true;\n      listener();\n    });\n    return;\n  }\n  const blankUrl = \"about:blank\";\n  if (win.location.href !== blankUrl || iframeEl.src === blankUrl || iframeEl.src === \"\") {\n    setTimeout(listener, 0);\n    return iframeEl.addEventListener(\"load\", listener);\n  }\n  iframeEl.addEventListener(\"load\", listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n  let fired = false;\n  let styleSheetLoaded;\n  try {\n    styleSheetLoaded = link.sheet;\n  } catch (error) {\n    return;\n  }\n  if (styleSheetLoaded) return;\n  const timer = setTimeout(() => {\n    if (!fired) {\n      listener();\n      fired = true;\n    }\n  }, styleSheetLoadTimeout);\n  link.addEventListener(\"load\", () => {\n    clearTimeout(timer);\n    fired = true;\n    listener();\n  });\n}\nfunction serializeNode(n, options) {\n  const {\n    doc,\n    mirror,\n    blockClass,\n    blockSelector,\n    needsMask,\n    inlineStylesheet,\n    maskInputOptions = {},\n    maskTextFn,\n    maskInputFn,\n    dataURLOptions = {},\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement = false\n  } = options;\n  const rootId = getRootId(doc, mirror);\n  switch (n.nodeType) {\n    case n.DOCUMENT_NODE:\n      if (n.compatMode !== \"CSS1Compat\") {\n        return {\n          type: NodeType.Document,\n          childNodes: [],\n          compatMode: n.compatMode\n          // probably \"BackCompat\"\n        };\n      } else {\n        return {\n          type: NodeType.Document,\n          childNodes: []\n        };\n      }\n    case n.DOCUMENT_TYPE_NODE:\n      return {\n        type: NodeType.DocumentType,\n        name: n.name,\n        publicId: n.publicId,\n        systemId: n.systemId,\n        rootId\n      };\n    case n.ELEMENT_NODE:\n      return serializeElementNode(n, {\n        doc,\n        blockClass,\n        blockSelector,\n        inlineStylesheet,\n        maskInputOptions,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n        rootId\n      });\n    case n.TEXT_NODE:\n      return serializeTextNode(n, {\n        doc,\n        needsMask,\n        maskTextFn,\n        rootId\n      });\n    case n.CDATA_SECTION_NODE:\n      return {\n        type: NodeType.CDATA,\n        textContent: \"\",\n        rootId\n      };\n    case n.COMMENT_NODE:\n      return {\n        type: NodeType.Comment,\n        textContent: index.textContent(n) || \"\",\n        rootId\n      };\n    default:\n      return false;\n  }\n}\nfunction getRootId(doc, mirror) {\n  if (!mirror.hasNode(doc)) return void 0;\n  const docId = mirror.getId(doc);\n  return docId === 1 ? void 0 : docId;\n}\nfunction serializeTextNode(n, options) {\n  var _a;\n  const { needsMask, maskTextFn, rootId } = options;\n  const parent = index.parentNode(n);\n  const parentTagName = parent && parent.tagName;\n  let text = index.textContent(n);\n  const isStyle = parentTagName === \"STYLE\" ? true : void 0;\n  const isScript = parentTagName === \"SCRIPT\" ? true : void 0;\n  if (isStyle && text) {\n    try {\n      if (n.nextSibling || n.previousSibling) {\n      } else if ((_a = parent.sheet) == null ? void 0 : _a.cssRules) {\n        text = stringifyStylesheet(parent.sheet);\n      }\n    } catch (err) {\n      console.warn(\n        `Cannot get CSS styles from text's parentNode. Error: ${err}`,\n        n\n      );\n    }\n    text = absolutifyURLs(text, getHref(options.doc));\n  }\n  if (isScript) {\n    text = \"SCRIPT_PLACEHOLDER\";\n  }\n  if (!isStyle && !isScript && text && needsMask) {\n    text = maskTextFn ? maskTextFn(text, index.parentElement(n)) : text.replace(/[\\S]/g, \"*\");\n  }\n  return {\n    type: NodeType.Text,\n    textContent: text || \"\",\n    isStyle,\n    rootId\n  };\n}\nfunction serializeElementNode(n, options) {\n  const {\n    doc,\n    blockClass,\n    blockSelector,\n    inlineStylesheet,\n    maskInputOptions = {},\n    maskInputFn,\n    dataURLOptions = {},\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement = false,\n    rootId\n  } = options;\n  const needBlock = _isBlockedElement(n, blockClass, blockSelector);\n  const tagName = getValidTagName(n);\n  let attributes = {};\n  const len = n.attributes.length;\n  for (let i = 0; i < len; i++) {\n    const attr = n.attributes[i];\n    if (!ignoreAttribute(tagName, attr.name, attr.value)) {\n      attributes[attr.name] = transformAttribute(\n        doc,\n        tagName,\n        toLowerCase(attr.name),\n        attr.value\n      );\n    }\n  }\n  if (tagName === \"link\" && inlineStylesheet) {\n    const stylesheet = Array.from(doc.styleSheets).find((s) => {\n      return s.href === n.href;\n    });\n    let cssText = null;\n    if (stylesheet) {\n      cssText = stringifyStylesheet(stylesheet);\n    }\n    if (cssText) {\n      delete attributes.rel;\n      delete attributes.href;\n      attributes._cssText = cssText;\n    }\n  }\n  if (tagName === \"style\" && n.sheet && // TODO: Currently we only try to get dynamic stylesheet when it is an empty style element\n  !(n.innerText || index.textContent(n) || \"\").trim().length) {\n    const cssText = stringifyStylesheet(\n      n.sheet\n    );\n    if (cssText) {\n      attributes._cssText = cssText;\n    }\n  }\n  if (tagName === \"input\" || tagName === \"textarea\" || tagName === \"select\") {\n    const value = n.value;\n    const checked = n.checked;\n    if (attributes.type !== \"radio\" && attributes.type !== \"checkbox\" && attributes.type !== \"submit\" && attributes.type !== \"button\" && value) {\n      attributes.value = maskInputValue({\n        element: n,\n        type: getInputType(n),\n        tagName,\n        value,\n        maskInputOptions,\n        maskInputFn\n      });\n    } else if (checked) {\n      attributes.checked = checked;\n    }\n  }\n  if (tagName === \"option\") {\n    if (n.selected && !maskInputOptions[\"select\"]) {\n      attributes.selected = true;\n    } else {\n      delete attributes.selected;\n    }\n  }\n  if (tagName === \"dialog\" && n.open) {\n    attributes.rr_open_mode = n.matches(\"dialog:modal\") ? \"modal\" : \"non-modal\";\n  }\n  if (tagName === \"canvas\" && recordCanvas) {\n    if (n.__context === \"2d\") {\n      if (!is2DCanvasBlank(n)) {\n        attributes.rr_dataURL = n.toDataURL(\n          dataURLOptions.type,\n          dataURLOptions.quality\n        );\n      }\n    } else if (!(\"__context\" in n)) {\n      const canvasDataURL = n.toDataURL(\n        dataURLOptions.type,\n        dataURLOptions.quality\n      );\n      const blankCanvas = doc.createElement(\"canvas\");\n      blankCanvas.width = n.width;\n      blankCanvas.height = n.height;\n      const blankCanvasDataURL = blankCanvas.toDataURL(\n        dataURLOptions.type,\n        dataURLOptions.quality\n      );\n      if (canvasDataURL !== blankCanvasDataURL) {\n        attributes.rr_dataURL = canvasDataURL;\n      }\n    }\n  }\n  if (tagName === \"img\" && inlineImages) {\n    if (!canvasService) {\n      canvasService = doc.createElement(\"canvas\");\n      canvasCtx = canvasService.getContext(\"2d\");\n    }\n    const image = n;\n    const imageSrc = image.currentSrc || image.getAttribute(\"src\") || \"<unknown-src>\";\n    const priorCrossOrigin = image.crossOrigin;\n    const recordInlineImage = () => {\n      image.removeEventListener(\"load\", recordInlineImage);\n      try {\n        canvasService.width = image.naturalWidth;\n        canvasService.height = image.naturalHeight;\n        canvasCtx.drawImage(image, 0, 0);\n        attributes.rr_dataURL = canvasService.toDataURL(\n          dataURLOptions.type,\n          dataURLOptions.quality\n        );\n      } catch (err) {\n        if (image.crossOrigin !== \"anonymous\") {\n          image.crossOrigin = \"anonymous\";\n          if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n          else image.addEventListener(\"load\", recordInlineImage);\n          return;\n        } else {\n          console.warn(\n            `Cannot inline img src=${imageSrc}! Error: ${err}`\n          );\n        }\n      }\n      if (image.crossOrigin === \"anonymous\") {\n        priorCrossOrigin ? attributes.crossOrigin = priorCrossOrigin : image.removeAttribute(\"crossorigin\");\n      }\n    };\n    if (image.complete && image.naturalWidth !== 0) recordInlineImage();\n    else image.addEventListener(\"load\", recordInlineImage);\n  }\n  if (tagName === \"audio\" || tagName === \"video\") {\n    const mediaAttributes = attributes;\n    mediaAttributes.rr_mediaState = n.paused ? \"paused\" : \"played\";\n    mediaAttributes.rr_mediaCurrentTime = n.currentTime;\n    mediaAttributes.rr_mediaPlaybackRate = n.playbackRate;\n    mediaAttributes.rr_mediaMuted = n.muted;\n    mediaAttributes.rr_mediaLoop = n.loop;\n    mediaAttributes.rr_mediaVolume = n.volume;\n  }\n  if (!newlyAddedElement) {\n    if (n.scrollLeft) {\n      attributes.rr_scrollLeft = n.scrollLeft;\n    }\n    if (n.scrollTop) {\n      attributes.rr_scrollTop = n.scrollTop;\n    }\n  }\n  if (needBlock) {\n    const { width, height } = n.getBoundingClientRect();\n    attributes = {\n      class: attributes.class,\n      rr_width: `${width}px`,\n      rr_height: `${height}px`\n    };\n  }\n  if (tagName === \"iframe\" && !keepIframeSrcFn(attributes.src)) {\n    if (!n.contentDocument) {\n      attributes.rr_src = attributes.src;\n    }\n    delete attributes.src;\n  }\n  let isCustomElement;\n  try {\n    if (customElements.get(tagName)) isCustomElement = true;\n  } catch (e) {\n  }\n  return {\n    type: NodeType.Element,\n    tagName,\n    attributes,\n    childNodes: [],\n    isSVG: isSVGElement(n) || void 0,\n    needBlock,\n    rootId,\n    isCustom: isCustomElement\n  };\n}\nfunction lowerIfExists(maybeAttr) {\n  if (maybeAttr === void 0 || maybeAttr === null) {\n    return \"\";\n  } else {\n    return maybeAttr.toLowerCase();\n  }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n  if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\n    return true;\n  } else if (sn.type === NodeType.Element) {\n    if (slimDOMOptions.script && // script tag\n    (sn.tagName === \"script\" || // (module)preload link\n    sn.tagName === \"link\" && (sn.attributes.rel === \"preload\" || sn.attributes.rel === \"modulepreload\") && sn.attributes.as === \"script\" || // prefetch link\n    sn.tagName === \"link\" && sn.attributes.rel === \"prefetch\" && typeof sn.attributes.href === \"string\" && extractFileExtension(sn.attributes.href) === \"js\")) {\n      return true;\n    } else if (slimDOMOptions.headFavicon && (sn.tagName === \"link\" && sn.attributes.rel === \"shortcut icon\" || sn.tagName === \"meta\" && (lowerIfExists(sn.attributes.name).match(\n      /^msapplication-tile(image|color)$/\n    ) || lowerIfExists(sn.attributes.name) === \"application-name\" || lowerIfExists(sn.attributes.rel) === \"icon\" || lowerIfExists(sn.attributes.rel) === \"apple-touch-icon\" || lowerIfExists(sn.attributes.rel) === \"shortcut icon\"))) {\n      return true;\n    } else if (sn.tagName === \"meta\") {\n      if (slimDOMOptions.headMetaDescKeywords && lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n        return true;\n      } else if (slimDOMOptions.headMetaSocial && (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) || // og = opengraph (facebook)\n      lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) || lowerIfExists(sn.attributes.name) === \"pinterest\")) {\n        return true;\n      } else if (slimDOMOptions.headMetaRobots && (lowerIfExists(sn.attributes.name) === \"robots\" || lowerIfExists(sn.attributes.name) === \"googlebot\" || lowerIfExists(sn.attributes.name) === \"bingbot\")) {\n        return true;\n      } else if (slimDOMOptions.headMetaHttpEquiv && sn.attributes[\"http-equiv\"] !== void 0) {\n        return true;\n      } else if (slimDOMOptions.headMetaAuthorship && (lowerIfExists(sn.attributes.name) === \"author\" || lowerIfExists(sn.attributes.name) === \"generator\" || lowerIfExists(sn.attributes.name) === \"framework\" || lowerIfExists(sn.attributes.name) === \"publisher\" || lowerIfExists(sn.attributes.name) === \"progid\" || lowerIfExists(sn.attributes.property).match(/^article:/) || lowerIfExists(sn.attributes.property).match(/^product:/))) {\n        return true;\n      } else if (slimDOMOptions.headMetaVerification && (lowerIfExists(sn.attributes.name) === \"google-site-verification\" || lowerIfExists(sn.attributes.name) === \"yandex-verification\" || lowerIfExists(sn.attributes.name) === \"csrf-token\" || lowerIfExists(sn.attributes.name) === \"p:domain_verify\" || lowerIfExists(sn.attributes.name) === \"verify-v1\" || lowerIfExists(sn.attributes.name) === \"verification\" || lowerIfExists(sn.attributes.name) === \"shopify-checkout-api-token\")) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction serializeNodeWithId(n, options) {\n  const {\n    doc,\n    mirror,\n    blockClass,\n    blockSelector,\n    maskTextClass,\n    maskTextSelector,\n    skipChild = false,\n    inlineStylesheet = true,\n    maskInputOptions = {},\n    maskTextFn,\n    maskInputFn,\n    slimDOMOptions,\n    dataURLOptions = {},\n    inlineImages = false,\n    recordCanvas = false,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout = 5e3,\n    onStylesheetLoad,\n    stylesheetLoadTimeout = 5e3,\n    keepIframeSrcFn = () => false,\n    newlyAddedElement = false\n  } = options;\n  let { needsMask } = options;\n  let { preserveWhiteSpace = true } = options;\n  if (!needsMask) {\n    const checkAncestors = needsMask === void 0;\n    needsMask = needMaskingText(\n      n,\n      maskTextClass,\n      maskTextSelector,\n      checkAncestors\n    );\n  }\n  const _serializedNode = serializeNode(n, {\n    doc,\n    mirror,\n    blockClass,\n    blockSelector,\n    needsMask,\n    inlineStylesheet,\n    maskInputOptions,\n    maskTextFn,\n    maskInputFn,\n    dataURLOptions,\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement\n  });\n  if (!_serializedNode) {\n    console.warn(n, \"not serialized\");\n    return null;\n  }\n  let id;\n  if (mirror.hasNode(n)) {\n    id = mirror.getId(n);\n  } else if (slimDOMExcluded(_serializedNode, slimDOMOptions) || !preserveWhiteSpace && _serializedNode.type === NodeType.Text && !_serializedNode.isStyle && !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, \"\").length) {\n    id = IGNORED_NODE;\n  } else {\n    id = genId();\n  }\n  const serializedNode = Object.assign(_serializedNode, { id });\n  mirror.add(n, serializedNode);\n  if (id === IGNORED_NODE) {\n    return null;\n  }\n  if (onSerialize) {\n    onSerialize(n);\n  }\n  let recordChild = !skipChild;\n  if (serializedNode.type === NodeType.Element) {\n    recordChild = recordChild && !serializedNode.needBlock;\n    delete serializedNode.needBlock;\n    const shadowRootEl = index.shadowRoot(n);\n    if (shadowRootEl && isNativeShadowDom(shadowRootEl))\n      serializedNode.isShadowHost = true;\n  }\n  if ((serializedNode.type === NodeType.Document || serializedNode.type === NodeType.Element) && recordChild) {\n    if (slimDOMOptions.headWhitespace && serializedNode.type === NodeType.Element && serializedNode.tagName === \"head\") {\n      preserveWhiteSpace = false;\n    }\n    const bypassOptions = {\n      doc,\n      mirror,\n      blockClass,\n      blockSelector,\n      needsMask,\n      maskTextClass,\n      maskTextSelector,\n      skipChild,\n      inlineStylesheet,\n      maskInputOptions,\n      maskTextFn,\n      maskInputFn,\n      slimDOMOptions,\n      dataURLOptions,\n      inlineImages,\n      recordCanvas,\n      preserveWhiteSpace,\n      onSerialize,\n      onIframeLoad,\n      iframeLoadTimeout,\n      onStylesheetLoad,\n      stylesheetLoadTimeout,\n      keepIframeSrcFn\n    };\n    if (serializedNode.type === NodeType.Element && serializedNode.tagName === \"textarea\" && serializedNode.attributes.value !== void 0) ;\n    else {\n      for (const childN of Array.from(index.childNodes(n))) {\n        const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n        if (serializedChildNode) {\n          serializedNode.childNodes.push(serializedChildNode);\n        }\n      }\n    }\n    let shadowRootEl = null;\n    if (isElement(n) && (shadowRootEl = index.shadowRoot(n))) {\n      for (const childN of Array.from(index.childNodes(shadowRootEl))) {\n        const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n        if (serializedChildNode) {\n          isNativeShadowDom(shadowRootEl) && (serializedChildNode.isShadow = true);\n          serializedNode.childNodes.push(serializedChildNode);\n        }\n      }\n    }\n  }\n  const parent = index.parentNode(n);\n  if (parent && isShadowRoot(parent) && isNativeShadowDom(parent)) {\n    serializedNode.isShadow = true;\n  }\n  if (serializedNode.type === NodeType.Element && serializedNode.tagName === \"iframe\") {\n    onceIframeLoaded(\n      n,\n      () => {\n        const iframeDoc = n.contentDocument;\n        if (iframeDoc && onIframeLoad) {\n          const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n            doc: iframeDoc,\n            mirror,\n            blockClass,\n            blockSelector,\n            needsMask,\n            maskTextClass,\n            maskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn\n          });\n          if (serializedIframeNode) {\n            onIframeLoad(\n              n,\n              serializedIframeNode\n            );\n          }\n        }\n      },\n      iframeLoadTimeout\n    );\n  }\n  if (serializedNode.type === NodeType.Element && serializedNode.tagName === \"link\" && typeof serializedNode.attributes.rel === \"string\" && (serializedNode.attributes.rel === \"stylesheet\" || serializedNode.attributes.rel === \"preload\" && typeof serializedNode.attributes.href === \"string\" && extractFileExtension(serializedNode.attributes.href) === \"css\")) {\n    onceStylesheetLoaded(\n      n,\n      () => {\n        if (onStylesheetLoad) {\n          const serializedLinkNode = serializeNodeWithId(n, {\n            doc,\n            mirror,\n            blockClass,\n            blockSelector,\n            needsMask,\n            maskTextClass,\n            maskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn\n          });\n          if (serializedLinkNode) {\n            onStylesheetLoad(\n              n,\n              serializedLinkNode\n            );\n          }\n        }\n      },\n      stylesheetLoadTimeout\n    );\n  }\n  return serializedNode;\n}\nfunction snapshot(n, options) {\n  const {\n    mirror = new Mirror(),\n    blockClass = \"rr-block\",\n    blockSelector = null,\n    maskTextClass = \"rr-mask\",\n    maskTextSelector = null,\n    inlineStylesheet = true,\n    inlineImages = false,\n    recordCanvas = false,\n    maskAllInputs = false,\n    maskTextFn,\n    maskInputFn,\n    slimDOM = false,\n    dataURLOptions,\n    preserveWhiteSpace,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout,\n    onStylesheetLoad,\n    stylesheetLoadTimeout,\n    keepIframeSrcFn = () => false\n  } = options || {};\n  const maskInputOptions = maskAllInputs === true ? {\n    color: true,\n    date: true,\n    \"datetime-local\": true,\n    email: true,\n    month: true,\n    number: true,\n    range: true,\n    search: true,\n    tel: true,\n    text: true,\n    time: true,\n    url: true,\n    week: true,\n    textarea: true,\n    select: true,\n    password: true\n  } : maskAllInputs === false ? {\n    password: true\n  } : maskAllInputs;\n  const slimDOMOptions = slimDOM === true || slimDOM === \"all\" ? (\n    // if true: set of sensible options that should not throw away any information\n    {\n      script: true,\n      comment: true,\n      headFavicon: true,\n      headWhitespace: true,\n      headMetaDescKeywords: slimDOM === \"all\",\n      // destructive\n      headMetaSocial: true,\n      headMetaRobots: true,\n      headMetaHttpEquiv: true,\n      headMetaAuthorship: true,\n      headMetaVerification: true\n    }\n  ) : slimDOM === false ? {} : slimDOM;\n  return serializeNodeWithId(n, {\n    doc: n,\n    mirror,\n    blockClass,\n    blockSelector,\n    maskTextClass,\n    maskTextSelector,\n    skipChild: false,\n    inlineStylesheet,\n    maskInputOptions,\n    maskTextFn,\n    maskInputFn,\n    slimDOMOptions,\n    dataURLOptions,\n    inlineImages,\n    recordCanvas,\n    preserveWhiteSpace,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout,\n    onStylesheetLoad,\n    stylesheetLoadTimeout,\n    keepIframeSrcFn,\n    newlyAddedElement: false\n  });\n}\nfunction visitSnapshot(node2, onVisit) {\n  function walk(current) {\n    onVisit(current);\n    if (current.type === NodeType.Document || current.type === NodeType.Element) {\n      current.childNodes.forEach(walk);\n    }\n  }\n  walk(node2);\n}\nfunction cleanupSnapshot() {\n  _id = 1;\n}\nconst MEDIA_SELECTOR = /(max|min)-device-(width|height)/;\nconst MEDIA_SELECTOR_GLOBAL = new RegExp(MEDIA_SELECTOR.source, \"g\");\nconst mediaSelectorPlugin = {\n  postcssPlugin: \"postcss-custom-selectors\",\n  prepare() {\n    return {\n      postcssPlugin: \"postcss-custom-selectors\",\n      AtRule: function(atrule) {\n        if (atrule.params.match(MEDIA_SELECTOR_GLOBAL)) {\n          atrule.params = atrule.params.replace(MEDIA_SELECTOR_GLOBAL, \"$1-$2\");\n        }\n      }\n    };\n  }\n};\nconst pseudoClassPlugin = {\n  postcssPlugin: \"postcss-hover-classes\",\n  prepare: function() {\n    const fixed = [];\n    return {\n      Rule: function(rule2) {\n        if (fixed.indexOf(rule2) !== -1) {\n          return;\n        }\n        fixed.push(rule2);\n        rule2.selectors.forEach(function(selector) {\n          if (!selector.includes(\":\")) {\n            return;\n          }\n          const selectorParts = selector.replace(/\\n/g, \" \").split(\" \");\n          const pseudoedSelectorParts = [];\n          selectorParts.forEach(function(selectorPart) {\n            const pseudos = selectorPart.match(/::?([^:]+)/g);\n            if (!pseudos) {\n              pseudoedSelectorParts.push(selectorPart);\n              return;\n            }\n            const baseSelector = selectorPart.substr(\n              0,\n              selectorPart.length - pseudos.join(\"\").length\n            );\n            const classPseudos = pseudos.map(function(pseudo) {\n              const pseudoToCheck = pseudo.replace(/\\(.*/g, \"\");\n              if (pseudoToCheck !== \":hover\") {\n                return pseudo;\n              }\n              if (pseudo.match(/^::/)) {\n                return pseudo;\n              }\n              pseudo = pseudo.substr(1);\n              pseudo = pseudo.replace(/\\(/g, \"\\\\(\");\n              pseudo = pseudo.replace(/\\)/g, \"\\\\)\");\n              return \".\\\\:\" + pseudo;\n            });\n            pseudoedSelectorParts.push(baseSelector + classPseudos.join(\"\"));\n          });\n          addSelector(pseudoedSelectorParts.join(\" \"));\n          function addSelector(newSelector) {\n            if (newSelector && newSelector !== selector) {\n              rule2.selector += \",\\n\" + newSelector;\n            }\n          }\n        });\n      }\n    };\n  }\n};\nfunction getDefaultExportFromCjs(x2) {\n  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, \"default\") ? x2[\"default\"] : x2;\n}\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var f = n.default;\n  if (typeof f == \"function\") {\n    var a = function a2() {\n      if (this instanceof a2) {\n        return Reflect.construct(f, arguments, this.constructor);\n      }\n      return f.apply(this, arguments);\n    };\n    a.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, \"__esModule\", { value: true });\n  Object.keys(n).forEach(function(k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function() {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\nvar picocolors_browser = { exports: {} };\nvar x = String;\nvar create = function() {\n  return { isColorSupported: false, reset: x, bold: x, dim: x, italic: x, underline: x, inverse: x, hidden: x, strikethrough: x, black: x, red: x, green: x, yellow: x, blue: x, magenta: x, cyan: x, white: x, gray: x, bgBlack: x, bgRed: x, bgGreen: x, bgYellow: x, bgBlue: x, bgMagenta: x, bgCyan: x, bgWhite: x };\n};\npicocolors_browser.exports = create();\npicocolors_browser.exports.createColors = create;\nvar picocolors_browserExports = picocolors_browser.exports;\nconst __viteBrowserExternal = {};\nconst __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: __viteBrowserExternal\n}, Symbol.toStringTag, { value: \"Module\" }));\nconst require$$2 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);\nlet pico = picocolors_browserExports;\nlet terminalHighlight$1 = require$$2;\nlet CssSyntaxError$3 = class CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin2) {\n    super(message);\n    this.name = \"CssSyntaxError\";\n    this.reason = message;\n    if (file) {\n      this.file = file;\n    }\n    if (source) {\n      this.source = source;\n    }\n    if (plugin2) {\n      this.plugin = plugin2;\n    }\n    if (typeof line !== \"undefined\" && typeof column !== \"undefined\") {\n      if (typeof line === \"number\") {\n        this.line = line;\n        this.column = column;\n      } else {\n        this.line = line.line;\n        this.column = line.column;\n        this.endLine = column.line;\n        this.endColumn = column.column;\n      }\n    }\n    this.setMessage();\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError);\n    }\n  }\n  setMessage() {\n    this.message = this.plugin ? this.plugin + \": \" : \"\";\n    this.message += this.file ? this.file : \"<css input>\";\n    if (typeof this.line !== \"undefined\") {\n      this.message += \":\" + this.line + \":\" + this.column;\n    }\n    this.message += \": \" + this.reason;\n  }\n  showSourceCode(color) {\n    if (!this.source) return \"\";\n    let css = this.source;\n    if (color == null) color = pico.isColorSupported;\n    if (terminalHighlight$1) {\n      if (color) css = terminalHighlight$1(css);\n    }\n    let lines = css.split(/\\r?\\n/);\n    let start = Math.max(this.line - 3, 0);\n    let end = Math.min(this.line + 2, lines.length);\n    let maxWidth = String(end).length;\n    let mark, aside;\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true);\n      mark = (text) => bold(red(text));\n      aside = (text) => gray(text);\n    } else {\n      mark = aside = (str) => str;\n    }\n    return lines.slice(start, end).map((line, index2) => {\n      let number = start + 1 + index2;\n      let gutter = \" \" + (\" \" + number).slice(-maxWidth) + \" | \";\n      if (number === this.line) {\n        let spacing = aside(gutter.replace(/\\d/g, \" \")) + line.slice(0, this.column - 1).replace(/[^\\t]/g, \" \");\n        return mark(\">\") + aside(gutter) + line + \"\\n \" + spacing + mark(\"^\");\n      }\n      return \" \" + aside(gutter) + line;\n    }).join(\"\\n\");\n  }\n  toString() {\n    let code = this.showSourceCode();\n    if (code) {\n      code = \"\\n\\n\" + code + \"\\n\";\n    }\n    return this.name + \": \" + this.message + code;\n  }\n};\nvar cssSyntaxError = CssSyntaxError$3;\nCssSyntaxError$3.default = CssSyntaxError$3;\nvar symbols = {};\nsymbols.isClean = Symbol(\"isClean\");\nsymbols.my = Symbol(\"my\");\nconst DEFAULT_RAW = {\n  after: \"\\n\",\n  beforeClose: \"\\n\",\n  beforeComment: \"\\n\",\n  beforeDecl: \"\\n\",\n  beforeOpen: \" \",\n  beforeRule: \"\\n\",\n  colon: \": \",\n  commentLeft: \" \",\n  commentRight: \" \",\n  emptyBody: \"\",\n  indent: \"    \",\n  semicolon: false\n};\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nlet Stringifier$2 = class Stringifier {\n  constructor(builder) {\n    this.builder = builder;\n  }\n  atrule(node2, semicolon) {\n    let name = \"@\" + node2.name;\n    let params = node2.params ? this.rawValue(node2, \"params\") : \"\";\n    if (typeof node2.raws.afterName !== \"undefined\") {\n      name += node2.raws.afterName;\n    } else if (params) {\n      name += \" \";\n    }\n    if (node2.nodes) {\n      this.block(node2, name + params);\n    } else {\n      let end = (node2.raws.between || \"\") + (semicolon ? \";\" : \"\");\n      this.builder(name + params + end, node2);\n    }\n  }\n  beforeAfter(node2, detect) {\n    let value;\n    if (node2.type === \"decl\") {\n      value = this.raw(node2, null, \"beforeDecl\");\n    } else if (node2.type === \"comment\") {\n      value = this.raw(node2, null, \"beforeComment\");\n    } else if (detect === \"before\") {\n      value = this.raw(node2, null, \"beforeRule\");\n    } else {\n      value = this.raw(node2, null, \"beforeClose\");\n    }\n    let buf = node2.parent;\n    let depth = 0;\n    while (buf && buf.type !== \"root\") {\n      depth += 1;\n      buf = buf.parent;\n    }\n    if (value.includes(\"\\n\")) {\n      let indent = this.raw(node2, null, \"indent\");\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent;\n      }\n    }\n    return value;\n  }\n  block(node2, start) {\n    let between = this.raw(node2, \"between\", \"beforeOpen\");\n    this.builder(start + between + \"{\", node2, \"start\");\n    let after;\n    if (node2.nodes && node2.nodes.length) {\n      this.body(node2);\n      after = this.raw(node2, \"after\");\n    } else {\n      after = this.raw(node2, \"after\", \"emptyBody\");\n    }\n    if (after) this.builder(after);\n    this.builder(\"}\", node2, \"end\");\n  }\n  body(node2) {\n    let last = node2.nodes.length - 1;\n    while (last > 0) {\n      if (node2.nodes[last].type !== \"comment\") break;\n      last -= 1;\n    }\n    let semicolon = this.raw(node2, \"semicolon\");\n    for (let i = 0; i < node2.nodes.length; i++) {\n      let child = node2.nodes[i];\n      let before = this.raw(child, \"before\");\n      if (before) this.builder(before);\n      this.stringify(child, last !== i || semicolon);\n    }\n  }\n  comment(node2) {\n    let left = this.raw(node2, \"left\", \"commentLeft\");\n    let right = this.raw(node2, \"right\", \"commentRight\");\n    this.builder(\"/*\" + left + node2.text + right + \"*/\", node2);\n  }\n  decl(node2, semicolon) {\n    let between = this.raw(node2, \"between\", \"colon\");\n    let string = node2.prop + between + this.rawValue(node2, \"value\");\n    if (node2.important) {\n      string += node2.raws.important || \" !important\";\n    }\n    if (semicolon) string += \";\";\n    this.builder(string, node2);\n  }\n  document(node2) {\n    this.body(node2);\n  }\n  raw(node2, own, detect) {\n    let value;\n    if (!detect) detect = own;\n    if (own) {\n      value = node2.raws[own];\n      if (typeof value !== \"undefined\") return value;\n    }\n    let parent = node2.parent;\n    if (detect === \"before\") {\n      if (!parent || parent.type === \"root\" && parent.first === node2) {\n        return \"\";\n      }\n      if (parent && parent.type === \"document\") {\n        return \"\";\n      }\n    }\n    if (!parent) return DEFAULT_RAW[detect];\n    let root2 = node2.root();\n    if (!root2.rawCache) root2.rawCache = {};\n    if (typeof root2.rawCache[detect] !== \"undefined\") {\n      return root2.rawCache[detect];\n    }\n    if (detect === \"before\" || detect === \"after\") {\n      return this.beforeAfter(node2, detect);\n    } else {\n      let method = \"raw\" + capitalize(detect);\n      if (this[method]) {\n        value = this[method](root2, node2);\n      } else {\n        root2.walk((i) => {\n          value = i.raws[own];\n          if (typeof value !== \"undefined\") return false;\n        });\n      }\n    }\n    if (typeof value === \"undefined\") value = DEFAULT_RAW[detect];\n    root2.rawCache[detect] = value;\n    return value;\n  }\n  rawBeforeClose(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== \"undefined\") {\n          value = i.raws.after;\n          if (value.includes(\"\\n\")) {\n            value = value.replace(/[^\\n]+$/, \"\");\n          }\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/\\S/g, \"\");\n    return value;\n  }\n  rawBeforeComment(root2, node2) {\n    let value;\n    root2.walkComments((i) => {\n      if (typeof i.raws.before !== \"undefined\") {\n        value = i.raws.before;\n        if (value.includes(\"\\n\")) {\n          value = value.replace(/[^\\n]+$/, \"\");\n        }\n        return false;\n      }\n    });\n    if (typeof value === \"undefined\") {\n      value = this.raw(node2, null, \"beforeDecl\");\n    } else if (value) {\n      value = value.replace(/\\S/g, \"\");\n    }\n    return value;\n  }\n  rawBeforeDecl(root2, node2) {\n    let value;\n    root2.walkDecls((i) => {\n      if (typeof i.raws.before !== \"undefined\") {\n        value = i.raws.before;\n        if (value.includes(\"\\n\")) {\n          value = value.replace(/[^\\n]+$/, \"\");\n        }\n        return false;\n      }\n    });\n    if (typeof value === \"undefined\") {\n      value = this.raw(node2, null, \"beforeRule\");\n    } else if (value) {\n      value = value.replace(/\\S/g, \"\");\n    }\n    return value;\n  }\n  rawBeforeOpen(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.type !== \"decl\") {\n        value = i.raws.between;\n        if (typeof value !== \"undefined\") return false;\n      }\n    });\n    return value;\n  }\n  rawBeforeRule(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && (i.parent !== root2 || root2.first !== i)) {\n        if (typeof i.raws.before !== \"undefined\") {\n          value = i.raws.before;\n          if (value.includes(\"\\n\")) {\n            value = value.replace(/[^\\n]+$/, \"\");\n          }\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/\\S/g, \"\");\n    return value;\n  }\n  rawColon(root2) {\n    let value;\n    root2.walkDecls((i) => {\n      if (typeof i.raws.between !== \"undefined\") {\n        value = i.raws.between.replace(/[^\\s:]/g, \"\");\n        return false;\n      }\n    });\n    return value;\n  }\n  rawEmptyBody(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after;\n        if (typeof value !== \"undefined\") return false;\n      }\n    });\n    return value;\n  }\n  rawIndent(root2) {\n    if (root2.raws.indent) return root2.raws.indent;\n    let value;\n    root2.walk((i) => {\n      let p = i.parent;\n      if (p && p !== root2 && p.parent && p.parent === root2) {\n        if (typeof i.raws.before !== \"undefined\") {\n          let parts = i.raws.before.split(\"\\n\");\n          value = parts[parts.length - 1];\n          value = value.replace(/\\S/g, \"\");\n          return false;\n        }\n      }\n    });\n    return value;\n  }\n  rawSemicolon(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && i.nodes.length && i.last.type === \"decl\") {\n        value = i.raws.semicolon;\n        if (typeof value !== \"undefined\") return false;\n      }\n    });\n    return value;\n  }\n  rawValue(node2, prop) {\n    let value = node2[prop];\n    let raw = node2.raws[prop];\n    if (raw && raw.value === value) {\n      return raw.raw;\n    }\n    return value;\n  }\n  root(node2) {\n    this.body(node2);\n    if (node2.raws.after) this.builder(node2.raws.after);\n  }\n  rule(node2) {\n    this.block(node2, this.rawValue(node2, \"selector\"));\n    if (node2.raws.ownSemicolon) {\n      this.builder(node2.raws.ownSemicolon, node2, \"end\");\n    }\n  }\n  stringify(node2, semicolon) {\n    if (!this[node2.type]) {\n      throw new Error(\n        \"Unknown AST node type \" + node2.type + \". Maybe you need to change PostCSS stringifier.\"\n      );\n    }\n    this[node2.type](node2, semicolon);\n  }\n};\nvar stringifier = Stringifier$2;\nStringifier$2.default = Stringifier$2;\nlet Stringifier$1 = stringifier;\nfunction stringify$4(node2, builder) {\n  let str = new Stringifier$1(builder);\n  str.stringify(node2);\n}\nvar stringify_1 = stringify$4;\nstringify$4.default = stringify$4;\nlet { isClean: isClean$2, my: my$2 } = symbols;\nlet CssSyntaxError$2 = cssSyntaxError;\nlet Stringifier2 = stringifier;\nlet stringify$3 = stringify_1;\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor();\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      continue;\n    }\n    if (i === \"proxyCache\") continue;\n    let value = obj[i];\n    let type = typeof value;\n    if (i === \"parent\" && type === \"object\") {\n      if (parent) cloned[i] = parent;\n    } else if (i === \"source\") {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map((j) => cloneNode(j, cloned));\n    } else {\n      if (type === \"object\" && value !== null) value = cloneNode(value);\n      cloned[i] = value;\n    }\n  }\n  return cloned;\n}\nlet Node$4 = class Node {\n  constructor(defaults = {}) {\n    this.raws = {};\n    this[isClean$2] = false;\n    this[my$2] = true;\n    for (let name in defaults) {\n      if (name === \"nodes\") {\n        this.nodes = [];\n        for (let node2 of defaults[name]) {\n          if (typeof node2.clone === \"function\") {\n            this.append(node2.clone());\n          } else {\n            this.append(node2);\n          }\n        }\n      } else {\n        this[name] = defaults[name];\n      }\n    }\n  }\n  addToError(error) {\n    error.postcssNode = this;\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source;\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      );\n    }\n    return error;\n  }\n  after(add) {\n    this.parent.insertAfter(this, add);\n    return this;\n  }\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name];\n    }\n    return this;\n  }\n  before(add) {\n    this.parent.insertBefore(this, add);\n    return this;\n  }\n  cleanRaws(keepBetween) {\n    delete this.raws.before;\n    delete this.raws.after;\n    if (!keepBetween) delete this.raws.between;\n  }\n  clone(overrides = {}) {\n    let cloned = cloneNode(this);\n    for (let name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned;\n  }\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertAfter(this, cloned);\n    return cloned;\n  }\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertBefore(this, cloned);\n    return cloned;\n  }\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts);\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      );\n    }\n    return new CssSyntaxError$2(message);\n  }\n  getProxyProcessor() {\n    return {\n      get(node2, prop) {\n        if (prop === \"proxyOf\") {\n          return node2;\n        } else if (prop === \"root\") {\n          return () => node2.root().toProxy();\n        } else {\n          return node2[prop];\n        }\n      },\n      set(node2, prop, value) {\n        if (node2[prop] === value) return true;\n        node2[prop] = value;\n        if (prop === \"prop\" || prop === \"value\" || prop === \"name\" || prop === \"params\" || prop === \"important\" || /* c8 ignore next */\n        prop === \"text\") {\n          node2.markDirty();\n        }\n        return true;\n      }\n    };\n  }\n  markDirty() {\n    if (this[isClean$2]) {\n      this[isClean$2] = false;\n      let next = this;\n      while (next = next.parent) {\n        next[isClean$2] = false;\n      }\n    }\n  }\n  next() {\n    if (!this.parent) return void 0;\n    let index2 = this.parent.index(this);\n    return this.parent.nodes[index2 + 1];\n  }\n  positionBy(opts, stringRepresentation) {\n    let pos = this.source.start;\n    if (opts.index) {\n      pos = this.positionInside(opts.index, stringRepresentation);\n    } else if (opts.word) {\n      stringRepresentation = this.toString();\n      let index2 = stringRepresentation.indexOf(opts.word);\n      if (index2 !== -1) pos = this.positionInside(index2, stringRepresentation);\n    }\n    return pos;\n  }\n  positionInside(index2, stringRepresentation) {\n    let string = stringRepresentation || this.toString();\n    let column = this.source.start.column;\n    let line = this.source.start.line;\n    for (let i = 0; i < index2; i++) {\n      if (string[i] === \"\\n\") {\n        column = 1;\n        line += 1;\n      } else {\n        column += 1;\n      }\n    }\n    return { column, line };\n  }\n  prev() {\n    if (!this.parent) return void 0;\n    let index2 = this.parent.index(this);\n    return this.parent.nodes[index2 - 1];\n  }\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    };\n    let end = this.source.end ? {\n      column: this.source.end.column + 1,\n      line: this.source.end.line\n    } : {\n      column: start.column + 1,\n      line: start.line\n    };\n    if (opts.word) {\n      let stringRepresentation = this.toString();\n      let index2 = stringRepresentation.indexOf(opts.word);\n      if (index2 !== -1) {\n        start = this.positionInside(index2, stringRepresentation);\n        end = this.positionInside(index2 + opts.word.length, stringRepresentation);\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        };\n      } else if (opts.index) {\n        start = this.positionInside(opts.index);\n      }\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        };\n      } else if (typeof opts.endIndex === \"number\") {\n        end = this.positionInside(opts.endIndex);\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1);\n      }\n    }\n    if (end.line < start.line || end.line === start.line && end.column <= start.column) {\n      end = { column: start.column + 1, line: start.line };\n    }\n    return { end, start };\n  }\n  raw(prop, defaultType) {\n    let str = new Stringifier2();\n    return str.raw(this, prop, defaultType);\n  }\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = void 0;\n    return this;\n  }\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this;\n      let foundSelf = false;\n      for (let node2 of nodes) {\n        if (node2 === this) {\n          foundSelf = true;\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node2);\n          bookmark = node2;\n        } else {\n          this.parent.insertBefore(bookmark, node2);\n        }\n      }\n      if (!foundSelf) {\n        this.remove();\n      }\n    }\n    return this;\n  }\n  root() {\n    let result2 = this;\n    while (result2.parent && result2.parent.type !== \"document\") {\n      result2 = result2.parent;\n    }\n    return result2;\n  }\n  toJSON(_, inputs) {\n    let fixed = {};\n    let emitInputs = inputs == null;\n    inputs = inputs || /* @__PURE__ */ new Map();\n    let inputsNextIndex = 0;\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        continue;\n      }\n      if (name === \"parent\" || name === \"proxyCache\") continue;\n      let value = this[name];\n      if (Array.isArray(value)) {\n        fixed[name] = value.map((i) => {\n          if (typeof i === \"object\" && i.toJSON) {\n            return i.toJSON(null, inputs);\n          } else {\n            return i;\n          }\n        });\n      } else if (typeof value === \"object\" && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs);\n      } else if (name === \"source\") {\n        let inputId = inputs.get(value.input);\n        if (inputId == null) {\n          inputId = inputsNextIndex;\n          inputs.set(value.input, inputsNextIndex);\n          inputsNextIndex++;\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        };\n      } else {\n        fixed[name] = value;\n      }\n    }\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map((input2) => input2.toJSON());\n    }\n    return fixed;\n  }\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor());\n    }\n    return this.proxyCache;\n  }\n  toString(stringifier2 = stringify$3) {\n    if (stringifier2.stringify) stringifier2 = stringifier2.stringify;\n    let result2 = \"\";\n    stringifier2(this, (i) => {\n      result2 += i;\n    });\n    return result2;\n  }\n  warn(result2, text, opts) {\n    let data = { node: this };\n    for (let i in opts) data[i] = opts[i];\n    return result2.warn(text, data);\n  }\n  get proxyOf() {\n    return this;\n  }\n};\nvar node = Node$4;\nNode$4.default = Node$4;\nlet Node$3 = node;\nlet Declaration$4 = class Declaration extends Node$3 {\n  constructor(defaults) {\n    if (defaults && typeof defaults.value !== \"undefined\" && typeof defaults.value !== \"string\") {\n      defaults = { ...defaults, value: String(defaults.value) };\n    }\n    super(defaults);\n    this.type = \"decl\";\n  }\n  get variable() {\n    return this.prop.startsWith(\"--\") || this.prop[0] === \"$\";\n  }\n};\nvar declaration = Declaration$4;\nDeclaration$4.default = Declaration$4;\nlet urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = \"\";\n    let i = size;\n    while (i--) {\n      id += alphabet[Math.random() * alphabet.length | 0];\n    }\n    return id;\n  };\n};\nlet nanoid$1 = (size = 21) => {\n  let id = \"\";\n  let i = size;\n  while (i--) {\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n};\nvar nonSecure = { nanoid: nanoid$1, customAlphabet };\nlet { SourceMapConsumer: SourceMapConsumer$2, SourceMapGenerator: SourceMapGenerator$2 } = require$$2;\nlet { existsSync, readFileSync } = require$$2;\nlet { dirname: dirname$1, join } = require$$2;\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, \"base64\").toString();\n  } else {\n    return window.atob(str);\n  }\n}\nlet PreviousMap$2 = class PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return;\n    this.loadAnnotation(css);\n    this.inline = this.startWith(this.annotation, \"data:\");\n    let prev = opts.map ? opts.map.prev : void 0;\n    let text = this.loadMap(opts.from, prev);\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from;\n    }\n    if (this.mapFile) this.root = dirname$1(this.mapFile);\n    if (text) this.text = text;\n  }\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer$2(this.text);\n    }\n    return this.consumerCache;\n  }\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n    let baseUri = /^data:application\\/json;base64,/;\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\n    let uri = /^data:application\\/json,/;\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length));\n    }\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length));\n    }\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n    throw new Error(\"Unsupported source map encoding \" + encoding);\n  }\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, \"\").trim();\n  }\n  isMap(map) {\n    if (typeof map !== \"object\") return false;\n    return typeof map.mappings === \"string\" || typeof map._mappings === \"string\" || Array.isArray(map.sections);\n  }\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm);\n    if (!comments) return;\n    let start = css.lastIndexOf(comments.pop());\n    let end = css.indexOf(\"*/\", start);\n    if (start > -1 && end > -1) {\n      this.annotation = this.getAnnotationURL(css.substring(start, end));\n    }\n  }\n  loadFile(path) {\n    this.root = dirname$1(path);\n    if (existsSync(path)) {\n      this.mapFile = path;\n      return readFileSync(path, \"utf-8\").toString().trim();\n    }\n  }\n  loadMap(file, prev) {\n    if (prev === false) return false;\n    if (prev) {\n      if (typeof prev === \"string\") {\n        return prev;\n      } else if (typeof prev === \"function\") {\n        let prevPath = prev(file);\n        if (prevPath) {\n          let map = this.loadFile(prevPath);\n          if (!map) {\n            throw new Error(\n              \"Unable to load previous source map: \" + prevPath.toString()\n            );\n          }\n          return map;\n        }\n      } else if (prev instanceof SourceMapConsumer$2) {\n        return SourceMapGenerator$2.fromSourceMap(prev).toString();\n      } else if (prev instanceof SourceMapGenerator$2) {\n        return prev.toString();\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev);\n      } else {\n        throw new Error(\n          \"Unsupported previous source map format: \" + prev.toString()\n        );\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation);\n    } else if (this.annotation) {\n      let map = this.annotation;\n      if (file) map = join(dirname$1(file), map);\n      return this.loadFile(map);\n    }\n  }\n  startWith(string, start) {\n    if (!string) return false;\n    return string.substr(0, start.length) === start;\n  }\n  withContent() {\n    return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n  }\n};\nvar previousMap = PreviousMap$2;\nPreviousMap$2.default = PreviousMap$2;\nlet { SourceMapConsumer: SourceMapConsumer$1, SourceMapGenerator: SourceMapGenerator$1 } = require$$2;\nlet { fileURLToPath, pathToFileURL: pathToFileURL$1 } = require$$2;\nlet { isAbsolute, resolve: resolve$1 } = require$$2;\nlet { nanoid } = nonSecure;\nlet terminalHighlight = require$$2;\nlet CssSyntaxError$1 = cssSyntaxError;\nlet PreviousMap$1 = previousMap;\nlet fromOffsetCache = Symbol(\"fromOffsetCache\");\nlet sourceMapAvailable$1 = Boolean(SourceMapConsumer$1 && SourceMapGenerator$1);\nlet pathAvailable$1 = Boolean(resolve$1 && isAbsolute);\nlet Input$4 = class Input {\n  constructor(css, opts = {}) {\n    if (css === null || typeof css === \"undefined\" || typeof css === \"object\" && !css.toString) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`);\n    }\n    this.css = css.toString();\n    if (this.css[0] === \"\\uFEFF\" || this.css[0] === \"￾\") {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n    if (opts.from) {\n      if (!pathAvailable$1 || /^\\w+:\\/\\//.test(opts.from) || isAbsolute(opts.from)) {\n        this.file = opts.from;\n      } else {\n        this.file = resolve$1(opts.from);\n      }\n    }\n    if (pathAvailable$1 && sourceMapAvailable$1) {\n      let map = new PreviousMap$1(this.css, opts);\n      if (map.text) {\n        this.map = map;\n        let file = map.consumer().file;\n        if (!this.file && file) this.file = this.mapResolve(file);\n      }\n    }\n    if (!this.file) {\n      this.id = \"<input css \" + nanoid(6) + \">\";\n    }\n    if (this.map) this.map.file = this.from;\n  }\n  error(message, line, column, opts = {}) {\n    let result2, endLine, endColumn;\n    if (line && typeof line === \"object\") {\n      let start = line;\n      let end = column;\n      if (typeof start.offset === \"number\") {\n        let pos = this.fromOffset(start.offset);\n        line = pos.line;\n        column = pos.col;\n      } else {\n        line = start.line;\n        column = start.column;\n      }\n      if (typeof end.offset === \"number\") {\n        let pos = this.fromOffset(end.offset);\n        endLine = pos.line;\n        endColumn = pos.col;\n      } else {\n        endLine = end.line;\n        endColumn = end.column;\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line);\n      line = pos.line;\n      column = pos.col;\n    }\n    let origin = this.origin(line, column, endLine, endColumn);\n    if (origin) {\n      result2 = new CssSyntaxError$1(\n        message,\n        origin.endLine === void 0 ? origin.line : { column: origin.column, line: origin.line },\n        origin.endLine === void 0 ? origin.column : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      );\n    } else {\n      result2 = new CssSyntaxError$1(\n        message,\n        endLine === void 0 ? line : { column, line },\n        endLine === void 0 ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      );\n    }\n    result2.input = { column, endColumn, endLine, line, source: this.css };\n    if (this.file) {\n      if (pathToFileURL$1) {\n        result2.input.url = pathToFileURL$1(this.file).toString();\n      }\n      result2.input.file = this.file;\n    }\n    return result2;\n  }\n  fromOffset(offset) {\n    let lastLine, lineToIndex;\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split(\"\\n\");\n      lineToIndex = new Array(lines.length);\n      let prevIndex = 0;\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex;\n        prevIndex += lines[i].length + 1;\n      }\n      this[fromOffsetCache] = lineToIndex;\n    } else {\n      lineToIndex = this[fromOffsetCache];\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1];\n    let min = 0;\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1;\n    } else {\n      let max = lineToIndex.length - 2;\n      let mid;\n      while (min < max) {\n        mid = min + (max - min >> 1);\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1;\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1;\n        } else {\n          min = mid;\n          break;\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    };\n  }\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file;\n    }\n    return resolve$1(this.map.consumer().sourceRoot || this.map.root || \".\", file);\n  }\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false;\n    let consumer = this.map.consumer();\n    let from = consumer.originalPositionFor({ column, line });\n    if (!from.source) return false;\n    let to;\n    if (typeof endLine === \"number\") {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine });\n    }\n    let fromUrl;\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL$1(from.source);\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL$1(this.map.mapFile)\n      );\n    }\n    let result2 = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    };\n    if (fromUrl.protocol === \"file:\") {\n      if (fileURLToPath) {\n        result2.file = fileURLToPath(fromUrl);\n      } else {\n        throw new Error(`file: protocol is not available in this PostCSS build`);\n      }\n    }\n    let source = consumer.sourceContentFor(from.source);\n    if (source) result2.source = source;\n    return result2;\n  }\n  toJSON() {\n    let json = {};\n    for (let name of [\"hasBOM\", \"css\", \"file\", \"id\"]) {\n      if (this[name] != null) {\n        json[name] = this[name];\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map };\n      if (json.map.consumerCache) {\n        json.map.consumerCache = void 0;\n      }\n    }\n    return json;\n  }\n  get from() {\n    return this.file || this.id;\n  }\n};\nvar input = Input$4;\nInput$4.default = Input$4;\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input$4);\n}\nlet { SourceMapConsumer, SourceMapGenerator } = require$$2;\nlet { dirname, relative, resolve, sep } = require$$2;\nlet { pathToFileURL } = require$$2;\nlet Input$3 = input;\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\nlet pathAvailable = Boolean(dirname && resolve && relative && sep);\nlet MapGenerator$2 = class MapGenerator {\n  constructor(stringify2, root2, opts, cssString) {\n    this.stringify = stringify2;\n    this.mapOpts = opts.map || {};\n    this.root = root2;\n    this.opts = opts;\n    this.css = cssString;\n    this.originalCSS = cssString;\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\n    this.memoizedFileURLs = /* @__PURE__ */ new Map();\n    this.memoizedPaths = /* @__PURE__ */ new Map();\n    this.memoizedURLs = /* @__PURE__ */ new Map();\n  }\n  addAnnotation() {\n    let content;\n    if (this.isInline()) {\n      content = \"data:application/json;base64,\" + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === \"string\") {\n      content = this.mapOpts.annotation;\n    } else if (typeof this.mapOpts.annotation === \"function\") {\n      content = this.mapOpts.annotation(this.opts.to, this.root);\n    } else {\n      content = this.outputFile() + \".map\";\n    }\n    let eol = \"\\n\";\n    if (this.css.includes(\"\\r\\n\")) eol = \"\\r\\n\";\n    this.css += eol + \"/*# sourceMappingURL=\" + content + \" */\";\n  }\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file));\n      let root2 = prev.root || dirname(prev.file);\n      let map;\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text);\n        if (map.sourcesContent) {\n          map.sourcesContent = null;\n        }\n      } else {\n        map = prev.consumer();\n      }\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root2)));\n    }\n  }\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return;\n    if (this.root) {\n      let node2;\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node2 = this.root.nodes[i];\n        if (node2.type !== \"comment\") continue;\n        if (node2.text.indexOf(\"# sourceMappingURL=\") === 0) {\n          this.root.removeChild(i);\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/\\n*?\\/\\*#[\\S\\s]*?\\*\\/$/gm, \"\");\n    }\n  }\n  generate() {\n    this.clearAnnotation();\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap();\n    } else {\n      let result2 = \"\";\n      this.stringify(this.root, (i) => {\n        result2 += i;\n      });\n      return [result2];\n    }\n  }\n  generateMap() {\n    if (this.root) {\n      this.generateString();\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer();\n      prev.file = this.outputFile();\n      this.map = SourceMapGenerator.fromSourceMap(prev, {\n        ignoreInvalidMapping: true\n      });\n    } else {\n      this.map = new SourceMapGenerator({\n        file: this.outputFile(),\n        ignoreInvalidMapping: true\n      });\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : \"<no source>\"\n      });\n    }\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.root && this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n    if (this.isInline()) {\n      return [this.css];\n    } else {\n      return [this.css, this.map];\n    }\n  }\n  generateString() {\n    this.css = \"\";\n    this.map = new SourceMapGenerator({\n      file: this.outputFile(),\n      ignoreInvalidMapping: true\n    });\n    let line = 1;\n    let column = 1;\n    let noSource = \"<no source>\";\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: \"\"\n    };\n    let lines, last;\n    this.stringify(this.root, (str, node2, type) => {\n      this.css += str;\n      if (node2 && type !== \"end\") {\n        mapping.generated.line = line;\n        mapping.generated.column = column - 1;\n        if (node2.source && node2.source.start) {\n          mapping.source = this.sourcePath(node2);\n          mapping.original.line = node2.source.start.line;\n          mapping.original.column = node2.source.start.column - 1;\n          this.map.addMapping(mapping);\n        } else {\n          mapping.source = noSource;\n          mapping.original.line = 1;\n          mapping.original.column = 0;\n          this.map.addMapping(mapping);\n        }\n      }\n      lines = str.match(/\\n/g);\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf(\"\\n\");\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n      if (node2 && type !== \"start\") {\n        let p = node2.parent || { raws: {} };\n        let childless = node2.type === \"decl\" || node2.type === \"atrule\" && !node2.nodes;\n        if (!childless || node2 !== p.last || p.raws.semicolon) {\n          if (node2.source && node2.source.end) {\n            mapping.source = this.sourcePath(node2);\n            mapping.original.line = node2.source.end.line;\n            mapping.original.column = node2.source.end.column - 1;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 2;\n            this.map.addMapping(mapping);\n          } else {\n            mapping.source = noSource;\n            mapping.original.line = 1;\n            mapping.original.column = 0;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 1;\n            this.map.addMapping(mapping);\n          }\n        }\n      }\n    });\n  }\n  isAnnotation() {\n    if (this.isInline()) {\n      return true;\n    }\n    if (typeof this.mapOpts.annotation !== \"undefined\") {\n      return this.mapOpts.annotation;\n    }\n    if (this.previous().length) {\n      return this.previous().some((i) => i.annotation);\n    }\n    return true;\n  }\n  isInline() {\n    if (typeof this.mapOpts.inline !== \"undefined\") {\n      return this.mapOpts.inline;\n    }\n    let annotation = this.mapOpts.annotation;\n    if (typeof annotation !== \"undefined\" && annotation !== true) {\n      return false;\n    }\n    if (this.previous().length) {\n      return this.previous().some((i) => i.inline);\n    }\n    return true;\n  }\n  isMap() {\n    if (typeof this.opts.map !== \"undefined\") {\n      return !!this.opts.map;\n    }\n    return this.previous().length > 0;\n  }\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== \"undefined\") {\n      return this.mapOpts.sourcesContent;\n    }\n    if (this.previous().length) {\n      return this.previous().some((i) => i.withContent());\n    }\n    return true;\n  }\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to);\n    } else if (this.opts.from) {\n      return this.path(this.opts.from);\n    } else {\n      return \"to.css\";\n    }\n  }\n  path(file) {\n    if (this.mapOpts.absolute) return file;\n    if (file.charCodeAt(0) === 60) return file;\n    if (/^\\w+:\\/\\//.test(file)) return file;\n    let cached = this.memoizedPaths.get(file);\n    if (cached) return cached;\n    let from = this.opts.to ? dirname(this.opts.to) : \".\";\n    if (typeof this.mapOpts.annotation === \"string\") {\n      from = dirname(resolve(from, this.mapOpts.annotation));\n    }\n    let path = relative(from, file);\n    this.memoizedPaths.set(file, path);\n    return path;\n  }\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n      if (this.root) {\n        this.root.walk((node2) => {\n          if (node2.source && node2.source.input.map) {\n            let map = node2.source.input.map;\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map);\n            }\n          }\n        });\n      } else {\n        let input2 = new Input$3(this.originalCSS, this.opts);\n        if (input2.map) this.previousMaps.push(input2.map);\n      }\n    }\n    return this.previousMaps;\n  }\n  setSourcesContent() {\n    let already = {};\n    if (this.root) {\n      this.root.walk((node2) => {\n        if (node2.source) {\n          let from = node2.source.input.from;\n          if (from && !already[from]) {\n            already[from] = true;\n            let fromUrl = this.usesFileUrls ? this.toFileUrl(from) : this.toUrl(this.path(from));\n            this.map.setSourceContent(fromUrl, node2.source.input.css);\n          }\n        }\n      });\n    } else if (this.css) {\n      let from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : \"<no source>\";\n      this.map.setSourceContent(from, this.css);\n    }\n  }\n  sourcePath(node2) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from);\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node2.source.input.from);\n    } else {\n      return this.toUrl(this.path(node2.source.input.from));\n    }\n  }\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString(\"base64\");\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)));\n    }\n  }\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path);\n    if (cached) return cached;\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString();\n      this.memoizedFileURLs.set(path, fileURL);\n      return fileURL;\n    } else {\n      throw new Error(\n        \"`map.absolute` option is not available in this PostCSS build\"\n      );\n    }\n  }\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path);\n    if (cached) return cached;\n    if (sep === \"\\\\\") {\n      path = path.replace(/\\\\/g, \"/\");\n    }\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n    this.memoizedURLs.set(path, url);\n    return url;\n  }\n};\nvar mapGenerator = MapGenerator$2;\nlet Node$2 = node;\nlet Comment$4 = class Comment extends Node$2 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"comment\";\n  }\n};\nvar comment = Comment$4;\nComment$4.default = Comment$4;\nlet { isClean: isClean$1, my: my$1 } = symbols;\nlet Declaration$3 = declaration;\nlet Comment$3 = comment;\nlet Node$1 = node;\nlet parse$4, Rule$4, AtRule$4, Root$6;\nfunction cleanSource(nodes) {\n  return nodes.map((i) => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes);\n    delete i.source;\n    return i;\n  });\n}\nfunction markDirtyUp(node2) {\n  node2[isClean$1] = false;\n  if (node2.proxyOf.nodes) {\n    for (let i of node2.proxyOf.nodes) {\n      markDirtyUp(i);\n    }\n  }\n}\nlet Container$7 = class Container extends Node$1 {\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last);\n      for (let node2 of nodes) this.proxyOf.nodes.push(node2);\n    }\n    this.markDirty();\n    return this;\n  }\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween);\n    if (this.nodes) {\n      for (let node2 of this.nodes) node2.cleanRaws(keepBetween);\n    }\n  }\n  each(callback) {\n    if (!this.proxyOf.nodes) return void 0;\n    let iterator = this.getIterator();\n    let index2, result2;\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index2 = this.indexes[iterator];\n      result2 = callback(this.proxyOf.nodes[index2], index2);\n      if (result2 === false) break;\n      this.indexes[iterator] += 1;\n    }\n    delete this.indexes[iterator];\n    return result2;\n  }\n  every(condition) {\n    return this.nodes.every(condition);\n  }\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0;\n    if (!this.indexes) this.indexes = {};\n    this.lastEach += 1;\n    let iterator = this.lastEach;\n    this.indexes[iterator] = 0;\n    return iterator;\n  }\n  getProxyProcessor() {\n    return {\n      get(node2, prop) {\n        if (prop === \"proxyOf\") {\n          return node2;\n        } else if (!node2[prop]) {\n          return node2[prop];\n        } else if (prop === \"each\" || typeof prop === \"string\" && prop.startsWith(\"walk\")) {\n          return (...args) => {\n            return node2[prop](\n              ...args.map((i) => {\n                if (typeof i === \"function\") {\n                  return (child, index2) => i(child.toProxy(), index2);\n                } else {\n                  return i;\n                }\n              })\n            );\n          };\n        } else if (prop === \"every\" || prop === \"some\") {\n          return (cb) => {\n            return node2[prop](\n              (child, ...other) => cb(child.toProxy(), ...other)\n            );\n          };\n        } else if (prop === \"root\") {\n          return () => node2.root().toProxy();\n        } else if (prop === \"nodes\") {\n          return node2.nodes.map((i) => i.toProxy());\n        } else if (prop === \"first\" || prop === \"last\") {\n          return node2[prop].toProxy();\n        } else {\n          return node2[prop];\n        }\n      },\n      set(node2, prop, value) {\n        if (node2[prop] === value) return true;\n        node2[prop] = value;\n        if (prop === \"name\" || prop === \"params\" || prop === \"selector\") {\n          node2.markDirty();\n        }\n        return true;\n      }\n    };\n  }\n  index(child) {\n    if (typeof child === \"number\") return child;\n    if (child.proxyOf) child = child.proxyOf;\n    return this.proxyOf.nodes.indexOf(child);\n  }\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist);\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();\n    existIndex = this.index(exist);\n    for (let node2 of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node2);\n    let index2;\n    for (let id in this.indexes) {\n      index2 = this.indexes[id];\n      if (existIndex < index2) {\n        this.indexes[id] = index2 + nodes.length;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist);\n    let type = existIndex === 0 ? \"prepend\" : false;\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse();\n    existIndex = this.index(exist);\n    for (let node2 of nodes) this.proxyOf.nodes.splice(existIndex, 0, node2);\n    let index2;\n    for (let id in this.indexes) {\n      index2 = this.indexes[id];\n      if (existIndex <= index2) {\n        this.indexes[id] = index2 + nodes.length;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  normalize(nodes, sample) {\n    if (typeof nodes === \"string\") {\n      nodes = cleanSource(parse$4(nodes).nodes);\n    } else if (typeof nodes === \"undefined\") {\n      nodes = [];\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0);\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, \"ignore\");\n      }\n    } else if (nodes.type === \"root\" && this.type !== \"document\") {\n      nodes = nodes.nodes.slice(0);\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, \"ignore\");\n      }\n    } else if (nodes.type) {\n      nodes = [nodes];\n    } else if (nodes.prop) {\n      if (typeof nodes.value === \"undefined\") {\n        throw new Error(\"Value field is missed in node creation\");\n      } else if (typeof nodes.value !== \"string\") {\n        nodes.value = String(nodes.value);\n      }\n      nodes = [new Declaration$3(nodes)];\n    } else if (nodes.selector) {\n      nodes = [new Rule$4(nodes)];\n    } else if (nodes.name) {\n      nodes = [new AtRule$4(nodes)];\n    } else if (nodes.text) {\n      nodes = [new Comment$3(nodes)];\n    } else {\n      throw new Error(\"Unknown node type in node creation\");\n    }\n    let processed = nodes.map((i) => {\n      if (!i[my$1]) Container.rebuild(i);\n      i = i.proxyOf;\n      if (i.parent) i.parent.removeChild(i);\n      if (i[isClean$1]) markDirtyUp(i);\n      if (typeof i.raws.before === \"undefined\") {\n        if (sample && typeof sample.raws.before !== \"undefined\") {\n          i.raws.before = sample.raws.before.replace(/\\S/g, \"\");\n        }\n      }\n      i.parent = this.proxyOf;\n      return i;\n    });\n    return processed;\n  }\n  prepend(...children) {\n    children = children.reverse();\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, \"prepend\").reverse();\n      for (let node2 of nodes) this.proxyOf.nodes.unshift(node2);\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  push(child) {\n    child.parent = this;\n    this.proxyOf.nodes.push(child);\n    return this;\n  }\n  removeAll() {\n    for (let node2 of this.proxyOf.nodes) node2.parent = void 0;\n    this.proxyOf.nodes = [];\n    this.markDirty();\n    return this;\n  }\n  removeChild(child) {\n    child = this.index(child);\n    this.proxyOf.nodes[child].parent = void 0;\n    this.proxyOf.nodes.splice(child, 1);\n    let index2;\n    for (let id in this.indexes) {\n      index2 = this.indexes[id];\n      if (index2 >= child) {\n        this.indexes[id] = index2 - 1;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts;\n      opts = {};\n    }\n    this.walkDecls((decl) => {\n      if (opts.props && !opts.props.includes(decl.prop)) return;\n      if (opts.fast && !decl.value.includes(opts.fast)) return;\n      decl.value = decl.value.replace(pattern, callback);\n    });\n    this.markDirty();\n    return this;\n  }\n  some(condition) {\n    return this.nodes.some(condition);\n  }\n  walk(callback) {\n    return this.each((child, i) => {\n      let result2;\n      try {\n        result2 = callback(child, i);\n      } catch (e) {\n        throw child.addToError(e);\n      }\n      if (result2 !== false && child.walk) {\n        result2 = child.walk(callback);\n      }\n      return result2;\n    });\n  }\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name;\n      return this.walk((child, i) => {\n        if (child.type === \"atrule\") {\n          return callback(child, i);\n        }\n      });\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === \"atrule\" && name.test(child.name)) {\n          return callback(child, i);\n        }\n      });\n    }\n    return this.walk((child, i) => {\n      if (child.type === \"atrule\" && child.name === name) {\n        return callback(child, i);\n      }\n    });\n  }\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === \"comment\") {\n        return callback(child, i);\n      }\n    });\n  }\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop;\n      return this.walk((child, i) => {\n        if (child.type === \"decl\") {\n          return callback(child, i);\n        }\n      });\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === \"decl\" && prop.test(child.prop)) {\n          return callback(child, i);\n        }\n      });\n    }\n    return this.walk((child, i) => {\n      if (child.type === \"decl\" && child.prop === prop) {\n        return callback(child, i);\n      }\n    });\n  }\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector;\n      return this.walk((child, i) => {\n        if (child.type === \"rule\") {\n          return callback(child, i);\n        }\n      });\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === \"rule\" && selector.test(child.selector)) {\n          return callback(child, i);\n        }\n      });\n    }\n    return this.walk((child, i) => {\n      if (child.type === \"rule\" && child.selector === selector) {\n        return callback(child, i);\n      }\n    });\n  }\n  get first() {\n    if (!this.proxyOf.nodes) return void 0;\n    return this.proxyOf.nodes[0];\n  }\n  get last() {\n    if (!this.proxyOf.nodes) return void 0;\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];\n  }\n};\nContainer$7.registerParse = (dependant) => {\n  parse$4 = dependant;\n};\nContainer$7.registerRule = (dependant) => {\n  Rule$4 = dependant;\n};\nContainer$7.registerAtRule = (dependant) => {\n  AtRule$4 = dependant;\n};\nContainer$7.registerRoot = (dependant) => {\n  Root$6 = dependant;\n};\nvar container = Container$7;\nContainer$7.default = Container$7;\nContainer$7.rebuild = (node2) => {\n  if (node2.type === \"atrule\") {\n    Object.setPrototypeOf(node2, AtRule$4.prototype);\n  } else if (node2.type === \"rule\") {\n    Object.setPrototypeOf(node2, Rule$4.prototype);\n  } else if (node2.type === \"decl\") {\n    Object.setPrototypeOf(node2, Declaration$3.prototype);\n  } else if (node2.type === \"comment\") {\n    Object.setPrototypeOf(node2, Comment$3.prototype);\n  } else if (node2.type === \"root\") {\n    Object.setPrototypeOf(node2, Root$6.prototype);\n  }\n  node2[my$1] = true;\n  if (node2.nodes) {\n    node2.nodes.forEach((child) => {\n      Container$7.rebuild(child);\n    });\n  }\n};\nlet Container$6 = container;\nlet LazyResult$4, Processor$3;\nlet Document$3 = class Document extends Container$6 {\n  constructor(defaults) {\n    super({ type: \"document\", ...defaults });\n    if (!this.nodes) {\n      this.nodes = [];\n    }\n  }\n  toResult(opts = {}) {\n    let lazy = new LazyResult$4(new Processor$3(), this, opts);\n    return lazy.stringify();\n  }\n};\nDocument$3.registerLazyResult = (dependant) => {\n  LazyResult$4 = dependant;\n};\nDocument$3.registerProcessor = (dependant) => {\n  Processor$3 = dependant;\n};\nvar document$1 = Document$3;\nDocument$3.default = Document$3;\nlet printed = {};\nvar warnOnce$2 = function warnOnce(message) {\n  if (printed[message]) return;\n  printed[message] = true;\n  if (typeof console !== \"undefined\" && console.warn) {\n    console.warn(message);\n  }\n};\nlet Warning$2 = class Warning {\n  constructor(text, opts = {}) {\n    this.type = \"warning\";\n    this.text = text;\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts);\n      this.line = range.start.line;\n      this.column = range.start.column;\n      this.endLine = range.end.line;\n      this.endColumn = range.end.column;\n    }\n    for (let opt in opts) this[opt] = opts[opt];\n  }\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message;\n    }\n    if (this.plugin) {\n      return this.plugin + \": \" + this.text;\n    }\n    return this.text;\n  }\n};\nvar warning = Warning$2;\nWarning$2.default = Warning$2;\nlet Warning$1 = warning;\nlet Result$3 = class Result {\n  constructor(processor2, root2, opts) {\n    this.processor = processor2;\n    this.messages = [];\n    this.root = root2;\n    this.opts = opts;\n    this.css = void 0;\n    this.map = void 0;\n  }\n  toString() {\n    return this.css;\n  }\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin;\n      }\n    }\n    let warning2 = new Warning$1(text, opts);\n    this.messages.push(warning2);\n    return warning2;\n  }\n  warnings() {\n    return this.messages.filter((i) => i.type === \"warning\");\n  }\n  get content() {\n    return this.css;\n  }\n};\nvar result = Result$3;\nResult$3.default = Result$3;\nconst SINGLE_QUOTE = \"'\".charCodeAt(0);\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0);\nconst BACKSLASH = \"\\\\\".charCodeAt(0);\nconst SLASH = \"/\".charCodeAt(0);\nconst NEWLINE = \"\\n\".charCodeAt(0);\nconst SPACE = \" \".charCodeAt(0);\nconst FEED = \"\\f\".charCodeAt(0);\nconst TAB = \"\t\".charCodeAt(0);\nconst CR = \"\\r\".charCodeAt(0);\nconst OPEN_SQUARE = \"[\".charCodeAt(0);\nconst CLOSE_SQUARE = \"]\".charCodeAt(0);\nconst OPEN_PARENTHESES = \"(\".charCodeAt(0);\nconst CLOSE_PARENTHESES = \")\".charCodeAt(0);\nconst OPEN_CURLY = \"{\".charCodeAt(0);\nconst CLOSE_CURLY = \"}\".charCodeAt(0);\nconst SEMICOLON = \";\".charCodeAt(0);\nconst ASTERISK = \"*\".charCodeAt(0);\nconst COLON = \":\".charCodeAt(0);\nconst AT = \"@\".charCodeAt(0);\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g;\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g;\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/;\nconst RE_HEX_ESCAPE = /[\\da-f]/i;\nvar tokenize = function tokenizer(input2, options = {}) {\n  let css = input2.css.valueOf();\n  let ignore = options.ignoreErrors;\n  let code, next, quote, content, escape;\n  let escaped, escapePos, prev, n, currentToken;\n  let length = css.length;\n  let pos = 0;\n  let buffer = [];\n  let returned = [];\n  function position() {\n    return pos;\n  }\n  function unclosed(what) {\n    throw input2.error(\"Unclosed \" + what, pos);\n  }\n  function endOfFile() {\n    return returned.length === 0 && pos >= length;\n  }\n  function nextToken(opts) {\n    if (returned.length) return returned.pop();\n    if (pos >= length) return;\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n    code = css.charCodeAt(pos);\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n        } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);\n        currentToken = [\"space\", css.slice(pos, next)];\n        pos = next - 1;\n        break;\n      }\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code);\n        currentToken = [controlChar, controlChar, pos];\n        break;\n      }\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : \"\";\n        n = css.charCodeAt(pos + 1);\n        if (prev === \"url\" && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {\n          next = pos;\n          do {\n            escaped = false;\n            next = css.indexOf(\")\", next + 1);\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos;\n                break;\n              } else {\n                unclosed(\"bracket\");\n              }\n            }\n            escapePos = next;\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1;\n              escaped = !escaped;\n            }\n          } while (escaped);\n          currentToken = [\"brackets\", css.slice(pos, next + 1), pos, next];\n          pos = next;\n        } else {\n          next = css.indexOf(\")\", pos + 1);\n          content = css.slice(pos, next + 1);\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = [\"(\", \"(\", pos];\n          } else {\n            currentToken = [\"brackets\", content, pos, next];\n            pos = next;\n          }\n        }\n        break;\n      }\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"';\n        next = pos;\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1;\n              break;\n            } else {\n              unclosed(\"string\");\n            }\n          }\n          escapePos = next;\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped);\n        currentToken = [\"string\", css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break;\n      }\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1;\n        RE_AT_END.test(css);\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1;\n        } else {\n          next = RE_AT_END.lastIndex - 2;\n        }\n        currentToken = [\"at-word\", css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break;\n      }\n      case BACKSLASH: {\n        next = pos;\n        escape = true;\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1;\n          escape = !escape;\n        }\n        code = css.charCodeAt(next + 1);\n        if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {\n          next += 1;\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1;\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1;\n            }\n          }\n        }\n        currentToken = [\"word\", css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break;\n      }\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf(\"*/\", pos + 2) + 1;\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length;\n            } else {\n              unclosed(\"comment\");\n            }\n          }\n          currentToken = [\"comment\", css.slice(pos, next + 1), pos, next];\n          pos = next;\n        } else {\n          RE_WORD_END.lastIndex = pos + 1;\n          RE_WORD_END.test(css);\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1;\n          } else {\n            next = RE_WORD_END.lastIndex - 2;\n          }\n          currentToken = [\"word\", css.slice(pos, next + 1), pos, next];\n          buffer.push(currentToken);\n          pos = next;\n        }\n        break;\n      }\n    }\n    pos++;\n    return currentToken;\n  }\n  function back(token) {\n    returned.push(token);\n  }\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  };\n};\nlet Container$5 = container;\nlet AtRule$3 = class AtRule extends Container$5 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"atrule\";\n  }\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = [];\n    return super.append(...children);\n  }\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = [];\n    return super.prepend(...children);\n  }\n};\nvar atRule = AtRule$3;\nAtRule$3.default = AtRule$3;\nContainer$5.registerAtRule(AtRule$3);\nlet Container$4 = container;\nlet LazyResult$3, Processor$2;\nlet Root$5 = class Root extends Container$4 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"root\";\n    if (!this.nodes) this.nodes = [];\n  }\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child);\n    if (sample) {\n      if (type === \"prepend\") {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before;\n        } else {\n          delete sample.raws.before;\n        }\n      } else if (this.first !== sample) {\n        for (let node2 of nodes) {\n          node2.raws.before = sample.raws.before;\n        }\n      }\n    }\n    return nodes;\n  }\n  removeChild(child, ignore) {\n    let index2 = this.index(child);\n    if (!ignore && index2 === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index2].raws.before;\n    }\n    return super.removeChild(child);\n  }\n  toResult(opts = {}) {\n    let lazy = new LazyResult$3(new Processor$2(), this, opts);\n    return lazy.stringify();\n  }\n};\nRoot$5.registerLazyResult = (dependant) => {\n  LazyResult$3 = dependant;\n};\nRoot$5.registerProcessor = (dependant) => {\n  Processor$2 = dependant;\n};\nvar root = Root$5;\nRoot$5.default = Root$5;\nContainer$4.registerRoot(Root$5);\nlet list$2 = {\n  comma(string) {\n    return list$2.split(string, [\",\"], true);\n  },\n  space(string) {\n    let spaces = [\" \", \"\\n\", \"\t\"];\n    return list$2.split(string, spaces);\n  },\n  split(string, separators, last) {\n    let array = [];\n    let current = \"\";\n    let split = false;\n    let func = 0;\n    let inQuote = false;\n    let prevQuote = \"\";\n    let escape = false;\n    for (let letter of string) {\n      if (escape) {\n        escape = false;\n      } else if (letter === \"\\\\\") {\n        escape = true;\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false;\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true;\n        prevQuote = letter;\n      } else if (letter === \"(\") {\n        func += 1;\n      } else if (letter === \")\") {\n        if (func > 0) func -= 1;\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true;\n      }\n      if (split) {\n        if (current !== \"\") array.push(current.trim());\n        current = \"\";\n        split = false;\n      } else {\n        current += letter;\n      }\n    }\n    if (last || current !== \"\") array.push(current.trim());\n    return array;\n  }\n};\nvar list_1 = list$2;\nlist$2.default = list$2;\nlet Container$3 = container;\nlet list$1 = list_1;\nlet Rule$3 = class Rule extends Container$3 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"rule\";\n    if (!this.nodes) this.nodes = [];\n  }\n  get selectors() {\n    return list$1.comma(this.selector);\n  }\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null;\n    let sep2 = match ? match[0] : \",\" + this.raw(\"between\", \"beforeOpen\");\n    this.selector = values.join(sep2);\n  }\n};\nvar rule = Rule$3;\nRule$3.default = Rule$3;\nContainer$3.registerRule(Rule$3);\nlet Declaration$2 = declaration;\nlet tokenizer2 = tokenize;\nlet Comment$2 = comment;\nlet AtRule$2 = atRule;\nlet Root$4 = root;\nlet Rule$2 = rule;\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n};\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i];\n    let pos = token[3] || token[2];\n    if (pos) return pos;\n  }\n}\nlet Parser$1 = class Parser {\n  constructor(input2) {\n    this.input = input2;\n    this.root = new Root$4();\n    this.current = this.root;\n    this.spaces = \"\";\n    this.semicolon = false;\n    this.createTokenizer();\n    this.root.source = { input: input2, start: { column: 1, line: 1, offset: 0 } };\n  }\n  atrule(token) {\n    let node2 = new AtRule$2();\n    node2.name = token[1].slice(1);\n    if (node2.name === \"\") {\n      this.unnamedAtrule(node2, token);\n    }\n    this.init(node2, token[2]);\n    let type;\n    let prev;\n    let shift;\n    let last = false;\n    let open = false;\n    let params = [];\n    let brackets = [];\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n      type = token[0];\n      if (type === \"(\" || type === \"[\") {\n        brackets.push(type === \"(\" ? \")\" : \"]\");\n      } else if (type === \"{\" && brackets.length > 0) {\n        brackets.push(\"}\");\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n      }\n      if (brackets.length === 0) {\n        if (type === \";\") {\n          node2.source.end = this.getPosition(token[2]);\n          node2.source.end.offset++;\n          this.semicolon = true;\n          break;\n        } else if (type === \"{\") {\n          open = true;\n          break;\n        } else if (type === \"}\") {\n          if (params.length > 0) {\n            shift = params.length - 1;\n            prev = params[shift];\n            while (prev && prev[0] === \"space\") {\n              prev = params[--shift];\n            }\n            if (prev) {\n              node2.source.end = this.getPosition(prev[3] || prev[2]);\n              node2.source.end.offset++;\n            }\n          }\n          this.end(token);\n          break;\n        } else {\n          params.push(token);\n        }\n      } else {\n        params.push(token);\n      }\n      if (this.tokenizer.endOfFile()) {\n        last = true;\n        break;\n      }\n    }\n    node2.raws.between = this.spacesAndCommentsFromEnd(params);\n    if (params.length) {\n      node2.raws.afterName = this.spacesAndCommentsFromStart(params);\n      this.raw(node2, \"params\", params);\n      if (last) {\n        token = params[params.length - 1];\n        node2.source.end = this.getPosition(token[3] || token[2]);\n        node2.source.end.offset++;\n        this.spaces = node2.raws.between;\n        node2.raws.between = \"\";\n      }\n    } else {\n      node2.raws.afterName = \"\";\n      node2.params = \"\";\n    }\n    if (open) {\n      node2.nodes = [];\n      this.current = node2;\n    }\n  }\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens);\n    if (colon === false) return;\n    let founded = 0;\n    let token;\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j];\n      if (token[0] !== \"space\") {\n        founded += 1;\n        if (founded === 2) break;\n      }\n    }\n    throw this.input.error(\n      \"Missed semicolon\",\n      token[0] === \"word\" ? token[3] + 1 : token[2]\n    );\n  }\n  colon(tokens) {\n    let brackets = 0;\n    let token, type, prev;\n    for (let [i, element] of tokens.entries()) {\n      token = element;\n      type = token[0];\n      if (type === \"(\") {\n        brackets += 1;\n      }\n      if (type === \")\") {\n        brackets -= 1;\n      }\n      if (brackets === 0 && type === \":\") {\n        if (!prev) {\n          this.doubleColon(token);\n        } else if (prev[0] === \"word\" && prev[1] === \"progid\") {\n          continue;\n        } else {\n          return i;\n        }\n      }\n      prev = token;\n    }\n    return false;\n  }\n  comment(token) {\n    let node2 = new Comment$2();\n    this.init(node2, token[2]);\n    node2.source.end = this.getPosition(token[3] || token[2]);\n    node2.source.end.offset++;\n    let text = token[1].slice(2, -2);\n    if (/^\\s*$/.test(text)) {\n      node2.text = \"\";\n      node2.raws.left = text;\n      node2.raws.right = \"\";\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/);\n      node2.text = match[2];\n      node2.raws.left = match[1];\n      node2.raws.right = match[3];\n    }\n  }\n  createTokenizer() {\n    this.tokenizer = tokenizer2(this.input);\n  }\n  decl(tokens, customProperty) {\n    let node2 = new Declaration$2();\n    this.init(node2, tokens[0][2]);\n    let last = tokens[tokens.length - 1];\n    if (last[0] === \";\") {\n      this.semicolon = true;\n      tokens.pop();\n    }\n    node2.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    );\n    node2.source.end.offset++;\n    while (tokens[0][0] !== \"word\") {\n      if (tokens.length === 1) this.unknownWord(tokens);\n      node2.raws.before += tokens.shift()[1];\n    }\n    node2.source.start = this.getPosition(tokens[0][2]);\n    node2.prop = \"\";\n    while (tokens.length) {\n      let type = tokens[0][0];\n      if (type === \":\" || type === \"space\" || type === \"comment\") {\n        break;\n      }\n      node2.prop += tokens.shift()[1];\n    }\n    node2.raws.between = \"\";\n    let token;\n    while (tokens.length) {\n      token = tokens.shift();\n      if (token[0] === \":\") {\n        node2.raws.between += token[1];\n        break;\n      } else {\n        if (token[0] === \"word\" && /\\w/.test(token[1])) {\n          this.unknownWord([token]);\n        }\n        node2.raws.between += token[1];\n      }\n    }\n    if (node2.prop[0] === \"_\" || node2.prop[0] === \"*\") {\n      node2.raws.before += node2.prop[0];\n      node2.prop = node2.prop.slice(1);\n    }\n    let firstSpaces = [];\n    let next;\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== \"space\" && next !== \"comment\") break;\n      firstSpaces.push(tokens.shift());\n    }\n    this.precheckMissedSemicolon(tokens);\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token[1].toLowerCase() === \"!important\") {\n        node2.important = true;\n        let string = this.stringFrom(tokens, i);\n        string = this.spacesFromEnd(tokens) + string;\n        if (string !== \" !important\") node2.raws.important = string;\n        break;\n      } else if (token[1].toLowerCase() === \"important\") {\n        let cache = tokens.slice(0);\n        let str = \"\";\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0];\n          if (str.trim().indexOf(\"!\") === 0 && type !== \"space\") {\n            break;\n          }\n          str = cache.pop()[1] + str;\n        }\n        if (str.trim().indexOf(\"!\") === 0) {\n          node2.important = true;\n          node2.raws.important = str;\n          tokens = cache;\n        }\n      }\n      if (token[0] !== \"space\" && token[0] !== \"comment\") {\n        break;\n      }\n    }\n    let hasWord = tokens.some((i) => i[0] !== \"space\" && i[0] !== \"comment\");\n    if (hasWord) {\n      node2.raws.between += firstSpaces.map((i) => i[1]).join(\"\");\n      firstSpaces = [];\n    }\n    this.raw(node2, \"value\", firstSpaces.concat(tokens), customProperty);\n    if (node2.value.includes(\":\") && !customProperty) {\n      this.checkMissedSemicolon(tokens);\n    }\n  }\n  doubleColon(token) {\n    throw this.input.error(\n      \"Double colon\",\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    );\n  }\n  emptyRule(token) {\n    let node2 = new Rule$2();\n    this.init(node2, token[2]);\n    node2.selector = \"\";\n    node2.raws.between = \"\";\n    this.current = node2;\n  }\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n    this.semicolon = false;\n    this.current.raws.after = (this.current.raws.after || \"\") + this.spaces;\n    this.spaces = \"\";\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2]);\n      this.current.source.end.offset++;\n      this.current = this.current.parent;\n    } else {\n      this.unexpectedClose(token);\n    }\n  }\n  endFile() {\n    if (this.current.parent) this.unclosedBlock();\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n    this.current.raws.after = (this.current.raws.after || \"\") + this.spaces;\n    this.root.source.end = this.getPosition(this.tokenizer.position());\n  }\n  freeSemicolon(token) {\n    this.spaces += token[1];\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1];\n      if (prev && prev.type === \"rule\" && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces;\n        this.spaces = \"\";\n      }\n    }\n  }\n  // Helpers\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset);\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    };\n  }\n  init(node2, offset) {\n    this.current.push(node2);\n    node2.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    };\n    node2.raws.before = this.spaces;\n    this.spaces = \"\";\n    if (node2.type !== \"comment\") this.semicolon = false;\n  }\n  other(start) {\n    let end = false;\n    let type = null;\n    let colon = false;\n    let bracket = null;\n    let brackets = [];\n    let customProperty = start[1].startsWith(\"--\");\n    let tokens = [];\n    let token = start;\n    while (token) {\n      type = token[0];\n      tokens.push(token);\n      if (type === \"(\" || type === \"[\") {\n        if (!bracket) bracket = token;\n        brackets.push(type === \"(\" ? \")\" : \"]\");\n      } else if (customProperty && colon && type === \"{\") {\n        if (!bracket) bracket = token;\n        brackets.push(\"}\");\n      } else if (brackets.length === 0) {\n        if (type === \";\") {\n          if (colon) {\n            this.decl(tokens, customProperty);\n            return;\n          } else {\n            break;\n          }\n        } else if (type === \"{\") {\n          this.rule(tokens);\n          return;\n        } else if (type === \"}\") {\n          this.tokenizer.back(tokens.pop());\n          end = true;\n          break;\n        } else if (type === \":\") {\n          colon = true;\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n        if (brackets.length === 0) bracket = null;\n      }\n      token = this.tokenizer.nextToken();\n    }\n    if (this.tokenizer.endOfFile()) end = true;\n    if (brackets.length > 0) this.unclosedBracket(bracket);\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0];\n          if (token !== \"space\" && token !== \"comment\") break;\n          this.tokenizer.back(tokens.pop());\n        }\n      }\n      this.decl(tokens, customProperty);\n    } else {\n      this.unknownWord(tokens);\n    }\n  }\n  parse() {\n    let token;\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n      switch (token[0]) {\n        case \"space\":\n          this.spaces += token[1];\n          break;\n        case \";\":\n          this.freeSemicolon(token);\n          break;\n        case \"}\":\n          this.end(token);\n          break;\n        case \"comment\":\n          this.comment(token);\n          break;\n        case \"at-word\":\n          this.atrule(token);\n          break;\n        case \"{\":\n          this.emptyRule(token);\n          break;\n        default:\n          this.other(token);\n          break;\n      }\n    }\n    this.endFile();\n  }\n  precheckMissedSemicolon() {\n  }\n  raw(node2, prop, tokens, customProperty) {\n    let token, type;\n    let length = tokens.length;\n    let value = \"\";\n    let clean = true;\n    let next, prev;\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i];\n      type = token[0];\n      if (type === \"space\" && i === length - 1 && !customProperty) {\n        clean = false;\n      } else if (type === \"comment\") {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : \"empty\";\n        next = tokens[i + 1] ? tokens[i + 1][0] : \"empty\";\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === \",\") {\n            clean = false;\n          } else {\n            value += token[1];\n          }\n        } else {\n          clean = false;\n        }\n      } else {\n        value += token[1];\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], \"\");\n      node2.raws[prop] = { raw, value };\n    }\n    node2[prop] = value;\n  }\n  rule(tokens) {\n    tokens.pop();\n    let node2 = new Rule$2();\n    this.init(node2, tokens[0][2]);\n    node2.raws.between = this.spacesAndCommentsFromEnd(tokens);\n    this.raw(node2, \"selector\", tokens);\n    this.current = node2;\n  }\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType;\n    let spaces = \"\";\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== \"space\" && lastTokenType !== \"comment\") break;\n      spaces = tokens.pop()[1] + spaces;\n    }\n    return spaces;\n  }\n  // Errors\n  spacesAndCommentsFromStart(tokens) {\n    let next;\n    let spaces = \"\";\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== \"space\" && next !== \"comment\") break;\n      spaces += tokens.shift()[1];\n    }\n    return spaces;\n  }\n  spacesFromEnd(tokens) {\n    let lastTokenType;\n    let spaces = \"\";\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== \"space\") break;\n      spaces = tokens.pop()[1] + spaces;\n    }\n    return spaces;\n  }\n  stringFrom(tokens, from) {\n    let result2 = \"\";\n    for (let i = from; i < tokens.length; i++) {\n      result2 += tokens[i][1];\n    }\n    tokens.splice(from, tokens.length - from);\n    return result2;\n  }\n  unclosedBlock() {\n    let pos = this.current.source.start;\n    throw this.input.error(\"Unclosed block\", pos.line, pos.column);\n  }\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      \"Unclosed bracket\",\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    );\n  }\n  unexpectedClose(token) {\n    throw this.input.error(\n      \"Unexpected }\",\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    );\n  }\n  unknownWord(tokens) {\n    throw this.input.error(\n      \"Unknown word\",\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    );\n  }\n  unnamedAtrule(node2, token) {\n    throw this.input.error(\n      \"At-rule without name\",\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    );\n  }\n};\nvar parser = Parser$1;\nlet Container$2 = container;\nlet Parser2 = parser;\nlet Input$2 = input;\nfunction parse$3(css, opts) {\n  let input2 = new Input$2(css, opts);\n  let parser2 = new Parser2(input2);\n  try {\n    parser2.parse();\n  } catch (e) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (e.name === \"CssSyntaxError\" && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += \"\\nYou tried to parse SCSS with the standard CSS parser; try again with the postcss-scss parser\";\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += \"\\nYou tried to parse Sass with the standard CSS parser; try again with the postcss-sass parser\";\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += \"\\nYou tried to parse Less with the standard CSS parser; try again with the postcss-less parser\";\n        }\n      }\n    }\n    throw e;\n  }\n  return parser2.root;\n}\nvar parse_1 = parse$3;\nparse$3.default = parse$3;\nContainer$2.registerParse(parse$3);\nlet { isClean, my } = symbols;\nlet MapGenerator$1 = mapGenerator;\nlet stringify$2 = stringify_1;\nlet Container$1 = container;\nlet Document$2 = document$1;\nlet warnOnce$1 = warnOnce$2;\nlet Result$2 = result;\nlet parse$2 = parse_1;\nlet Root$3 = root;\nconst TYPE_TO_CLASS_NAME = {\n  atrule: \"AtRule\",\n  comment: \"Comment\",\n  decl: \"Declaration\",\n  document: \"Document\",\n  root: \"Root\",\n  rule: \"Rule\"\n};\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n};\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n};\nconst CHILDREN = 0;\nfunction isPromise(obj) {\n  return typeof obj === \"object\" && typeof obj.then === \"function\";\n}\nfunction getEvents(node2) {\n  let key = false;\n  let type = TYPE_TO_CLASS_NAME[node2.type];\n  if (node2.type === \"decl\") {\n    key = node2.prop.toLowerCase();\n  } else if (node2.type === \"atrule\") {\n    key = node2.name.toLowerCase();\n  }\n  if (key && node2.append) {\n    return [\n      type,\n      type + \"-\" + key,\n      CHILDREN,\n      type + \"Exit\",\n      type + \"Exit-\" + key\n    ];\n  } else if (key) {\n    return [type, type + \"-\" + key, type + \"Exit\", type + \"Exit-\" + key];\n  } else if (node2.append) {\n    return [type, CHILDREN, type + \"Exit\"];\n  } else {\n    return [type, type + \"Exit\"];\n  }\n}\nfunction toStack(node2) {\n  let events;\n  if (node2.type === \"document\") {\n    events = [\"Document\", CHILDREN, \"DocumentExit\"];\n  } else if (node2.type === \"root\") {\n    events = [\"Root\", CHILDREN, \"RootExit\"];\n  } else {\n    events = getEvents(node2);\n  }\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node: node2,\n    visitorIndex: 0,\n    visitors: []\n  };\n}\nfunction cleanMarks(node2) {\n  node2[isClean] = false;\n  if (node2.nodes) node2.nodes.forEach((i) => cleanMarks(i));\n  return node2;\n}\nlet postcss$2 = {};\nlet LazyResult$2 = class LazyResult {\n  constructor(processor2, css, opts) {\n    this.stringified = false;\n    this.processed = false;\n    let root2;\n    if (typeof css === \"object\" && css !== null && (css.type === \"root\" || css.type === \"document\")) {\n      root2 = cleanMarks(css);\n    } else if (css instanceof LazyResult || css instanceof Result$2) {\n      root2 = cleanMarks(css.root);\n      if (css.map) {\n        if (typeof opts.map === \"undefined\") opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      let parser2 = parse$2;\n      if (opts.syntax) parser2 = opts.syntax.parse;\n      if (opts.parser) parser2 = opts.parser;\n      if (parser2.parse) parser2 = parser2.parse;\n      try {\n        root2 = parser2(css, opts);\n      } catch (error) {\n        this.processed = true;\n        this.error = error;\n      }\n      if (root2 && !root2[my]) {\n        Container$1.rebuild(root2);\n      }\n    }\n    this.result = new Result$2(processor2, root2, opts);\n    this.helpers = { ...postcss$2, postcss: postcss$2, result: this.result };\n    this.plugins = this.processor.plugins.map((plugin2) => {\n      if (typeof plugin2 === \"object\" && plugin2.prepare) {\n        return { ...plugin2, ...plugin2.prepare(this.result) };\n      } else {\n        return plugin2;\n      }\n    });\n  }\n  async() {\n    if (this.error) return Promise.reject(this.error);\n    if (this.processed) return Promise.resolve(this.result);\n    if (!this.processing) {\n      this.processing = this.runAsync();\n    }\n    return this.processing;\n  }\n  catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  }\n  getAsyncError() {\n    throw new Error(\"Use process(css).then(cb) to work with async plugins\");\n  }\n  handleError(error, node2) {\n    let plugin2 = this.result.lastPlugin;\n    try {\n      if (node2) node2.addToError(error);\n      this.error = error;\n      if (error.name === \"CssSyntaxError\" && !error.plugin) {\n        error.plugin = plugin2.postcssPlugin;\n        error.setMessage();\n      } else if (plugin2.postcssVersion) {\n        if (process.env.NODE_ENV !== \"production\") {\n          let pluginName = plugin2.postcssPlugin;\n          let pluginVer = plugin2.postcssVersion;\n          let runtimeVer = this.result.processor.version;\n          let a = pluginVer.split(\".\");\n          let b = runtimeVer.split(\".\");\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            console.error(\n              \"Unknown error from PostCSS plugin. Your current PostCSS version is \" + runtimeVer + \", but \" + pluginName + \" uses \" + pluginVer + \". Perhaps this is the source of the error below.\"\n            );\n          }\n        }\n      }\n    } catch (err) {\n      if (console && console.error) console.error(err);\n    }\n    return error;\n  }\n  prepareVisitors() {\n    this.listeners = {};\n    let add = (plugin2, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = [];\n      this.listeners[type].push([plugin2, cb]);\n    };\n    for (let plugin2 of this.plugins) {\n      if (typeof plugin2 === \"object\") {\n        for (let event in plugin2) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin2.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`\n            );\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin2[event] === \"object\") {\n              for (let filter in plugin2[event]) {\n                if (filter === \"*\") {\n                  add(plugin2, event, plugin2[event][filter]);\n                } else {\n                  add(\n                    plugin2,\n                    event + \"-\" + filter.toLowerCase(),\n                    plugin2[event][filter]\n                  );\n                }\n              }\n            } else if (typeof plugin2[event] === \"function\") {\n              add(plugin2, event, plugin2[event]);\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0;\n  }\n  async runAsync() {\n    this.plugin = 0;\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin2 = this.plugins[i];\n      let promise = this.runOnRoot(plugin2);\n      if (isPromise(promise)) {\n        try {\n          await promise;\n        } catch (error) {\n          throw this.handleError(error);\n        }\n      }\n    }\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root2 = this.result.root;\n      while (!root2[isClean]) {\n        root2[isClean] = true;\n        let stack = [toStack(root2)];\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack);\n          if (isPromise(promise)) {\n            try {\n              await promise;\n            } catch (e) {\n              let node2 = stack[stack.length - 1].node;\n              throw this.handleError(e, node2);\n            }\n          }\n        }\n      }\n      if (this.listeners.OnceExit) {\n        for (let [plugin2, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin2;\n          try {\n            if (root2.type === \"document\") {\n              let roots = root2.nodes.map(\n                (subRoot) => visitor(subRoot, this.helpers)\n              );\n              await Promise.all(roots);\n            } else {\n              await visitor(root2, this.helpers);\n            }\n          } catch (e) {\n            throw this.handleError(e);\n          }\n        }\n      }\n    }\n    this.processed = true;\n    return this.stringify();\n  }\n  runOnRoot(plugin2) {\n    this.result.lastPlugin = plugin2;\n    try {\n      if (typeof plugin2 === \"object\" && plugin2.Once) {\n        if (this.result.root.type === \"document\") {\n          let roots = this.result.root.nodes.map(\n            (root2) => plugin2.Once(root2, this.helpers)\n          );\n          if (isPromise(roots[0])) {\n            return Promise.all(roots);\n          }\n          return roots;\n        }\n        return plugin2.Once(this.result.root, this.helpers);\n      } else if (typeof plugin2 === \"function\") {\n        return plugin2(this.result.root, this.result);\n      }\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  stringify() {\n    if (this.error) throw this.error;\n    if (this.stringified) return this.result;\n    this.stringified = true;\n    this.sync();\n    let opts = this.result.opts;\n    let str = stringify$2;\n    if (opts.syntax) str = opts.syntax.stringify;\n    if (opts.stringifier) str = opts.stringifier;\n    if (str.stringify) str = str.stringify;\n    let map = new MapGenerator$1(str, this.result.root, this.result.opts);\n    let data = map.generate();\n    this.result.css = data[0];\n    this.result.map = data[1];\n    return this.result;\n  }\n  sync() {\n    if (this.error) throw this.error;\n    if (this.processed) return this.result;\n    this.processed = true;\n    if (this.processing) {\n      throw this.getAsyncError();\n    }\n    for (let plugin2 of this.plugins) {\n      let promise = this.runOnRoot(plugin2);\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root2 = this.result.root;\n      while (!root2[isClean]) {\n        root2[isClean] = true;\n        this.walkSync(root2);\n      }\n      if (this.listeners.OnceExit) {\n        if (root2.type === \"document\") {\n          for (let subRoot of root2.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot);\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root2);\n        }\n      }\n    }\n    return this.result;\n  }\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!(\"from\" in this.opts)) {\n        warnOnce$1(\n          \"Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning.\"\n        );\n      }\n    }\n    return this.async().then(onFulfilled, onRejected);\n  }\n  toString() {\n    return this.css;\n  }\n  visitSync(visitors, node2) {\n    for (let [plugin2, visitor] of visitors) {\n      this.result.lastPlugin = plugin2;\n      let promise;\n      try {\n        promise = visitor(node2, this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node2.proxyOf);\n      }\n      if (node2.type !== \"root\" && node2.type !== \"document\" && !node2.parent) {\n        return true;\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n  }\n  visitTick(stack) {\n    let visit2 = stack[stack.length - 1];\n    let { node: node2, visitors } = visit2;\n    if (node2.type !== \"root\" && node2.type !== \"document\" && !node2.parent) {\n      stack.pop();\n      return;\n    }\n    if (visitors.length > 0 && visit2.visitorIndex < visitors.length) {\n      let [plugin2, visitor] = visitors[visit2.visitorIndex];\n      visit2.visitorIndex += 1;\n      if (visit2.visitorIndex === visitors.length) {\n        visit2.visitors = [];\n        visit2.visitorIndex = 0;\n      }\n      this.result.lastPlugin = plugin2;\n      try {\n        return visitor(node2.toProxy(), this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node2);\n      }\n    }\n    if (visit2.iterator !== 0) {\n      let iterator = visit2.iterator;\n      let child;\n      while (child = node2.nodes[node2.indexes[iterator]]) {\n        node2.indexes[iterator] += 1;\n        if (!child[isClean]) {\n          child[isClean] = true;\n          stack.push(toStack(child));\n          return;\n        }\n      }\n      visit2.iterator = 0;\n      delete node2.indexes[iterator];\n    }\n    let events = visit2.events;\n    while (visit2.eventIndex < events.length) {\n      let event = events[visit2.eventIndex];\n      visit2.eventIndex += 1;\n      if (event === CHILDREN) {\n        if (node2.nodes && node2.nodes.length) {\n          node2[isClean] = true;\n          visit2.iterator = node2.getIterator();\n        }\n        return;\n      } else if (this.listeners[event]) {\n        visit2.visitors = this.listeners[event];\n        return;\n      }\n    }\n    stack.pop();\n  }\n  walkSync(node2) {\n    node2[isClean] = true;\n    let events = getEvents(node2);\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node2.nodes) {\n          node2.each((child) => {\n            if (!child[isClean]) this.walkSync(child);\n          });\n        }\n      } else {\n        let visitors = this.listeners[event];\n        if (visitors) {\n          if (this.visitSync(visitors, node2.toProxy())) return;\n        }\n      }\n    }\n  }\n  warnings() {\n    return this.sync().warnings();\n  }\n  get content() {\n    return this.stringify().content;\n  }\n  get css() {\n    return this.stringify().css;\n  }\n  get map() {\n    return this.stringify().map;\n  }\n  get messages() {\n    return this.sync().messages;\n  }\n  get opts() {\n    return this.result.opts;\n  }\n  get processor() {\n    return this.result.processor;\n  }\n  get root() {\n    return this.sync().root;\n  }\n  get [Symbol.toStringTag]() {\n    return \"LazyResult\";\n  }\n};\nLazyResult$2.registerPostcss = (dependant) => {\n  postcss$2 = dependant;\n};\nvar lazyResult = LazyResult$2;\nLazyResult$2.default = LazyResult$2;\nRoot$3.registerLazyResult(LazyResult$2);\nDocument$2.registerLazyResult(LazyResult$2);\nlet MapGenerator2 = mapGenerator;\nlet stringify$1 = stringify_1;\nlet warnOnce2 = warnOnce$2;\nlet parse$1 = parse_1;\nconst Result$1 = result;\nlet NoWorkResult$1 = class NoWorkResult {\n  constructor(processor2, css, opts) {\n    css = css.toString();\n    this.stringified = false;\n    this._processor = processor2;\n    this._css = css;\n    this._opts = opts;\n    this._map = void 0;\n    let root2;\n    let str = stringify$1;\n    this.result = new Result$1(this._processor, root2, this._opts);\n    this.result.css = css;\n    let self = this;\n    Object.defineProperty(this.result, \"root\", {\n      get() {\n        return self.root;\n      }\n    });\n    let map = new MapGenerator2(str, root2, this._opts, css);\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate();\n      if (generatedCSS) {\n        this.result.css = generatedCSS;\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap;\n      }\n    } else {\n      map.clearAnnotation();\n      this.result.css = map.css;\n    }\n  }\n  async() {\n    if (this.error) return Promise.reject(this.error);\n    return Promise.resolve(this.result);\n  }\n  catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  }\n  sync() {\n    if (this.error) throw this.error;\n    return this.result;\n  }\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!(\"from\" in this._opts)) {\n        warnOnce2(\n          \"Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning.\"\n        );\n      }\n    }\n    return this.async().then(onFulfilled, onRejected);\n  }\n  toString() {\n    return this._css;\n  }\n  warnings() {\n    return [];\n  }\n  get content() {\n    return this.result.css;\n  }\n  get css() {\n    return this.result.css;\n  }\n  get map() {\n    return this.result.map;\n  }\n  get messages() {\n    return [];\n  }\n  get opts() {\n    return this.result.opts;\n  }\n  get processor() {\n    return this.result.processor;\n  }\n  get root() {\n    if (this._root) {\n      return this._root;\n    }\n    let root2;\n    let parser2 = parse$1;\n    try {\n      root2 = parser2(this._css, this._opts);\n    } catch (error) {\n      this.error = error;\n    }\n    if (this.error) {\n      throw this.error;\n    } else {\n      this._root = root2;\n      return root2;\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"NoWorkResult\";\n  }\n};\nvar noWorkResult = NoWorkResult$1;\nNoWorkResult$1.default = NoWorkResult$1;\nlet NoWorkResult2 = noWorkResult;\nlet LazyResult$1 = lazyResult;\nlet Document$1 = document$1;\nlet Root$2 = root;\nlet Processor$1 = class Processor {\n  constructor(plugins = []) {\n    this.version = \"8.4.38\";\n    this.plugins = this.normalize(plugins);\n  }\n  normalize(plugins) {\n    let normalized = [];\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i();\n      } else if (i.postcss) {\n        i = i.postcss;\n      }\n      if (typeof i === \"object\" && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins);\n      } else if (typeof i === \"object\" && i.postcssPlugin) {\n        normalized.push(i);\n      } else if (typeof i === \"function\") {\n        normalized.push(i);\n      } else if (typeof i === \"object\" && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== \"production\") {\n          throw new Error(\n            \"PostCSS syntaxes cannot be used as plugins. Instead, please use one of the syntax/parser/stringifier options as outlined in your PostCSS runner documentation.\"\n          );\n        }\n      } else {\n        throw new Error(i + \" is not a PostCSS plugin\");\n      }\n    }\n    return normalized;\n  }\n  process(css, opts = {}) {\n    if (!this.plugins.length && !opts.parser && !opts.stringifier && !opts.syntax) {\n      return new NoWorkResult2(this, css, opts);\n    } else {\n      return new LazyResult$1(this, css, opts);\n    }\n  }\n  use(plugin2) {\n    this.plugins = this.plugins.concat(this.normalize([plugin2]));\n    return this;\n  }\n};\nvar processor = Processor$1;\nProcessor$1.default = Processor$1;\nRoot$2.registerProcessor(Processor$1);\nDocument$1.registerProcessor(Processor$1);\nlet Declaration$1 = declaration;\nlet PreviousMap2 = previousMap;\nlet Comment$1 = comment;\nlet AtRule$1 = atRule;\nlet Input$1 = input;\nlet Root$1 = root;\nlet Rule$1 = rule;\nfunction fromJSON$1(json, inputs) {\n  if (Array.isArray(json)) return json.map((n) => fromJSON$1(n));\n  let { inputs: ownInputs, ...defaults } = json;\n  if (ownInputs) {\n    inputs = [];\n    for (let input2 of ownInputs) {\n      let inputHydrated = { ...input2, __proto__: Input$1.prototype };\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap2.prototype\n        };\n      }\n      inputs.push(inputHydrated);\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map((n) => fromJSON$1(n, inputs));\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source;\n    defaults.source = source;\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId];\n    }\n  }\n  if (defaults.type === \"root\") {\n    return new Root$1(defaults);\n  } else if (defaults.type === \"decl\") {\n    return new Declaration$1(defaults);\n  } else if (defaults.type === \"rule\") {\n    return new Rule$1(defaults);\n  } else if (defaults.type === \"comment\") {\n    return new Comment$1(defaults);\n  } else if (defaults.type === \"atrule\") {\n    return new AtRule$1(defaults);\n  } else {\n    throw new Error(\"Unknown node type: \" + json.type);\n  }\n}\nvar fromJSON_1 = fromJSON$1;\nfromJSON$1.default = fromJSON$1;\nlet CssSyntaxError2 = cssSyntaxError;\nlet Declaration2 = declaration;\nlet LazyResult2 = lazyResult;\nlet Container2 = container;\nlet Processor2 = processor;\nlet stringify = stringify_1;\nlet fromJSON = fromJSON_1;\nlet Document2 = document$1;\nlet Warning2 = warning;\nlet Comment2 = comment;\nlet AtRule2 = atRule;\nlet Result2 = result;\nlet Input2 = input;\nlet parse = parse_1;\nlet list = list_1;\nlet Rule2 = rule;\nlet Root2 = root;\nlet Node2 = node;\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0];\n  }\n  return new Processor2(plugins);\n}\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false;\n  function creator(...args) {\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true;\n      console.warn(\n        name + \": postcss.plugin was deprecated. Migration guide:\\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration\"\n      );\n      if (process.env.LANG && process.env.LANG.startsWith(\"cn\")) {\n        console.warn(\n          name + \": 里面 postcss.plugin 被弃用. 迁移指南:\\nhttps://www.w3ctech.com/topic/2226\"\n        );\n      }\n    }\n    let transformer = initializer(...args);\n    transformer.postcssPlugin = name;\n    transformer.postcssVersion = new Processor2().version;\n    return transformer;\n  }\n  let cache;\n  Object.defineProperty(creator, \"postcss\", {\n    get() {\n      if (!cache) cache = creator();\n      return cache;\n    }\n  });\n  creator.process = function(css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts);\n  };\n  return creator;\n};\npostcss.stringify = stringify;\npostcss.parse = parse;\npostcss.fromJSON = fromJSON;\npostcss.list = list;\npostcss.comment = (defaults) => new Comment2(defaults);\npostcss.atRule = (defaults) => new AtRule2(defaults);\npostcss.decl = (defaults) => new Declaration2(defaults);\npostcss.rule = (defaults) => new Rule2(defaults);\npostcss.root = (defaults) => new Root2(defaults);\npostcss.document = (defaults) => new Document2(defaults);\npostcss.CssSyntaxError = CssSyntaxError2;\npostcss.Declaration = Declaration2;\npostcss.Container = Container2;\npostcss.Processor = Processor2;\npostcss.Document = Document2;\npostcss.Comment = Comment2;\npostcss.Warning = Warning2;\npostcss.AtRule = AtRule2;\npostcss.Result = Result2;\npostcss.Input = Input2;\npostcss.Rule = Rule2;\npostcss.Root = Root2;\npostcss.Node = Node2;\nLazyResult2.registerPostcss(postcss);\nvar postcss_1 = postcss;\npostcss.default = postcss;\nconst postcss$1 = /* @__PURE__ */ getDefaultExportFromCjs(postcss_1);\npostcss$1.stringify;\npostcss$1.fromJSON;\npostcss$1.plugin;\npostcss$1.parse;\npostcss$1.list;\npostcss$1.document;\npostcss$1.comment;\npostcss$1.atRule;\npostcss$1.rule;\npostcss$1.decl;\npostcss$1.root;\npostcss$1.CssSyntaxError;\npostcss$1.Declaration;\npostcss$1.Container;\npostcss$1.Processor;\npostcss$1.Document;\npostcss$1.Comment;\npostcss$1.Warning;\npostcss$1.AtRule;\npostcss$1.Result;\npostcss$1.Input;\npostcss$1.Rule;\npostcss$1.Root;\npostcss$1.Node;\nconst tagMap = {\n  script: \"noscript\",\n  // camel case svg element tag names\n  altglyph: \"altGlyph\",\n  altglyphdef: \"altGlyphDef\",\n  altglyphitem: \"altGlyphItem\",\n  animatecolor: \"animateColor\",\n  animatemotion: \"animateMotion\",\n  animatetransform: \"animateTransform\",\n  clippath: \"clipPath\",\n  feblend: \"feBlend\",\n  fecolormatrix: \"feColorMatrix\",\n  fecomponenttransfer: \"feComponentTransfer\",\n  fecomposite: \"feComposite\",\n  feconvolvematrix: \"feConvolveMatrix\",\n  fediffuselighting: \"feDiffuseLighting\",\n  fedisplacementmap: \"feDisplacementMap\",\n  fedistantlight: \"feDistantLight\",\n  fedropshadow: \"feDropShadow\",\n  feflood: \"feFlood\",\n  fefunca: \"feFuncA\",\n  fefuncb: \"feFuncB\",\n  fefuncg: \"feFuncG\",\n  fefuncr: \"feFuncR\",\n  fegaussianblur: \"feGaussianBlur\",\n  feimage: \"feImage\",\n  femerge: \"feMerge\",\n  femergenode: \"feMergeNode\",\n  femorphology: \"feMorphology\",\n  feoffset: \"feOffset\",\n  fepointlight: \"fePointLight\",\n  fespecularlighting: \"feSpecularLighting\",\n  fespotlight: \"feSpotLight\",\n  fetile: \"feTile\",\n  feturbulence: \"feTurbulence\",\n  foreignobject: \"foreignObject\",\n  glyphref: \"glyphRef\",\n  lineargradient: \"linearGradient\",\n  radialgradient: \"radialGradient\"\n};\nfunction getTagName(n) {\n  let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\n  if (tagName === \"link\" && n.attributes._cssText) {\n    tagName = \"style\";\n  }\n  return tagName;\n}\nfunction adaptCssForReplay(cssText, cache) {\n  const cachedStyle = cache == null ? void 0 : cache.stylesWithHoverClass.get(cssText);\n  if (cachedStyle) return cachedStyle;\n  const ast = postcss$1([\n    mediaSelectorPlugin,\n    pseudoClassPlugin\n  ]).process(cssText);\n  const result2 = ast.css;\n  cache == null ? void 0 : cache.stylesWithHoverClass.set(cssText, result2);\n  return result2;\n}\nfunction createCache() {\n  const stylesWithHoverClass = /* @__PURE__ */ new Map();\n  return {\n    stylesWithHoverClass\n  };\n}\nfunction buildNode(n, options) {\n  var _a;\n  const { doc, hackCss, cache } = options;\n  switch (n.type) {\n    case NodeType.Document:\n      return doc.implementation.createDocument(null, \"\", null);\n    case NodeType.DocumentType:\n      return doc.implementation.createDocumentType(\n        n.name || \"html\",\n        n.publicId,\n        n.systemId\n      );\n    case NodeType.Element: {\n      const tagName = getTagName(n);\n      let node2;\n      if (n.isSVG) {\n        node2 = doc.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\n      } else {\n        if (\n          // If the tag name is a custom element name\n          n.isCustom && // If the browser supports custom elements\n          ((_a = doc.defaultView) == null ? void 0 : _a.customElements) && // If the custom element hasn't been defined yet\n          !doc.defaultView.customElements.get(n.tagName)\n        )\n          doc.defaultView.customElements.define(\n            n.tagName,\n            class extends doc.defaultView.HTMLElement {\n            }\n          );\n        node2 = doc.createElement(tagName);\n      }\n      const specialAttributes = {};\n      for (const name in n.attributes) {\n        if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\n          continue;\n        }\n        let value = n.attributes[name];\n        if (tagName === \"option\" && name === \"selected\" && value === false) {\n          continue;\n        }\n        if (value === null) {\n          continue;\n        }\n        if (value === true) value = \"\";\n        if (name.startsWith(\"rr_\")) {\n          specialAttributes[name] = value;\n          continue;\n        }\n        const isTextarea = tagName === \"textarea\" && name === \"value\";\n        const isRemoteOrDynamicCss = tagName === \"style\" && name === \"_cssText\";\n        if (isRemoteOrDynamicCss && hackCss && typeof value === \"string\") {\n          value = adaptCssForReplay(value, cache);\n        }\n        if ((isTextarea || isRemoteOrDynamicCss) && typeof value === \"string\") {\n          node2.appendChild(doc.createTextNode(value));\n          n.childNodes = [];\n          continue;\n        }\n        try {\n          if (n.isSVG && name === \"xlink:href\") {\n            node2.setAttributeNS(\n              \"http://www.w3.org/1999/xlink\",\n              name,\n              value.toString()\n            );\n          } else if (name === \"onload\" || name === \"onclick\" || name.substring(0, 7) === \"onmouse\") {\n            node2.setAttribute(\"_\" + name, value.toString());\n          } else if (tagName === \"meta\" && n.attributes[\"http-equiv\"] === \"Content-Security-Policy\" && name === \"content\") {\n            node2.setAttribute(\"csp-content\", value.toString());\n            continue;\n          } else if (tagName === \"link\" && (n.attributes.rel === \"preload\" || n.attributes.rel === \"modulepreload\") && n.attributes.as === \"script\") {\n          } else if (tagName === \"link\" && n.attributes.rel === \"prefetch\" && typeof n.attributes.href === \"string\" && n.attributes.href.endsWith(\".js\")) {\n          } else if (tagName === \"img\" && n.attributes.srcset && n.attributes.rr_dataURL) {\n            node2.setAttribute(\n              \"rrweb-original-srcset\",\n              n.attributes.srcset\n            );\n          } else {\n            node2.setAttribute(name, value.toString());\n          }\n        } catch (error) {\n        }\n      }\n      for (const name in specialAttributes) {\n        const value = specialAttributes[name];\n        if (tagName === \"canvas\" && name === \"rr_dataURL\") {\n          const image = doc.createElement(\"img\");\n          image.onload = () => {\n            const ctx = node2.getContext(\"2d\");\n            if (ctx) {\n              ctx.drawImage(image, 0, 0, image.width, image.height);\n            }\n          };\n          image.src = value.toString();\n          if (node2.RRNodeType)\n            node2.rr_dataURL = value.toString();\n        } else if (tagName === \"img\" && name === \"rr_dataURL\") {\n          const image = node2;\n          if (!image.currentSrc.startsWith(\"data:\")) {\n            image.setAttribute(\n              \"rrweb-original-src\",\n              n.attributes.src\n            );\n            image.src = value.toString();\n          }\n        }\n        if (name === \"rr_width\") {\n          node2.style.width = value.toString();\n        } else if (name === \"rr_height\") {\n          node2.style.height = value.toString();\n        } else if (name === \"rr_mediaCurrentTime\" && typeof value === \"number\") {\n          node2.currentTime = value;\n        } else if (name === \"rr_mediaState\") {\n          switch (value) {\n            case \"played\":\n              node2.play().catch((e) => console.warn(\"media playback error\", e));\n              break;\n            case \"paused\":\n              node2.pause();\n              break;\n          }\n        } else if (name === \"rr_mediaPlaybackRate\" && typeof value === \"number\") {\n          node2.playbackRate = value;\n        } else if (name === \"rr_mediaMuted\" && typeof value === \"boolean\") {\n          node2.muted = value;\n        } else if (name === \"rr_mediaLoop\" && typeof value === \"boolean\") {\n          node2.loop = value;\n        } else if (name === \"rr_mediaVolume\" && typeof value === \"number\") {\n          node2.volume = value;\n        } else if (name === \"rr_open_mode\") {\n          node2.setAttribute(\n            \"rr_open_mode\",\n            value\n          );\n        }\n      }\n      if (n.isShadowHost) {\n        if (!node2.shadowRoot) {\n          node2.attachShadow({ mode: \"open\" });\n        } else {\n          while (node2.shadowRoot.firstChild) {\n            node2.shadowRoot.removeChild(node2.shadowRoot.firstChild);\n          }\n        }\n      }\n      return node2;\n    }\n    case NodeType.Text:\n      return doc.createTextNode(\n        n.isStyle && hackCss ? adaptCssForReplay(n.textContent, cache) : n.textContent\n      );\n    case NodeType.CDATA:\n      return doc.createCDATASection(n.textContent);\n    case NodeType.Comment:\n      return doc.createComment(n.textContent);\n    default:\n      return null;\n  }\n}\nfunction buildNodeWithSN(n, options) {\n  const {\n    doc,\n    mirror,\n    skipChild = false,\n    hackCss = true,\n    afterAppend,\n    cache\n  } = options;\n  if (mirror.has(n.id)) {\n    const nodeInMirror = mirror.getNode(n.id);\n    const meta = mirror.getMeta(nodeInMirror);\n    if (isNodeMetaEqual(meta, n)) return mirror.getNode(n.id);\n  }\n  let node2 = buildNode(n, { doc, hackCss, cache });\n  if (!node2) {\n    return null;\n  }\n  if (n.rootId && mirror.getNode(n.rootId) !== doc) {\n    mirror.replace(n.rootId, doc);\n  }\n  if (n.type === NodeType.Document) {\n    doc.close();\n    doc.open();\n    if (n.compatMode === \"BackCompat\" && n.childNodes && n.childNodes[0].type !== NodeType.DocumentType) {\n      if (n.childNodes[0].type === NodeType.Element && \"xmlns\" in n.childNodes[0].attributes && n.childNodes[0].attributes.xmlns === \"http://www.w3.org/1999/xhtml\") {\n        doc.write(\n          '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">'\n        );\n      } else {\n        doc.write(\n          '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">'\n        );\n      }\n    }\n    node2 = doc;\n  }\n  mirror.add(node2, n);\n  if ((n.type === NodeType.Document || n.type === NodeType.Element) && !skipChild) {\n    for (const childN of n.childNodes) {\n      const childNode = buildNodeWithSN(childN, {\n        doc,\n        mirror,\n        skipChild: false,\n        hackCss,\n        afterAppend,\n        cache\n      });\n      if (!childNode) {\n        console.warn(\"Failed to rebuild\", childN);\n        continue;\n      }\n      if (childN.isShadow && isElement(node2) && node2.shadowRoot) {\n        node2.shadowRoot.appendChild(childNode);\n      } else if (n.type === NodeType.Document && childN.type == NodeType.Element) {\n        const htmlElement = childNode;\n        let body = null;\n        htmlElement.childNodes.forEach((child) => {\n          if (child.nodeName === \"BODY\") body = child;\n        });\n        if (body) {\n          htmlElement.removeChild(body);\n          node2.appendChild(childNode);\n          htmlElement.appendChild(body);\n        } else {\n          node2.appendChild(childNode);\n        }\n      } else {\n        node2.appendChild(childNode);\n      }\n      if (afterAppend) {\n        afterAppend(childNode, childN.id);\n      }\n    }\n  }\n  return node2;\n}\nfunction visit(mirror, onVisit) {\n  function walk(node2) {\n    onVisit(node2);\n  }\n  for (const id of mirror.getIds()) {\n    if (mirror.has(id)) {\n      walk(mirror.getNode(id));\n    }\n  }\n}\nfunction handleScroll(node2, mirror) {\n  const n = mirror.getMeta(node2);\n  if ((n == null ? void 0 : n.type) !== NodeType.Element) {\n    return;\n  }\n  const el = node2;\n  for (const name in n.attributes) {\n    if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) && name.startsWith(\"rr_\"))) {\n      continue;\n    }\n    const value = n.attributes[name];\n    if (name === \"rr_scrollLeft\") {\n      el.scrollLeft = value;\n    }\n    if (name === \"rr_scrollTop\") {\n      el.scrollTop = value;\n    }\n  }\n}\nfunction rebuild(n, options) {\n  const {\n    doc,\n    onVisit,\n    hackCss = true,\n    afterAppend,\n    cache,\n    mirror = new Mirror()\n  } = options;\n  const node2 = buildNodeWithSN(n, {\n    doc,\n    mirror,\n    skipChild: false,\n    hackCss,\n    afterAppend,\n    cache\n  });\n  visit(mirror, (visitedNode) => {\n    if (onVisit) {\n      onVisit(visitedNode);\n    }\n    handleScroll(visitedNode, mirror);\n  });\n  return node2;\n}\nexport {\n  IGNORED_NODE,\n  Mirror,\n  NodeType,\n  absolutifyURLs,\n  adaptCssForReplay,\n  buildNodeWithSN,\n  classMatchesRegex,\n  cleanupSnapshot,\n  createCache,\n  createMirror,\n  escapeImportStatement,\n  extractFileExtension,\n  fixSafariColons,\n  genId,\n  getInputType,\n  ignoreAttribute,\n  is2DCanvasBlank,\n  isCSSImportRule,\n  isCSSStyleRule,\n  isElement,\n  isNativeShadowDom,\n  isNodeMetaEqual,\n  isShadowRoot,\n  maskInputValue,\n  needMaskingText,\n  rebuild,\n  serializeNodeWithId,\n  snapshot,\n  stringifyRule,\n  stringifyStylesheet,\n  toLowerCase,\n  transformAttribute,\n  visitSnapshot\n};\n//# sourceMappingURL=rrweb-snapshot.js.map\n", "export function parseCSSText(cssText: string): Record<string, string> {\n  const res: Record<string, string> = {};\n  const listDelimiter = /;(?![^(]*\\))/g;\n  const propertyDelimiter = /:(.+)/;\n  const comment = /\\/\\*.*?\\*\\//g;\n  cssText\n    .replace(comment, '')\n    .split(listDelimiter)\n    .forEach(function (item) {\n      if (item) {\n        const tmp = item.split(propertyDelimiter);\n        tmp.length > 1 && (res[camelize(tmp[0].trim())] = tmp[1].trim());\n      }\n    });\n  return res;\n}\n\nexport function toCSSText(style: Record<string, string>): string {\n  const properties = [];\n  for (const name in style) {\n    const value = style[name];\n    if (typeof value !== 'string') continue;\n    const normalizedName = hyphenate(name);\n    properties.push(`${normalizedName}: ${value};`);\n  }\n  return properties.join(' ');\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nconst camelizeRE = /-([a-z])/g;\nconst CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\nexport const camelize = (str: string): string => {\n  if (CUSTOM_PROPERTY_REGEX.test(str)) return str;\n  return str.replace(camelizeRE, (_, c: string) => (c ? c.toUpperCase() : ''));\n};\n\n/**\n * Hyphenate a camelCase string.\n */\nconst hyphenateRE = /\\B([A-Z])/g;\nexport const hyphenate = (str: string): string => {\n  return str.replace(hyphenateRE, '-$1').toLowerCase();\n};\n", "import { NodeType as RRNodeType } from 'rrweb-snapshot';\nimport { parseCSSText, camelize, toCSSText } from './style';\nexport interface IRRNode {\n  parentElement: IRRNode | null;\n  parentNode: IRRNode | null;\n  ownerDocument: IRRDocument;\n  readonly childNodes: IRRNode[];\n  readonly ELEMENT_NODE: number;\n  readonly TEXT_NODE: number;\n  // corresponding nodeType value of standard HTML Node\n  readonly nodeType: number;\n  readonly nodeName: string; // https://dom.spec.whatwg.org/#dom-node-nodename\n  readonly RRNodeType: RRNodeType;\n\n  firstChild: IRRNode | null;\n\n  lastChild: IRRNode | null;\n\n  previousSibling: IRRNode | null;\n\n  nextSibling: IRRNode | null;\n\n  // If the node is a document or a doctype, textContent returns null.\n  textContent: string | null;\n\n  contains(node: IRRNode): boolean;\n\n  appendChild(newChild: IRRNode): IRRNode;\n\n  insertBefore(newChild: IRRNode, refChild: IRRNode | null): IRRNode;\n\n  removeChild(node: IRRNode): IRRNode;\n\n  toString(): string;\n}\nexport interface IRRDocument extends IRRNode {\n  documentElement: IRRElement | null;\n\n  body: IRRElement | null;\n\n  head: IRRElement | null;\n\n  implementation: IRRDocument;\n\n  firstElementChild: IRRElement | null;\n\n  readonly nodeName: '#document';\n\n  compatMode: 'BackCompat' | 'CSS1Compat';\n\n  createDocument(\n    _namespace: string | null,\n    _qualifiedName: string | null,\n    _doctype?: DocumentType | null,\n  ): IRRDocument;\n\n  createDocumentType(\n    qualifiedName: string,\n    publicId: string,\n    systemId: string,\n  ): IRRDocumentType;\n\n  createElement(tagName: string): IRRElement;\n\n  createElementNS(_namespaceURI: string, qualifiedName: string): IRRElement;\n\n  createTextNode(data: string): IRRText;\n\n  createComment(data: string): IRRComment;\n\n  createCDATASection(data: string): IRRCDATASection;\n\n  open(): void;\n\n  close(): void;\n\n  write(content: string): void;\n}\nexport interface IRRElement extends IRRNode {\n  tagName: string;\n  attributes: Record<string, string>;\n  shadowRoot: IRRElement | null;\n  scrollLeft?: number;\n  scrollTop?: number;\n  id: string;\n  className: string;\n  classList: ClassList;\n  style: CSSStyleDeclaration;\n\n  attachShadow(init: ShadowRootInit): IRRElement;\n\n  getAttribute(name: string): string | null;\n\n  setAttribute(name: string, attribute: string): void;\n\n  setAttributeNS(\n    namespace: string | null,\n    qualifiedName: string,\n    value: string,\n  ): void;\n\n  removeAttribute(name: string): void;\n\n  dispatchEvent(event: Event): boolean;\n}\nexport interface IRRDocumentType extends IRRNode {\n  readonly name: string;\n  readonly publicId: string;\n  readonly systemId: string;\n}\nexport interface IRRText extends IRRNode {\n  readonly nodeName: '#text';\n  data: string;\n}\nexport interface IRRComment extends IRRNode {\n  readonly nodeName: '#comment';\n  data: string;\n}\nexport interface IRRCDATASection extends IRRNode {\n  readonly nodeName: '#cdata-section';\n  data: string;\n}\n\n/**\n * This is designed as an abstract class so it should never be instantiated.\n */\nexport abstract class BaseRRNode implements IRRNode {\n  public parentElement: IRRNode | null = null;\n  public parentNode: IRRNode | null = null;\n  public ownerDocument!: IRRDocument;\n  public firstChild: IRRNode | null = null;\n  public lastChild: IRRNode | null = null;\n  public previousSibling: IRRNode | null = null;\n  public nextSibling: IRRNode | null = null;\n\n  public abstract textContent: string | null;\n\n  public readonly ELEMENT_NODE: number = NodeType.ELEMENT_NODE;\n  public readonly TEXT_NODE: number = NodeType.TEXT_NODE;\n  // corresponding nodeType value of standard HTML Node\n  public readonly nodeType!: number;\n  public readonly nodeName!: string;\n  public readonly RRNodeType!: RRNodeType;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n  constructor(..._args: any[]) {\n    //\n  }\n\n  public get childNodes(): IRRNode[] {\n    const childNodes: IRRNode[] = [];\n    let childIterator: IRRNode | null = this.firstChild;\n    while (childIterator) {\n      childNodes.push(childIterator);\n      childIterator = childIterator.nextSibling;\n    }\n    return childNodes;\n  }\n\n  public contains(node: IRRNode) {\n    if (!(node instanceof BaseRRNode)) return false;\n    else if (node.ownerDocument !== this.ownerDocument) return false;\n    else if (node === this) return true;\n\n    while (node.parentNode) {\n      if (node.parentNode === this) return true;\n      node = node.parentNode;\n    }\n    return false;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public appendChild(_newChild: IRRNode): IRRNode {\n    throw new Error(\n      `RRDomException: Failed to execute 'appendChild' on 'RRNode': This RRNode type does not support this method.`,\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public insertBefore(_newChild: IRRNode, _refChild: IRRNode | null): IRRNode {\n    throw new Error(\n      `RRDomException: Failed to execute 'insertBefore' on 'RRNode': This RRNode type does not support this method.`,\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public removeChild(_node: IRRNode): IRRNode {\n    throw new Error(\n      `RRDomException: Failed to execute 'removeChild' on 'RRNode': This RRNode type does not support this method.`,\n    );\n  }\n\n  public toString(): string {\n    return 'RRNode';\n  }\n}\n\nexport class BaseRRDocument extends BaseRRNode implements IRRDocument {\n  public readonly nodeType: number = NodeType.DOCUMENT_NODE;\n  public readonly nodeName = '#document' as const;\n  public readonly compatMode: 'BackCompat' | 'CSS1Compat' = 'CSS1Compat';\n  public readonly RRNodeType = RRNodeType.Document;\n  public textContent: string | null = null;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(...args: any[]) {\n    super(args);\n    this.ownerDocument = this;\n  }\n\n  public get documentElement(): IRRElement | null {\n    return (\n      (this.childNodes.find(\n        (node) =>\n          node.RRNodeType === RRNodeType.Element &&\n          (node as IRRElement).tagName === 'HTML',\n      ) as IRRElement) || null\n    );\n  }\n\n  public get body(): IRRElement | null {\n    return (\n      (this.documentElement?.childNodes.find(\n        (node) =>\n          node.RRNodeType === RRNodeType.Element &&\n          (node as IRRElement).tagName === 'BODY',\n      ) as IRRElement) || null\n    );\n  }\n\n  public get head(): IRRElement | null {\n    return (\n      (this.documentElement?.childNodes.find(\n        (node) =>\n          node.RRNodeType === RRNodeType.Element &&\n          (node as IRRElement).tagName === 'HEAD',\n      ) as IRRElement) || null\n    );\n  }\n\n  public get implementation(): IRRDocument {\n    return this;\n  }\n\n  public get firstElementChild(): IRRElement | null {\n    return this.documentElement;\n  }\n\n  public appendChild(newChild: IRRNode): IRRNode {\n    const nodeType = newChild.RRNodeType;\n    if (\n      nodeType === RRNodeType.Element ||\n      nodeType === RRNodeType.DocumentType\n    ) {\n      if (this.childNodes.some((s) => s.RRNodeType === nodeType)) {\n        throw new Error(\n          `RRDomException: Failed to execute 'appendChild' on 'RRNode': Only one ${\n            nodeType === RRNodeType.Element ? 'RRElement' : 'RRDoctype'\n          } on RRDocument allowed.`,\n        );\n      }\n    }\n\n    const child = appendChild(this, newChild);\n    child.parentElement = null;\n    return child;\n  }\n\n  public insertBefore(newChild: IRRNode, refChild: IRRNode | null): IRRNode {\n    const nodeType = newChild.RRNodeType;\n    if (\n      nodeType === RRNodeType.Element ||\n      nodeType === RRNodeType.DocumentType\n    ) {\n      if (this.childNodes.some((s) => s.RRNodeType === nodeType)) {\n        throw new Error(\n          `RRDomException: Failed to execute 'insertBefore' on 'RRNode': Only one ${\n            nodeType === RRNodeType.Element ? 'RRElement' : 'RRDoctype'\n          } on RRDocument allowed.`,\n        );\n      }\n    }\n\n    const child = insertBefore(this, newChild, refChild);\n    child.parentElement = null;\n    return child;\n  }\n\n  public removeChild(node: IRRNode): IRRNode {\n    return removeChild(this, node);\n  }\n\n  public open() {\n    this.firstChild = null;\n    this.lastChild = null;\n  }\n\n  public close() {\n    //\n  }\n\n  /**\n   * Adhoc implementation for setting xhtml namespace in rebuilt.ts (rrweb-snapshot).\n   * There are two lines used this function:\n   * 1. doc.write('\\<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\"\\>')\n   * 2. doc.write('\\<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\"\\>')\n   */\n  public write(content: string) {\n    let publicId;\n    if (\n      content ===\n      '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">'\n    )\n      publicId = '-//W3C//DTD XHTML 1.0 Transitional//EN';\n    else if (\n      content ===\n      '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">'\n    )\n      publicId = '-//W3C//DTD HTML 4.0 Transitional//EN';\n    if (publicId) {\n      const doctype = this.createDocumentType('html', publicId, '');\n      this.open();\n      this.appendChild(doctype);\n    }\n  }\n\n  createDocument(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _namespace: string | null,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _qualifiedName: string | null,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _doctype?: DocumentType | null,\n  ): IRRDocument {\n    return new BaseRRDocument();\n  }\n\n  createDocumentType(\n    qualifiedName: string,\n    publicId: string,\n    systemId: string,\n  ): IRRDocumentType {\n    const doctype = new BaseRRDocumentType(qualifiedName, publicId, systemId);\n    doctype.ownerDocument = this;\n    return doctype;\n  }\n\n  createElement(tagName: string): IRRElement {\n    const element = new BaseRRElement(tagName);\n    element.ownerDocument = this;\n    return element;\n  }\n\n  createElementNS(_namespaceURI: string, qualifiedName: string): IRRElement {\n    return this.createElement(qualifiedName);\n  }\n\n  createTextNode(data: string): IRRText {\n    const text = new BaseRRText(data);\n    text.ownerDocument = this;\n    return text;\n  }\n\n  createComment(data: string): IRRComment {\n    const comment = new BaseRRComment(data);\n    comment.ownerDocument = this;\n    return comment;\n  }\n\n  createCDATASection(data: string): IRRCDATASection {\n    const CDATASection = new BaseRRCDATASection(data);\n    CDATASection.ownerDocument = this;\n    return CDATASection;\n  }\n\n  toString() {\n    return 'RRDocument';\n  }\n}\n\nexport class BaseRRDocumentType extends BaseRRNode implements IRRDocumentType {\n  public readonly nodeType: number = NodeType.DOCUMENT_TYPE_NODE;\n  public readonly RRNodeType = RRNodeType.DocumentType;\n  declare readonly nodeName: string;\n  public readonly name: string;\n  public readonly publicId: string;\n  public readonly systemId: string;\n  public textContent: string | null = null;\n\n  constructor(qualifiedName: string, publicId: string, systemId: string) {\n    super();\n    this.name = qualifiedName;\n    this.publicId = publicId;\n    this.systemId = systemId;\n    this.nodeName = qualifiedName;\n  }\n\n  toString() {\n    return 'RRDocumentType';\n  }\n}\n\nexport class BaseRRElement extends BaseRRNode implements IRRElement {\n  public readonly nodeType: number = NodeType.ELEMENT_NODE;\n  public readonly RRNodeType = RRNodeType.Element;\n  declare readonly nodeName: string;\n  public tagName: string;\n  public attributes: Record<string, string> = {};\n  public shadowRoot: IRRElement | null = null;\n  public scrollLeft?: number;\n  public scrollTop?: number;\n\n  constructor(tagName: string) {\n    super();\n    this.tagName = tagName.toUpperCase();\n    this.nodeName = tagName.toUpperCase();\n  }\n\n  public get textContent(): string {\n    let result = '';\n    this.childNodes.forEach((node) => (result += node.textContent));\n    return result;\n  }\n\n  public set textContent(textContent: string) {\n    this.firstChild = null;\n    this.lastChild = null;\n    this.appendChild(this.ownerDocument.createTextNode(textContent));\n  }\n\n  public get classList(): ClassList {\n    return new ClassList(\n      this.attributes.class as string | undefined,\n      (newClassName) => {\n        this.attributes.class = newClassName;\n      },\n    );\n  }\n\n  public get id() {\n    return this.attributes.id || '';\n  }\n\n  public get className() {\n    return this.attributes.class || '';\n  }\n\n  public get style() {\n    const style = (\n      this.attributes.style ? parseCSSText(this.attributes.style) : {}\n    ) as CSSStyleDeclaration;\n    const hyphenateRE = /\\B([A-Z])/g;\n    style.setProperty = (\n      name: string,\n      value: string | null,\n      priority?: string | null,\n    ) => {\n      if (hyphenateRE.test(name)) return;\n      const normalizedName = camelize(name);\n      if (!value) delete style[normalizedName];\n      else style[normalizedName] = value;\n      if (priority === 'important') style[normalizedName] += ' !important';\n      this.attributes.style = toCSSText(style);\n    };\n    style.removeProperty = (name: string) => {\n      if (hyphenateRE.test(name)) return '';\n      const normalizedName = camelize(name);\n      const value = style[normalizedName] || '';\n      delete style[normalizedName];\n      this.attributes.style = toCSSText(style);\n      return value;\n    };\n    return style;\n  }\n\n  public getAttribute(name: string): string | null {\n    if (this.attributes[name] === undefined) return null;\n    return this.attributes[name];\n  }\n\n  public setAttribute(name: string, attribute: string) {\n    this.attributes[name] = attribute;\n  }\n\n  public setAttributeNS(\n    _namespace: string | null,\n    qualifiedName: string,\n    value: string,\n  ): void {\n    this.setAttribute(qualifiedName, value);\n  }\n\n  public removeAttribute(name: string) {\n    delete this.attributes[name];\n  }\n\n  public appendChild(newChild: IRRNode): IRRNode {\n    return appendChild(this, newChild);\n  }\n\n  public insertBefore(newChild: IRRNode, refChild: IRRNode | null): IRRNode {\n    return insertBefore(this, newChild, refChild);\n  }\n\n  public removeChild(node: IRRNode): IRRNode {\n    return removeChild(this, node);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public attachShadow(_init: ShadowRootInit): IRRElement {\n    const shadowRoot = this.ownerDocument.createElement('SHADOWROOT');\n    this.shadowRoot = shadowRoot;\n    return shadowRoot;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public dispatchEvent(_event: Event) {\n    return true;\n  }\n\n  toString() {\n    let attributeString = '';\n    for (const attribute in this.attributes) {\n      attributeString += `${attribute}=\"${this.attributes[attribute]}\" `;\n    }\n    return `${this.tagName} ${attributeString}`;\n  }\n}\n\nexport class BaseRRMediaElement extends BaseRRElement {\n  public currentTime?: number;\n  public volume?: number;\n  public paused?: boolean;\n  public muted?: boolean;\n  public playbackRate?: number;\n  public loop?: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attachShadow(_init: ShadowRootInit): IRRElement {\n    throw new Error(\n      `RRDomException: Failed to execute 'attachShadow' on 'RRElement': This RRElement does not support attachShadow`,\n    );\n  }\n  public play() {\n    this.paused = false;\n  }\n  public pause() {\n    this.paused = true;\n  }\n}\n\nexport class BaseRRDialogElement extends BaseRRElement {\n  public readonly tagName = 'DIALOG' as const;\n  public readonly nodeName = 'DIALOG' as const;\n\n  get isModal() {\n    return this.getAttribute('rr_open_mode') === 'modal';\n  }\n  get open() {\n    return this.getAttribute('open') !== null;\n  }\n  public close() {\n    this.removeAttribute('open');\n    this.removeAttribute('rr_open_mode');\n  }\n  public show() {\n    this.setAttribute('open', '');\n    this.setAttribute('rr_open_mode', 'non-modal');\n  }\n  public showModal() {\n    this.setAttribute('open', '');\n    this.setAttribute('rr_open_mode', 'modal');\n  }\n}\n\nexport class BaseRRText extends BaseRRNode implements IRRText {\n  public readonly nodeType: number = NodeType.TEXT_NODE;\n  public readonly nodeName = '#text' as const;\n  public readonly RRNodeType = RRNodeType.Text;\n  public data: string;\n\n  constructor(data: string) {\n    super();\n    this.data = data;\n  }\n\n  public get textContent(): string {\n    return this.data;\n  }\n\n  public set textContent(textContent: string) {\n    this.data = textContent;\n  }\n\n  toString() {\n    return `RRText text=${JSON.stringify(this.data)}`;\n  }\n}\n\nexport class BaseRRComment extends BaseRRNode implements IRRComment {\n  public readonly nodeType: number = NodeType.COMMENT_NODE;\n  public readonly nodeName = '#comment' as const;\n  public readonly RRNodeType = RRNodeType.Comment;\n  public data: string;\n\n  constructor(data: string) {\n    super();\n    this.data = data;\n  }\n\n  public get textContent(): string {\n    return this.data;\n  }\n\n  public set textContent(textContent: string) {\n    this.data = textContent;\n  }\n\n  toString() {\n    return `RRComment text=${JSON.stringify(this.data)}`;\n  }\n}\n\nexport class BaseRRCDATASection extends BaseRRNode implements IRRCDATASection {\n  public readonly nodeName = '#cdata-section' as const;\n  public readonly nodeType: number = NodeType.CDATA_SECTION_NODE;\n  public readonly RRNodeType = RRNodeType.CDATA;\n  public data: string;\n\n  constructor(data: string) {\n    super();\n    this.data = data;\n  }\n\n  public get textContent(): string {\n    return this.data;\n  }\n\n  public set textContent(textContent: string) {\n    this.data = textContent;\n  }\n\n  toString() {\n    return `RRCDATASection data=${JSON.stringify(this.data)}`;\n  }\n}\n\nexport class ClassList {\n  private onChange: ((newClassText: string) => void) | undefined;\n  classes: string[] = [];\n\n  constructor(\n    classText?: string,\n    onChange?: ((newClassText: string) => void) | undefined,\n  ) {\n    if (classText) {\n      const classes = classText.trim().split(/\\s+/);\n      this.classes.push(...classes);\n    }\n    this.onChange = onChange;\n  }\n\n  add = (...classNames: string[]) => {\n    for (const item of classNames) {\n      const className = String(item);\n      if (this.classes.indexOf(className) >= 0) continue;\n      this.classes.push(className);\n    }\n    this.onChange && this.onChange(this.classes.join(' '));\n  };\n\n  remove = (...classNames: string[]) => {\n    this.classes = this.classes.filter(\n      (item) => classNames.indexOf(item) === -1,\n    );\n    this.onChange && this.onChange(this.classes.join(' '));\n  };\n}\n\nexport type CSSStyleDeclaration = Record<string, string> & {\n  setProperty: (\n    name: string,\n    value: string | null,\n    priority?: string | null,\n  ) => void;\n  removeProperty: (name: string) => string;\n};\n\nfunction appendChild(parent: IRRNode, newChild: IRRNode) {\n  if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n\n  if (parent.lastChild) {\n    parent.lastChild.nextSibling = newChild;\n    newChild.previousSibling = parent.lastChild;\n  } else {\n    parent.firstChild = newChild;\n    newChild.previousSibling = null;\n  }\n  parent.lastChild = newChild;\n  newChild.nextSibling = null;\n  newChild.parentNode = parent;\n  newChild.parentElement = parent;\n  newChild.ownerDocument = parent.ownerDocument;\n  return newChild;\n}\n\nfunction insertBefore(\n  parent: IRRNode,\n  newChild: IRRNode,\n  refChild: IRRNode | null,\n) {\n  if (!refChild) return appendChild(parent, newChild);\n\n  if (refChild.parentNode !== parent)\n    throw new Error(\n      \"Failed to execute 'insertBefore' on 'RRNode': The RRNode before which the new node is to be inserted is not a child of this RRNode.\",\n    );\n\n  if (newChild === refChild) return newChild;\n  if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n\n  newChild.previousSibling = refChild.previousSibling;\n  refChild.previousSibling = newChild;\n  newChild.nextSibling = refChild;\n\n  if (newChild.previousSibling) newChild.previousSibling.nextSibling = newChild;\n  else parent.firstChild = newChild;\n\n  newChild.parentElement = parent;\n  newChild.parentNode = parent;\n  newChild.ownerDocument = parent.ownerDocument;\n  return newChild;\n}\n\nfunction removeChild(parent: IRRNode, child: IRRNode) {\n  if (child.parentNode !== parent)\n    throw new Error(\n      \"Failed to execute 'removeChild' on 'RRNode': The RRNode to be removed is not a child of this RRNode.\",\n    );\n  if (child.previousSibling)\n    child.previousSibling.nextSibling = child.nextSibling;\n  else parent.firstChild = child.nextSibling;\n  if (child.nextSibling)\n    child.nextSibling.previousSibling = child.previousSibling;\n  else parent.lastChild = child.previousSibling;\n  child.previousSibling = null;\n  child.nextSibling = null;\n  child.parentElement = null;\n  child.parentNode = null;\n  return child;\n}\n\n// Enumerate nodeType value of standard HTML Node.\nexport enum NodeType {\n  PLACEHOLDER, // This isn't a node type. Enum type value starts from zero but NodeType value starts from 1.\n  ELEMENT_NODE,\n  ATTRIBUTE_NODE,\n  TEXT_NODE,\n  CDATA_SECTION_NODE,\n  ENTITY_REFERENCE_NODE,\n  ENTITY_NODE,\n  PROCESSING_INSTRUCTION_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_TYPE_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n}\n", "import {\n  NodeType as RRNodeType,\n  Mirror as NodeMirror,\n  type elementNode,\n} from 'rrweb-snapshot';\nimport type {\n  canvasMutationData,\n  canvasEventWithTime,\n  inputData,\n  scrollData,\n  styleDeclarationData,\n  styleSheetRuleData,\n} from '@rrweb/types';\nimport type {\n  IRRCDATASection,\n  IRRComment,\n  IRRDocumentType,\n  IRRElement,\n  IRRNode,\n  IRRText,\n} from './document';\nimport type {\n  RRCanvasElement,\n  RRDialogElement,\n  RRElement,\n  RRIFrameElement,\n  RRMediaElement,\n  RRStyleElement,\n  RRDocument,\n  Mirror,\n} from '.';\n\nconst NAMESPACES: Record<string, string> = {\n  svg: 'http://www.w3.org/2000/svg',\n  'xlink:href': 'http://www.w3.org/1999/xlink',\n  xmlns: 'http://www.w3.org/2000/xmlns/',\n};\n\n// camel case svg element tag names\nconst SVGTagMap: Record<string, string> = {\n  altglyph: 'altGlyph',\n  altglyphdef: 'altGlyphDef',\n  altglyphitem: 'altGlyphItem',\n  animatecolor: 'animateColor',\n  animatemotion: 'animateMotion',\n  animatetransform: 'animateTransform',\n  clippath: 'clipPath',\n  feblend: 'feBlend',\n  fecolormatrix: 'feColorMatrix',\n  fecomponenttransfer: 'feComponentTransfer',\n  fecomposite: 'feComposite',\n  feconvolvematrix: 'feConvolveMatrix',\n  fediffuselighting: 'feDiffuseLighting',\n  fedisplacementmap: 'feDisplacementMap',\n  fedistantlight: 'feDistantLight',\n  fedropshadow: 'feDropShadow',\n  feflood: 'feFlood',\n  fefunca: 'feFuncA',\n  fefuncb: 'feFuncB',\n  fefuncg: 'feFuncG',\n  fefuncr: 'feFuncR',\n  fegaussianblur: 'feGaussianBlur',\n  feimage: 'feImage',\n  femerge: 'feMerge',\n  femergenode: 'feMergeNode',\n  femorphology: 'feMorphology',\n  feoffset: 'feOffset',\n  fepointlight: 'fePointLight',\n  fespecularlighting: 'feSpecularLighting',\n  fespotlight: 'feSpotLight',\n  fetile: 'feTile',\n  feturbulence: 'feTurbulence',\n  foreignobject: 'foreignObject',\n  glyphref: 'glyphRef',\n  lineargradient: 'linearGradient',\n  radialgradient: 'radialGradient',\n};\n\nexport type ReplayerHandler = {\n  mirror: NodeMirror;\n  applyCanvas: (\n    canvasEvent: canvasEventWithTime,\n    canvasMutationData: canvasMutationData,\n    target: HTMLCanvasElement,\n  ) => void;\n  applyInput: (data: inputData) => void;\n  applyScroll: (data: scrollData, isSync: boolean) => void;\n  applyStyleSheetMutation: (\n    data: styleDeclarationData | styleSheetRuleData,\n    styleSheet: CSSStyleSheet,\n  ) => void;\n  // Similar to the `afterAppend` callback in the `rrweb-snapshot` package. It's a postorder traversal of the newly appended nodes.\n  afterAppend?(node: Node, id: number): void;\n};\n\n// A set contains newly appended nodes. It's used to make sure the afterAppend callback can iterate newly appended nodes in the same traversal order as that in the `rrweb-snapshot` package.\nlet createdNodeSet: WeakSet<Node> | null = null;\n\n/**\n * Make the old tree to have the same structure and properties as the new tree with the diff algorithm.\n * @param oldTree - The old tree to be modified.\n * @param newTree - The new tree which the old tree will be modified to.\n * @param replayer - A slimmed replayer instance including the mirror of the old tree.\n * @param rrnodeMirror - The mirror of the new tree.\n */\nexport function diff(\n  oldTree: Node,\n  newTree: IRRNode,\n  replayer: ReplayerHandler,\n  rrnodeMirror: Mirror = (newTree as RRDocument).mirror ||\n    (newTree.ownerDocument as RRDocument).mirror,\n) {\n  oldTree = diffBeforeUpdatingChildren(\n    oldTree,\n    newTree,\n    replayer,\n    rrnodeMirror,\n  );\n\n  diffChildren(oldTree, newTree, replayer, rrnodeMirror);\n\n  diffAfterUpdatingChildren(oldTree, newTree, replayer);\n}\n\n/**\n * Do some preparation work before updating the children of the old tree.\n */\nfunction diffBeforeUpdatingChildren(\n  oldTree: Node,\n  newTree: IRRNode,\n  replayer: ReplayerHandler,\n  rrnodeMirror: Mirror,\n) {\n  if (replayer.afterAppend && !createdNodeSet) {\n    createdNodeSet = new WeakSet();\n    setTimeout(() => {\n      createdNodeSet = null;\n    }, 0);\n  }\n  // If the Mirror data has some flaws, the diff function may throw errors. We check the node consistency here to make it robust.\n  if (!sameNodeType(oldTree, newTree)) {\n    const calibratedOldTree = createOrGetNode(\n      newTree,\n      replayer.mirror,\n      rrnodeMirror,\n    );\n    oldTree.parentNode?.replaceChild(calibratedOldTree, oldTree);\n    oldTree = calibratedOldTree;\n  }\n  switch (newTree.RRNodeType) {\n    case RRNodeType.Document: {\n      /**\n       * Special cases for updating the document node:\n       * Case 1: If the oldTree is the content document of an iframe element and its content (HTML, HEAD, and BODY) is automatically mounted by browsers, we need to remove them to avoid unexpected behaviors. e.g. Selector matches may be case insensitive.\n       * Case 2: The newTree has a different serialized Id (a different document object), we need to reopen it and update the nodeMirror.\n       */\n      if (!nodeMatching(oldTree, newTree, replayer.mirror, rrnodeMirror)) {\n        const newMeta = rrnodeMirror.getMeta(newTree);\n        if (newMeta) {\n          replayer.mirror.removeNodeFromMap(oldTree);\n          (oldTree as Document).close();\n          (oldTree as Document).open();\n          replayer.mirror.add(oldTree, newMeta);\n          createdNodeSet?.add(oldTree);\n        }\n      }\n      break;\n    }\n    case RRNodeType.Element: {\n      const oldElement = oldTree as HTMLElement;\n      const newRRElement = newTree as IRRElement;\n      switch (newRRElement.tagName) {\n        case 'IFRAME': {\n          const oldContentDocument = (oldTree as HTMLIFrameElement)\n            .contentDocument;\n          // If the iframe is cross-origin, the contentDocument will be null.\n          if (!oldContentDocument) break;\n          // IFrame element doesn't have child nodes, so here we update its content document separately.\n          diff(\n            oldContentDocument,\n            (newTree as RRIFrameElement).contentDocument,\n            replayer,\n            rrnodeMirror,\n          );\n          break;\n        }\n      }\n      if (newRRElement.shadowRoot) {\n        if (!oldElement.shadowRoot) oldElement.attachShadow({ mode: 'open' });\n        diffChildren(\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          oldElement.shadowRoot!,\n          newRRElement.shadowRoot,\n          replayer,\n          rrnodeMirror,\n        );\n      }\n      /**\n       * Attributes and styles of the old element need to be updated before updating its children because of an edge case:\n       * `applyScroll` may fail in `diffAfterUpdatingChildren` when the height of a node when `applyScroll` is called may be incorrect if\n       * 1. its parent node contains styles that affects the targeted node's height\n       * 2. the CSS selector is targeting an attribute of the parent node\n       * by running `diffProps` on the parent node before `diffChildren` is called,\n       * we can ensure that the correct attributes (and therefore styles) have applied to parent nodes\n       */\n      diffProps(oldElement, newRRElement, rrnodeMirror);\n      break;\n    }\n  }\n  return oldTree;\n}\n\n/**\n * Finish the diff work after updating the children of the old tree.\n */\nfunction diffAfterUpdatingChildren(\n  oldTree: Node,\n  newTree: IRRNode,\n  replayer: ReplayerHandler,\n) {\n  switch (newTree.RRNodeType) {\n    case RRNodeType.Document: {\n      const scrollData = (newTree as RRDocument).scrollData;\n      scrollData && replayer.applyScroll(scrollData, true);\n      break;\n    }\n    case RRNodeType.Element: {\n      const oldElement = oldTree as HTMLElement;\n      const newRRElement = newTree as RRElement;\n      newRRElement.scrollData &&\n        replayer.applyScroll(newRRElement.scrollData, true);\n      /**\n       * Input data need to get applied after all children of this node are updated.\n       * Otherwise when we set a value for a select element whose options are empty, the value won't actually update.\n       */\n      newRRElement.inputData && replayer.applyInput(newRRElement.inputData);\n      switch (newRRElement.tagName) {\n        case 'AUDIO':\n        case 'VIDEO': {\n          const oldMediaElement = oldTree as HTMLMediaElement;\n          const newMediaRRElement = newRRElement as unknown as RRMediaElement;\n          if (newMediaRRElement.paused !== undefined)\n            newMediaRRElement.paused\n              ? void oldMediaElement.pause()\n              : void oldMediaElement.play();\n          if (newMediaRRElement.muted !== undefined)\n            oldMediaElement.muted = newMediaRRElement.muted;\n          if (newMediaRRElement.volume !== undefined)\n            oldMediaElement.volume = newMediaRRElement.volume;\n          if (newMediaRRElement.currentTime !== undefined)\n            oldMediaElement.currentTime = newMediaRRElement.currentTime;\n          if (newMediaRRElement.playbackRate !== undefined)\n            oldMediaElement.playbackRate = newMediaRRElement.playbackRate;\n          if (newMediaRRElement.loop !== undefined)\n            oldMediaElement.loop = newMediaRRElement.loop;\n          break;\n        }\n        case 'CANVAS': {\n          const rrCanvasElement = newTree as RRCanvasElement;\n          // This canvas element is created with initial data in an iframe element. https://github.com/rrweb-io/rrweb/pull/944\n          if (rrCanvasElement.rr_dataURL !== null) {\n            const image = document.createElement('img');\n            image.onload = () => {\n              const ctx = (oldElement as HTMLCanvasElement).getContext('2d');\n              if (ctx) {\n                ctx.drawImage(image, 0, 0, image.width, image.height);\n              }\n            };\n            image.src = rrCanvasElement.rr_dataURL;\n          }\n          rrCanvasElement.canvasMutations.forEach((canvasMutation) =>\n            replayer.applyCanvas(\n              canvasMutation.event,\n              canvasMutation.mutation,\n              oldTree as HTMLCanvasElement,\n            ),\n          );\n          break;\n        }\n        // Props of style elements have to be updated after all children are updated. Otherwise the props can be overwritten by textContent.\n        case 'STYLE': {\n          const styleSheet = (oldElement as HTMLStyleElement).sheet;\n          styleSheet &&\n            (newTree as RRStyleElement).rules.forEach((data) =>\n              replayer.applyStyleSheetMutation(data, styleSheet),\n            );\n          break;\n        }\n        case 'DIALOG': {\n          const dialog = oldElement as HTMLDialogElement;\n          const rrDialog = newRRElement as unknown as RRDialogElement;\n          const wasOpen = dialog.open;\n          const wasModal = dialog.matches('dialog:modal');\n          const shouldBeOpen = rrDialog.open;\n          const shouldBeModal = rrDialog.isModal;\n\n          const modalChanged = wasModal !== shouldBeModal;\n          const openChanged = wasOpen !== shouldBeOpen;\n\n          if (modalChanged || (wasOpen && openChanged)) dialog.close();\n          if (shouldBeOpen && (openChanged || modalChanged)) {\n            try {\n              if (shouldBeModal) dialog.showModal();\n              else dialog.show();\n            } catch (e) {\n              console.warn(e);\n            }\n          }\n\n          break;\n        }\n      }\n      break;\n    }\n    case RRNodeType.Text:\n    case RRNodeType.Comment:\n    case RRNodeType.CDATA: {\n      if (\n        oldTree.textContent !==\n        (newTree as IRRText | IRRComment | IRRCDATASection).data\n      )\n        oldTree.textContent = (\n          newTree as IRRText | IRRComment | IRRCDATASection\n        ).data;\n      break;\n    }\n  }\n  if (createdNodeSet?.has(oldTree)) {\n    createdNodeSet.delete(oldTree);\n    replayer.afterAppend?.(oldTree, replayer.mirror.getId(oldTree));\n  }\n}\n\nfunction diffProps(\n  oldTree: HTMLElement,\n  newTree: IRRElement,\n  rrnodeMirror: Mirror,\n) {\n  const oldAttributes = oldTree.attributes;\n  const newAttributes = newTree.attributes;\n\n  for (const name in newAttributes) {\n    const newValue = newAttributes[name];\n    const sn = rrnodeMirror.getMeta(newTree) as elementNode | null;\n    if (sn?.isSVG && NAMESPACES[name])\n      oldTree.setAttributeNS(NAMESPACES[name], name, newValue);\n    else if (newTree.tagName === 'CANVAS' && name === 'rr_dataURL') {\n      const image = document.createElement('img');\n      image.src = newValue;\n      image.onload = () => {\n        const ctx = (oldTree as HTMLCanvasElement).getContext('2d');\n        if (ctx) {\n          ctx.drawImage(image, 0, 0, image.width, image.height);\n        }\n      };\n    } else if (newTree.tagName === 'IFRAME' && name === 'srcdoc') continue;\n    else oldTree.setAttribute(name, newValue);\n  }\n\n  for (const { name } of Array.from(oldAttributes))\n    if (!(name in newAttributes)) oldTree.removeAttribute(name);\n  newTree.scrollLeft && (oldTree.scrollLeft = newTree.scrollLeft);\n  newTree.scrollTop && (oldTree.scrollTop = newTree.scrollTop);\n}\n\nfunction diffChildren(\n  oldTree: Node,\n  newTree: IRRNode,\n  replayer: ReplayerHandler,\n  rrnodeMirror: Mirror,\n) {\n  const oldChildren: (Node | undefined)[] = Array.from(oldTree.childNodes);\n  const newChildren = newTree.childNodes;\n  if (oldChildren.length === 0 && newChildren.length === 0) return;\n  let oldStartIndex = 0,\n    oldEndIndex = oldChildren.length - 1,\n    newStartIndex = 0,\n    newEndIndex = newChildren.length - 1;\n  let oldStartNode = oldChildren[oldStartIndex],\n    oldEndNode = oldChildren[oldEndIndex],\n    newStartNode = newChildren[newStartIndex],\n    newEndNode = newChildren[newEndIndex];\n  let oldIdToIndex: Record<number, number> | undefined = undefined,\n    indexInOld: number | undefined = undefined;\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n    if (oldStartNode === undefined) {\n      oldStartNode = oldChildren[++oldStartIndex];\n    } else if (oldEndNode === undefined) {\n      oldEndNode = oldChildren[--oldEndIndex];\n    } else if (\n      // same first node?\n      nodeMatching(oldStartNode, newStartNode, replayer.mirror, rrnodeMirror)\n    ) {\n      oldStartNode = oldChildren[++oldStartIndex];\n      newStartNode = newChildren[++newStartIndex];\n    } else if (\n      // same last node?\n      nodeMatching(oldEndNode, newEndNode, replayer.mirror, rrnodeMirror)\n    ) {\n      oldEndNode = oldChildren[--oldEndIndex];\n      newEndNode = newChildren[--newEndIndex];\n    } else if (\n      // is the first old node the same as the last new node?\n      nodeMatching(oldStartNode, newEndNode, replayer.mirror, rrnodeMirror)\n    ) {\n      try {\n        oldTree.insertBefore(oldStartNode, oldEndNode.nextSibling);\n      } catch (e) {\n        console.warn(e);\n      }\n      oldStartNode = oldChildren[++oldStartIndex];\n      newEndNode = newChildren[--newEndIndex];\n    } else if (\n      // is the last old node the same as the first new node?\n      nodeMatching(oldEndNode, newStartNode, replayer.mirror, rrnodeMirror)\n    ) {\n      try {\n        oldTree.insertBefore(oldEndNode, oldStartNode);\n      } catch (e) {\n        console.warn(e);\n      }\n      oldEndNode = oldChildren[--oldEndIndex];\n      newStartNode = newChildren[++newStartIndex];\n    } else {\n      // none of the elements matched\n\n      if (!oldIdToIndex) {\n        oldIdToIndex = {};\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n          const oldChild = oldChildren[i];\n          if (oldChild && replayer.mirror.hasNode(oldChild))\n            oldIdToIndex[replayer.mirror.getId(oldChild)] = i;\n        }\n      }\n      indexInOld = oldIdToIndex[rrnodeMirror.getId(newStartNode)];\n      const nodeToMove = oldChildren[indexInOld];\n      if (\n        indexInOld !== undefined &&\n        nodeToMove &&\n        nodeMatching(nodeToMove, newStartNode, replayer.mirror, rrnodeMirror)\n      ) {\n        try {\n          oldTree.insertBefore(nodeToMove, oldStartNode);\n        } catch (e) {\n          console.warn(e);\n        }\n        oldChildren[indexInOld] = undefined;\n      } else {\n        const newNode = createOrGetNode(\n          newStartNode,\n          replayer.mirror,\n          rrnodeMirror,\n        );\n\n        if (\n          oldTree.nodeName === '#document' &&\n          oldStartNode &&\n          /**\n           * Special case 1: one document isn't allowed to have two doctype nodes at the same time, so we need to remove the old one first before inserting the new one.\n           * How this case happens: A parent document in the old tree already has a doctype node with an id e.g. #1. A new full snapshot rebuilds the replayer with a new doctype node with another id #2. According to the algorithm, the new doctype node will be inserted before the old one, which is not allowed by the Document standard.\n           */\n          ((newNode.nodeType === newNode.DOCUMENT_TYPE_NODE &&\n            oldStartNode.nodeType === oldStartNode.DOCUMENT_TYPE_NODE) ||\n            /**\n             * Special case 2: one document isn't allowed to have two HTMLElements at the same time, so we need to remove the old one first before inserting the new one.\n             * How this case happens: A mounted iframe element has an automatically created HTML element. We should delete it before inserting a serialized one. Otherwise, an error 'Only one element on document allowed' will be thrown.\n             */\n            (newNode.nodeType === newNode.ELEMENT_NODE &&\n              oldStartNode.nodeType === oldStartNode.ELEMENT_NODE))\n        ) {\n          oldTree.removeChild(oldStartNode);\n          replayer.mirror.removeNodeFromMap(oldStartNode);\n          oldStartNode = oldChildren[++oldStartIndex];\n        }\n\n        try {\n          oldTree.insertBefore(newNode, oldStartNode || null);\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n      newStartNode = newChildren[++newStartIndex];\n    }\n  }\n  if (oldStartIndex > oldEndIndex) {\n    const referenceRRNode = newChildren[newEndIndex + 1];\n    let referenceNode: Node | null = null;\n    if (referenceRRNode)\n      referenceNode = replayer.mirror.getNode(\n        rrnodeMirror.getId(referenceRRNode),\n      );\n    for (; newStartIndex <= newEndIndex; ++newStartIndex) {\n      const newNode = createOrGetNode(\n        newChildren[newStartIndex],\n        replayer.mirror,\n        rrnodeMirror,\n      );\n      try {\n        oldTree.insertBefore(newNode, referenceNode);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  } else if (newStartIndex > newEndIndex) {\n    for (; oldStartIndex <= oldEndIndex; oldStartIndex++) {\n      const node = oldChildren[oldStartIndex];\n      if (!node || node.parentNode !== oldTree) continue;\n      try {\n        oldTree.removeChild(node);\n        replayer.mirror.removeNodeFromMap(node);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  }\n\n  // Recursively diff the children of the old tree and the new tree with their props and deeper structures.\n  let oldChild = oldTree.firstChild;\n  let newChild = newTree.firstChild;\n  while (oldChild !== null && newChild !== null) {\n    diff(oldChild, newChild, replayer, rrnodeMirror);\n    oldChild = oldChild.nextSibling;\n    newChild = newChild.nextSibling;\n  }\n}\n\nexport function createOrGetNode(\n  rrNode: IRRNode,\n  domMirror: NodeMirror,\n  rrnodeMirror: Mirror,\n): Node {\n  const nodeId = rrnodeMirror.getId(rrNode);\n  const sn = rrnodeMirror.getMeta(rrNode);\n  let node: Node | null = null;\n  // negative ids shouldn't be compared accross mirrors\n  if (nodeId > -1) node = domMirror.getNode(nodeId);\n  if (node !== null && sameNodeType(node, rrNode)) return node;\n  switch (rrNode.RRNodeType) {\n    case RRNodeType.Document:\n      node = new Document();\n      break;\n    case RRNodeType.DocumentType:\n      node = document.implementation.createDocumentType(\n        (rrNode as IRRDocumentType).name,\n        (rrNode as IRRDocumentType).publicId,\n        (rrNode as IRRDocumentType).systemId,\n      );\n      break;\n    case RRNodeType.Element: {\n      let tagName = (rrNode as IRRElement).tagName.toLowerCase();\n      tagName = SVGTagMap[tagName] || tagName;\n      if (sn && 'isSVG' in sn && sn?.isSVG) {\n        node = document.createElementNS(NAMESPACES['svg'], tagName);\n      } else node = document.createElement((rrNode as IRRElement).tagName);\n      break;\n    }\n    case RRNodeType.Text:\n      node = document.createTextNode((rrNode as IRRText).data);\n      break;\n    case RRNodeType.Comment:\n      node = document.createComment((rrNode as IRRComment).data);\n      break;\n    case RRNodeType.CDATA:\n      node = document.createCDATASection((rrNode as IRRCDATASection).data);\n      break;\n  }\n\n  if (sn) domMirror.add(node, { ...sn });\n  try {\n    createdNodeSet?.add(node);\n  } catch (e) {\n    // Just for safety concern.\n  }\n  return node;\n}\n\n/**\n * To check whether two nodes are the same type of node. If they are both Elements, check wether their tagNames are same or not.\n */\nexport function sameNodeType(node1: Node, node2: IRRNode) {\n  if (node1.nodeType !== node2.nodeType) return false;\n  return (\n    node1.nodeType !== node1.ELEMENT_NODE ||\n    (node1 as HTMLElement).tagName.toUpperCase() ===\n      (node2 as IRRElement).tagName\n  );\n}\n\n/**\n * To check whether two nodes are matching. If so, they are supposed to have the same serialized Id and node type. If they are both Elements, their tagNames should be the same as well. Otherwise, they are not matching.\n */\nexport function nodeMatching(\n  node1: Node,\n  node2: IRRNode,\n  domMirror: NodeMirror,\n  rrdomMirror: Mirror,\n): boolean {\n  const node1Id = domMirror.getId(node1);\n  const node2Id = rrdomMirror.getId(node2);\n  // rrdom contains elements with negative ids, we don't want to accidentally match those to a mirror mismatch (-1) id.\n  // Negative oldStartId happen when nodes are not in the mirror, but are in the DOM.\n  // eg.iframes come with a document, html, head and body nodes.\n  // thats why below we always check if an id is negative.\n  if (node1Id === -1 || node1Id !== node2Id) return false;\n  return sameNodeType(node1, node2);\n}\n", "import {\n  NodeType as RRNodeType,\n  createMirror as createNodeMirror,\n} from 'rrweb-snapshot';\nimport type {\n  Mirror as NodeMirror,\n  IMirror,\n  serializedNodeWithId,\n} from 'rrweb-snapshot';\nimport type {\n  canvasMutationData,\n  canvasEventWithTime,\n  inputData,\n  scrollData,\n  styleSheetRuleData,\n  styleDeclarationData,\n} from '@rrweb/types';\nimport {\n  BaseRRNode as RRNode,\n  BaseRRCDATASection,\n  BaseRRComment,\n  BaseRRDocument,\n  BaseRRDocumentType,\n  BaseRRElement,\n  BaseRRMediaElement,\n  BaseRRText,\n  type IRRDocument,\n  type IRRElement,\n  type IRRNode,\n  NodeType,\n  type IRRDocumentType,\n  type IRRText,\n  type IRRComment,\n  BaseRRDialogElement,\n} from './document';\n\nexport class RRDocument extends BaseRRDocument {\n  private UNSERIALIZED_STARTING_ID = -2;\n  // In the rrweb replayer, there are some unserialized nodes like the element that stores the injected style rules.\n  // These unserialized nodes may interfere the execution of the diff algorithm.\n  // The id of serialized node is larger than 0. So this value less than 0 is used as id for these unserialized nodes.\n  private _unserializedId = this.UNSERIALIZED_STARTING_ID;\n\n  /**\n   * Every time the id is used, it will minus 1 automatically to avoid collisions.\n   */\n  public get unserializedId(): number {\n    return this._unserializedId--;\n  }\n\n  public mirror: Mirror = createMirror();\n\n  public scrollData: scrollData | null = null;\n\n  constructor(mirror?: Mirror) {\n    super();\n    if (mirror) {\n      this.mirror = mirror;\n    }\n  }\n\n  createDocument(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _namespace: string | null,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _qualifiedName: string | null,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _doctype?: DocumentType | null,\n  ) {\n    return new RRDocument();\n  }\n\n  createDocumentType(\n    qualifiedName: string,\n    publicId: string,\n    systemId: string,\n  ) {\n    const documentTypeNode = new RRDocumentType(\n      qualifiedName,\n      publicId,\n      systemId,\n    );\n    documentTypeNode.ownerDocument = this;\n    return documentTypeNode;\n  }\n\n  createElement<K extends keyof HTMLElementTagNameMap>(\n    tagName: K,\n  ): RRElementType<K>;\n  createElement(tagName: string): RRElement;\n  createElement(tagName: string) {\n    const upperTagName = tagName.toUpperCase();\n    let element;\n    switch (upperTagName) {\n      case 'AUDIO':\n      case 'VIDEO':\n        element = new RRMediaElement(upperTagName);\n        break;\n      case 'IFRAME':\n        element = new RRIFrameElement(upperTagName, this.mirror);\n        break;\n      case 'CANVAS':\n        element = new RRCanvasElement(upperTagName);\n        break;\n      case 'STYLE':\n        element = new RRStyleElement(upperTagName);\n        break;\n      case 'DIALOG':\n        element = new RRDialogElement(upperTagName);\n        break;\n      default:\n        element = new RRElement(upperTagName);\n        break;\n    }\n    element.ownerDocument = this;\n    return element;\n  }\n\n  createComment(data: string) {\n    const commentNode = new RRComment(data);\n    commentNode.ownerDocument = this;\n    return commentNode;\n  }\n\n  createCDATASection(data: string) {\n    const sectionNode = new RRCDATASection(data);\n    sectionNode.ownerDocument = this;\n    return sectionNode;\n  }\n\n  createTextNode(data: string) {\n    const textNode = new RRText(data);\n    textNode.ownerDocument = this;\n    return textNode;\n  }\n\n  destroyTree() {\n    this.firstChild = null;\n    this.lastChild = null;\n    this.mirror.reset();\n  }\n\n  open() {\n    super.open();\n    this._unserializedId = this.UNSERIALIZED_STARTING_ID;\n  }\n}\n\nexport const RRDocumentType = BaseRRDocumentType;\n\nexport class RRElement extends BaseRRElement {\n  inputData: inputData | null = null;\n  scrollData: scrollData | null = null;\n}\n\nexport class RRMediaElement extends BaseRRMediaElement {}\n\nexport class RRDialogElement extends BaseRRDialogElement {}\n\nexport class RRCanvasElement extends RRElement implements IRRElement {\n  public rr_dataURL: string | null = null;\n  public canvasMutations: {\n    event: canvasEventWithTime;\n    mutation: canvasMutationData;\n  }[] = [];\n  /**\n   * This is a dummy implementation to distinguish RRCanvasElement from real HTMLCanvasElement.\n   */\n  getContext(): RenderingContext | null {\n    return null;\n  }\n}\n\nexport class RRStyleElement extends RRElement {\n  public rules: (styleSheetRuleData | styleDeclarationData)[] = [];\n}\n\nexport class RRIFrameElement extends RRElement {\n  contentDocument: RRDocument = new RRDocument();\n  constructor(upperTagName: string, mirror: Mirror) {\n    super(upperTagName);\n    this.contentDocument.mirror = mirror;\n  }\n}\n\nexport const RRText = BaseRRText;\nexport type RRText = typeof RRText;\n\nexport const RRComment = BaseRRComment;\nexport type RRComment = typeof RRComment;\n\nexport const RRCDATASection = BaseRRCDATASection;\nexport type RRCDATASection = typeof RRCDATASection;\n\ninterface RRElementTagNameMap {\n  audio: RRMediaElement;\n  canvas: RRCanvasElement;\n  iframe: RRIFrameElement;\n  style: RRStyleElement;\n  video: RRMediaElement;\n}\n\ntype RRElementType<K extends keyof HTMLElementTagNameMap> =\n  K extends keyof RRElementTagNameMap ? RRElementTagNameMap[K] : RRElement;\n\nfunction getValidTagName(element: HTMLElement): string {\n  // https://github.com/rrweb-io/rrweb-snapshot/issues/56\n  if (element instanceof HTMLFormElement) {\n    return 'FORM';\n  }\n  return element.tagName.toUpperCase();\n}\n\n/**\n * Build a RRNode from a real Node.\n * @param node - the real Node\n * @param rrdom - the RRDocument\n * @param domMirror - the NodeMirror that records the real document tree\n * @returns the built RRNode\n */\nexport function buildFromNode(\n  node: Node,\n  rrdom: IRRDocument,\n  domMirror: NodeMirror,\n  parentRRNode?: IRRNode | null,\n): IRRNode | null {\n  let rrNode: IRRNode;\n\n  switch (node.nodeType) {\n    case NodeType.DOCUMENT_NODE:\n      if (parentRRNode && parentRRNode.nodeName === 'IFRAME')\n        rrNode = (parentRRNode as RRIFrameElement).contentDocument;\n      else {\n        rrNode = rrdom;\n        (rrNode as IRRDocument).compatMode = (node as Document).compatMode as\n          | 'BackCompat'\n          | 'CSS1Compat';\n      }\n      break;\n    case NodeType.DOCUMENT_TYPE_NODE: {\n      const documentType = node as DocumentType;\n      rrNode = rrdom.createDocumentType(\n        documentType.name,\n        documentType.publicId,\n        documentType.systemId,\n      );\n      break;\n    }\n    case NodeType.ELEMENT_NODE: {\n      const elementNode = node as HTMLElement;\n      const tagName = getValidTagName(elementNode);\n      rrNode = rrdom.createElement(tagName);\n      const rrElement = rrNode as IRRElement;\n      for (const { name, value } of Array.from(elementNode.attributes)) {\n        rrElement.attributes[name] = value;\n      }\n      elementNode.scrollLeft && (rrElement.scrollLeft = elementNode.scrollLeft);\n      elementNode.scrollTop && (rrElement.scrollTop = elementNode.scrollTop);\n      /**\n       * We don't have to record special values of input elements at the beginning.\n       * Because if these values are changed later, the mutation will be applied through the batched input events on its RRElement after the diff algorithm is executed.\n       */\n      break;\n    }\n    case NodeType.TEXT_NODE:\n      rrNode = rrdom.createTextNode((node as Text).textContent || '');\n      break;\n    case NodeType.CDATA_SECTION_NODE:\n      rrNode = rrdom.createCDATASection((node as CDATASection).data);\n      break;\n    case NodeType.COMMENT_NODE:\n      rrNode = rrdom.createComment((node as Comment).textContent || '');\n      break;\n    // if node is a shadow root\n    case NodeType.DOCUMENT_FRAGMENT_NODE:\n      rrNode = (parentRRNode as IRRElement).attachShadow({ mode: 'open' });\n      break;\n    default:\n      return null;\n  }\n\n  let sn: serializedNodeWithId | null = domMirror.getMeta(node);\n\n  if (rrdom instanceof RRDocument) {\n    if (!sn) {\n      sn = getDefaultSN(rrNode, rrdom.unserializedId);\n      domMirror.add(node, sn);\n    }\n    rrdom.mirror.add(rrNode, { ...sn });\n  }\n\n  return rrNode;\n}\n\n/**\n * Build a RRDocument from a real document tree.\n * @param dom - the real document tree\n * @param domMirror - the NodeMirror that records the real document tree\n * @param rrdom - the rrdom object to be constructed\n * @returns the build rrdom\n */\nexport function buildFromDom(\n  dom: Document,\n  domMirror: NodeMirror = createNodeMirror(),\n  rrdom: IRRDocument = new RRDocument(),\n) {\n  function walk(node: Node, parentRRNode: IRRNode | null) {\n    const rrNode = buildFromNode(node, rrdom, domMirror, parentRRNode);\n    if (rrNode === null) return;\n    if (\n      // if the parentRRNode isn't a RRIFrameElement\n      parentRRNode?.nodeName !== 'IFRAME' &&\n      // if node isn't a shadow root\n      node.nodeType !== NodeType.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parentRRNode?.appendChild(rrNode);\n      rrNode.parentNode = parentRRNode;\n      rrNode.parentElement = parentRRNode as RRElement;\n    }\n\n    if (node.nodeName === 'IFRAME') {\n      const iframeDoc = (node as HTMLIFrameElement).contentDocument;\n      iframeDoc && walk(iframeDoc, rrNode);\n    } else if (\n      node.nodeType === NodeType.DOCUMENT_NODE ||\n      node.nodeType === NodeType.ELEMENT_NODE ||\n      node.nodeType === NodeType.DOCUMENT_FRAGMENT_NODE\n    ) {\n      // if the node is a shadow dom\n      if (\n        node.nodeType === NodeType.ELEMENT_NODE &&\n        (node as HTMLElement).shadowRoot\n      )\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        walk((node as HTMLElement).shadowRoot!, rrNode);\n      node.childNodes.forEach((childNode) => walk(childNode, rrNode));\n    }\n  }\n  walk(dom, null);\n  return rrdom;\n}\n\nexport function createMirror(): Mirror {\n  return new Mirror();\n}\n\n// based on Mirror from rrweb-snapshots\nexport class Mirror implements IMirror<RRNode> {\n  private idNodeMap: Map<number, RRNode> = new Map();\n  private nodeMetaMap: WeakMap<RRNode, serializedNodeWithId> = new WeakMap();\n\n  getId(n: RRNode | undefined | null): number {\n    if (!n) return -1;\n\n    const id = this.getMeta(n)?.id;\n\n    // if n is not a serialized Node, use -1 as its id.\n    return id ?? -1;\n  }\n\n  getNode(id: number): RRNode | null {\n    return this.idNodeMap.get(id) || null;\n  }\n\n  getIds(): number[] {\n    return Array.from(this.idNodeMap.keys());\n  }\n\n  getMeta(n: RRNode): serializedNodeWithId | null {\n    return this.nodeMetaMap.get(n) || null;\n  }\n\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n: RRNode) {\n    const id = this.getId(n);\n    this.idNodeMap.delete(id);\n\n    if (n.childNodes) {\n      n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n    }\n  }\n  has(id: number): boolean {\n    return this.idNodeMap.has(id);\n  }\n\n  hasNode(node: RRNode): boolean {\n    return this.nodeMetaMap.has(node);\n  }\n\n  add(n: RRNode, meta: serializedNodeWithId) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n);\n    this.nodeMetaMap.set(n, meta);\n  }\n\n  replace(id: number, n: RRNode) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n, meta);\n    }\n    this.idNodeMap.set(id, n);\n  }\n\n  reset() {\n    this.idNodeMap = new Map();\n    this.nodeMetaMap = new WeakMap();\n  }\n}\n\n/**\n * Get a default serializedNodeWithId value for a RRNode.\n * @param id - the serialized id to assign\n */\nexport function getDefaultSN(node: IRRNode, id: number): serializedNodeWithId {\n  switch (node.RRNodeType) {\n    case RRNodeType.Document:\n      return {\n        id,\n        type: node.RRNodeType,\n        childNodes: [],\n      };\n    case RRNodeType.DocumentType: {\n      const doctype = node as IRRDocumentType;\n      return {\n        id,\n        type: node.RRNodeType,\n        name: doctype.name,\n        publicId: doctype.publicId,\n        systemId: doctype.systemId,\n      };\n    }\n    case RRNodeType.Element:\n      return {\n        id,\n        type: node.RRNodeType,\n        tagName: (node as IRRElement).tagName.toLowerCase(), // In rrweb data, all tagNames are lowercase.\n        attributes: {},\n        childNodes: [],\n      };\n    case RRNodeType.Text:\n      return {\n        id,\n        type: node.RRNodeType,\n        textContent: (node as IRRText).textContent || '',\n      };\n    case RRNodeType.Comment:\n      return {\n        id,\n        type: node.RRNodeType,\n        textContent: (node as IRRComment).textContent || '',\n      };\n    case RRNodeType.CDATA:\n      return {\n        id,\n        type: node.RRNodeType,\n        textContent: '',\n      };\n  }\n}\n\n/**\n * Print the RRDom as a string.\n * @param rootNode - the root node of the RRDom tree\n * @param mirror - a rrweb or rrdom Mirror\n * @returns printed string\n */\nexport function printRRDom(rootNode: IRRNode, mirror: IMirror<IRRNode>) {\n  return walk(rootNode, mirror, '');\n}\nfunction walk(node: IRRNode, mirror: IMirror<IRRNode>, blankSpace: string) {\n  let printText = `${blankSpace}${mirror.getId(node)} ${node.toString()}\\n`;\n  if (node.RRNodeType === RRNodeType.Element) {\n    const element = node as IRRElement;\n    if (element.shadowRoot)\n      printText += walk(element.shadowRoot, mirror, blankSpace + '  ');\n  }\n  for (const child of node.childNodes)\n    printText += walk(child, mirror, blankSpace + '  ');\n  if (node.nodeName === 'IFRAME')\n    printText += walk(\n      (node as RRIFrameElement).contentDocument,\n      mirror,\n      blankSpace + '  ',\n    );\n  return printText;\n}\n\nexport { RRNode };\n\nexport { diff, createOrGetNode, type ReplayerHandler } from './diff';\nexport * from './document';\n"],
  "mappings": "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",
  "names": ["__defProp", "__defNormalProp", "obj", "key", "value", "__publicField", "NodeType", "NodeType2", "Mirror$1", "n", "_a", "id", "childNode", "node2", "meta", "oldNode", "createMirror", "Mirror", "getDefaultExportFromCjs", "x2", "getAugmentedNamespace", "f", "a", "a2", "k", "d", "picocolors_browser", "x", "create", "picocolors_browserExports", "__viteBrowserExternal", "__viteBrowserExternal$1", "require$$2", "pico", "terminalHighlight$1", "CssSyntaxError$3", "CssSyntaxError", "message", "line", "column", "source", "file", "plugin2", "color", "css", "lines", "start", "end", "maxWidth", "mark", "aside", "bold", "gray", "red", "text", "str", "index2", "number", "gutter", "spacing", "code", "cssSyntaxError", "symbols", "DEFAULT_RAW", "capitalize", "Stringifier$2", "builder", "semicolon", "name", "params", "detect", "buf", "depth", "indent", "step", "between", "after", "last", "i", "child", "before", "left", "right", "string", "own", "parent", "root2", "method", "p", "parts", "prop", "raw", "stringifier", "Stringifier$1", "stringify$4", "stringify_1", "isClean$2", "my$2", "CssSyntaxError$2", "Stringifier2", "stringify$3", "cloneNode", "cloned", "type", "j", "Node$4", "defaults", "error", "s", "add", "overrides", "keepBetween", "opts", "next", "stringRepresentation", "pos", "defaultType", "nodes", "bookmark", "foundSelf", "result2", "_", "inputs", "fixed", "emitInputs", "inputsNextIndex", "inputId", "input2", "stringifier2", "data", "node", "Node$3", "Declaration$4", "__spreadProps", "__spreadValues", "declaration", "urlAlphabet", "customAlphabet", "alphabet", "defaultSize", "size", "nanoid$1", "nonSecure", "SourceMapConsumer$2", "SourceMapGenerator$2", "existsSync", "readFileSync", "dirname$1", "join", "fromBase64", "PreviousMap$2", "prev", "baseCharsetUri", "baseUri", "charsetUri", "uri", "encoding", "sourceMapString", "map", "comments", "path", "prevPath", "previousMap", "SourceMapConsumer$1", "SourceMapGenerator$1", "fileURLToPath", "pathToFileURL$1", "isAbsolute", "resolve$1", "nanoid", "terminalHighlight", "CssSyntaxError$1", "PreviousMap$1", "fromOffsetCache", "sourceMapAvailable$1", "pathAvailable$1", "Input$4", "endLine", "endColumn", "origin", "offset", "lastLine", "lineToIndex", "prevIndex", "l", "min", "max", "mid", "consumer", "from", "to", "fromUrl", "json", "input", "SourceMapConsumer", "SourceMapGenerator", "dirname", "relative", "resolve", "sep", "pathToFileURL", "Input$3", "sourceMapAvailable", "pathAvailable", "MapGenerator$2", "stringify2", "cssString", "content", "eol", "noSource", "mapping", "annotation", "cached", "already", "fileURL", "url", "mapGenerator", "Node$2", "Comment$4", "comment", "isClean$1", "my$1", "Declaration$3", "Comment$3", "Node$1", "parse$4", "Rule$4", "AtRule$4", "Root$6", "cleanSource", "markDirtyUp", "Container$7", "Container", "children", "callback", "iterator", "condition", "args", "cb", "other", "exist", "existIndex", "sample", "pattern", "decl", "e", "selector", "dependant", "container", "Container$6", "LazyResult$4", "Processor$3", "Document$3", "document$1", "Warning$2", "text", "opts", "range", "opt", "warning", "Warning$1", "Result$3", "processor2", "root2", "warning2", "i", "result", "SINGLE_QUOTE", "DOUBLE_QUOTE", "BACKSLASH", "SLASH", "NEWLINE", "SPACE", "FEED", "TAB", "CR", "OPEN_SQUARE", "CLOSE_SQUARE", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", "OPEN_CURLY", "CLOSE_CURLY", "SEMICOLON", "ASTERISK", "COLON", "AT", "RE_AT_END", "RE_WORD_END", "RE_BAD_BRACKET", "RE_HEX_ESCAPE", "tokenize", "input2", "options", "css", "ignore", "code", "next", "quote", "content", "escape", "escaped", "escapePos", "prev", "n", "currentToken", "length", "pos", "buffer", "returned", "position", "unclosed", "what", "endOfFile", "nextToken", "ignoreUnclosed", "controlChar", "back", "token", "Container$5", "container", "AtRule$3", "defaults", "children", "atRule", "Container$4", "LazyResult$3", "Processor$2", "Root$5", "child", "sample", "type", "nodes", "node2", "index2", "dependant", "root", "list$2", "string", "spaces", "separators", "last", "array", "current", "split", "func", "inQuote", "prevQuote", "letter", "list_1", "Container$3", "list$1", "Rule$3", "values", "match", "sep2", "rule", "Declaration$2", "declaration", "tokenizer2", "Comment$2", "comment", "AtRule$2", "Root$4", "Rule$2", "SAFE_COMMENT_NEIGHBOR", "findLastWithPosition", "tokens", "Parser$1", "shift", "open", "params", "brackets", "colon", "founded", "j", "element", "customProperty", "firstSpaces", "cache", "str", "offset", "start", "end", "bracket", "prop", "value", "clean", "raw", "all", "lastTokenType", "from", "result2", "parser", "Container$2", "Parser2", "Input$2", "input", "parse$3", "parser2", "e", "parse_1", "isClean", "my", "symbols", "MapGenerator$1", "mapGenerator", "stringify$2", "stringify_1", "Container$1", "Document$2", "document$1", "Result$2", "result", "parse$2", "parse_1", "Root$3", "root", "TYPE_TO_CLASS_NAME", "PLUGIN_PROPS", "NOT_VISITORS", "CHILDREN", "isPromise", "obj", "getEvents", "node2", "key", "type", "toStack", "events", "cleanMarks", "isClean", "i", "postcss$2", "LazyResult$2", "LazyResult", "processor2", "css", "opts", "root2", "parser2", "error", "my", "Container$1", "__spreadProps", "__spreadValues", "plugin2", "onRejected", "onFinally", "err", "add", "cb", "event", "filter", "promise", "stack", "e", "visitor", "roots", "subRoot", "str", "stringify$2", "data", "MapGenerator$1", "onFulfilled", "visitors", "visit2", "iterator", "child", "dependant", "lazyResult", "Document$2", "MapGenerator2", "mapGenerator", "stringify$1", "stringify_1", "parse$1", "parse_1", "Result$1", "result", "NoWorkResult$1", "processor2", "css", "opts", "root2", "str", "stringify$1", "self", "map", "MapGenerator2", "generatedCSS", "generatedMap", "onRejected", "onFinally", "onFulfilled", "parser2", "error", "noWorkResult", "NoWorkResult2", "LazyResult$1", "lazyResult", "Document$1", "document$1", "Root$2", "root", "Processor$1", "plugins", "normalized", "i", "plugin2", "processor", "Declaration$1", "declaration", "PreviousMap2", "previousMap", "Comment$1", "comment", "AtRule$1", "atRule", "Input$1", "input", "Root$1", "Rule$1", "rule", "fromJSON$1", "json", "inputs", "_a", "ownInputs", "defaults", "__objRest", "input2", "inputHydrated", "__spreadProps", "__spreadValues", "_b", "inputId", "source", "fromJSON_1", "CssSyntaxError2", "cssSyntaxError", "Declaration2", "LazyResult2", "Container2", "container", "Processor2", "stringify", "stringify_1", "fromJSON", "Document2", "Warning2", "warning", "Comment2", "AtRule2", "Result2", "Input2", "parse", "list", "list_1", "Rule2", "Root2", "Node2", "node", "postcss", "name", "initializer", "warningPrinted", "creator", "args", "transformer", "cache", "processOpts", "pluginOpts", "postcss_1", "postcss$1", "getDefaultExportFromCjs", "parseCSSText", "cssText", "res", "listDelimiter", "propertyDelimiter", "item", "tmp", "camelize", "toCSSText", "style", "properties", "value", "normalizedName", "hyphenate", "camelizeRE", "CUSTOM_PROPERTY_REGEX", "_", "c", "hyphenateRE", "BaseRRNode", "_args", "__publicField", "childNodes", "childIterator", "_newChild", "_refChild", "_node", "BaseRRDocument", "RRNodeType", "newChild", "nodeType", "s", "child", "appendChild", "refChild", "insertBefore", "removeChild", "content", "publicId", "doctype", "_namespace", "_qualifiedName", "_doctype", "qualifiedName", "systemId", "BaseRRDocumentType", "tagName", "element", "BaseRRElement", "_namespaceURI", "data", "text", "BaseRRText", "BaseRRComment", "CDATASection", "BaseRRCDATASection", "textContent", "ClassList", "newClassName", "priority", "attribute", "_init", "shadowRoot", "_event", "attributeString", "BaseRRMediaElement", "BaseRRDialogElement", "classText", "onChange", "classNames", "className", "classes", "parent", "NodeType", "NodeType2", "NAMESPACES", "SVGTagMap", "createdNodeSet", "diff", "oldTree", "newTree", "replayer", "rrnodeMirror", "diffBeforeUpdatingChildren", "diffChildren", "diffAfterUpdatingChildren", "sameNodeType", "calibratedOldTree", "createOrGetNode", "nodeMatching", "newMeta", "oldElement", "newRRElement", "oldContentDocument", "diffProps", "scrollData", "oldMediaElement", "newMediaRRElement", "rrCanvasElement", "image", "ctx", "canvasMutation", "styleSheet", "dialog", "rrDialog", "wasOpen", "wasModal", "shouldBeOpen", "shouldBeModal", "modalChanged", "openChanged", "e", "oldAttributes", "newAttributes", "newValue", "sn", "oldChildren", "newChildren", "oldStartIndex", "oldEndIndex", "newStartIndex", "newEndIndex", "oldStartNode", "oldEndNode", "newStartNode", "newEndNode", "oldIdToIndex", "indexInOld", "oldChild", "nodeToMove", "newNode", "referenceRRNode", "referenceNode", "rrNode", "domMirror", "nodeId", "node1", "node2", "rrdomMirror", "node1Id", "node2Id", "RRDocument", "mirror", "createMirror", "documentTypeNode", "RRDocumentType", "upperTagName", "RRMediaElement", "RRIFrameElement", "RRCanvasElement", "RRStyleElement", "RRDialogElement", "RRElement", "commentNode", "RRComment", "sectionNode", "RRCDATASection", "textNode", "RRText", "getValidTagName", "buildFromNode", "rrdom", "parentRRNode", "documentType", "elementNode", "rrElement", "getDefaultSN", "buildFromDom", "dom", "createNodeMirror", "walk", "iframeDoc", "childNode", "Mirror", "n", "id", "meta", "oldNode", "printRRDom", "rootNode", "blankSpace", "printText"]
}
